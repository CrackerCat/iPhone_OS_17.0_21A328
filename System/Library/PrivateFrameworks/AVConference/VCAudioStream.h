//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCStatisticsCollector, DTMFEventHandler, NSMutableArray, NSNumber, NSObject, NSString, VCAudioIO, VCAudioPayload, VCAudioPowerSpectrumSource, VCAudioTransmitter, VCTelephonyInterface, WRMClient;
@protocol OS_dispatch_semaphore, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface VCAudioStream
{
    int _clientPid;	// 648 = 0x288
    int numBufferBytesAvailable;	// 652 = 0x28c
    NSObject<OS_dispatch_source> *pausedAudioHeartBeat;	// 656 = 0x290
    double dAudioHostTime;	// 664 = 0x298
    _Bool lastVoiceActive;	// 672 = 0x2a0
    double _remoteMediaStallTimeout;	// 680 = 0x2a8
    unsigned int conferenceID;	// 688 = 0x2b0
    unsigned int lastInputAudioTimeStamp;	// 692 = 0x2b4
    unsigned int lastSentAudioSampleTime;	// 696 = 0x2b8
    struct _opaque_pthread_rwlock_t stateLock;	// 704 = 0x2c0
    NSMutableArray *audioPayloads;	// 904 = 0x388
    struct tagVCAudioFrameFormat _vpioFormat;	// 912 = 0x390
    _Bool _useExternalIO;	// 960 = 0x3c0
    int preferredAudioCodec;	// 964 = 0x3c4
    DTMFEventHandler *dtmfEventHandler;	// 968 = 0x3c8
    WRMClient *wrmClient;	// 976 = 0x3d0
    VCAudioPayload *currentAudioPayload;	// 984 = 0x3d8
    VCAudioPayload *currentDTXPayload;	// 992 = 0x3e0
    VCAudioTransmitter *_audioTransmitter;	// 1000 = 0x3e8
    int _reportingModuleID;	// 1008 = 0x3f0
    VCTelephonyInterface *_telephonyInterface;	// 1016 = 0x3f8
    _Bool isValid;	// 1024 = 0x400
    int deviceRole;	// 1028 = 0x404
    VCAudioIO *_audioIO;	// 1032 = 0x408
    _Bool _isMuted;	// 1040 = 0x410
    unsigned int *_reportingSSRCList;	// 1048 = 0x418
    unsigned int _reportingSSRCCount;	// 1056 = 0x420
    _Bool _sendActiveVoiceOnly;	// 1060 = 0x424
    _Bool _currentDTXEnable;	// 1061 = 0x425
    NSNumber *_targetStreamID;	// 1064 = 0x428
    _Bool _rtpEnabledBeforeInterrupt;	// 1072 = 0x430
    _Bool _rtcpEnabledBeforeInterrupt;	// 1073 = 0x431
    unsigned int _pullAudioSamplesCount;	// 1076 = 0x434
    struct _VCAudioStreamSinkContext _sinkContext;	// 1080 = 0x438
    struct _VCAudioStreamSourceContext _sourceContext;	// 1096 = 0x448
    long long _inputAudioPowerSpectrumToken;	// 1312 = 0x520
    long long _outputAudioPowerSpectrumToken;	// 1320 = 0x528
    VCAudioPowerSpectrumSource *_inputAudioPowerSpectrumSource;	// 1328 = 0x530
    VCAudioPowerSpectrumSource *_outputAudioPowerSpectrumSource;	// 1336 = 0x538
    unsigned int _abnormalOWRDCount;	// 1344 = 0x540
    double _lastAbnormalOWRDVerificationTime;	// 1352 = 0x548
    double _lastNetworkHealthPrintTime;	// 1360 = 0x550
    double _packetLossRateAccum;	// 1368 = 0x558
    int _packetLossRateCount;	// 1376 = 0x560
    double _packetLossRate5Secs;	// 1384 = 0x568
    double _timeLastPLR5Secs;	// 1392 = 0x570
    _Bool _anbrEnabled;	// 1400 = 0x578
    _Bool _anbrActive;	// 1401 = 0x579
    struct ifnet_interface_advisory _lastNWConnectionNotification;	// 1408 = 0x580
    unsigned int _awdTimeTransmitter;	// 1504 = 0x5e0
    unsigned int _lastNoVoiceActivityPacketCount;	// 1508 = 0x5e4
    struct opaqueCMSimpleQueue *_syncSourceDelegateQueue;	// 1512 = 0x5e8
    struct __CFArray *_syncSourceDelegates;	// 1520 = 0x5f0
    _Bool _isTelephony;	// 1528 = 0x5f8
    unsigned int _uplinkRateAdaptationMaxAllowedBitrate;	// 1532 = 0x5fc
    _Bool _isVoiceProcessingAt24KSupported;	// 1536 = 0x600
    _Bool _isRamStadSRCEnabled;	// 1537 = 0x601
    unsigned int _preferredMediaBitrate;	// 1540 = 0x604
    AVCStatisticsCollector *_statsCollector;	// 1544 = 0x608
    _Bool _enableAudioPowerSpectrum;	// 1552 = 0x610
    unsigned int _audioSessionId;	// 1556 = 0x614
    struct os_unfair_lock_s _delegateLock;	// 1560 = 0x618
    NSObject<OS_dispatch_semaphore> *_runLock;	// 1568 = 0x620
    unsigned int _cachedConnectionMTU;	// 1576 = 0x628
    unsigned int _constantTransportOverhead;	// 1580 = 0x62c
}

+ (_Bool)shouldUseRandomRTPTimestampForMode:(int)arg1;	// IMP=0x00100000000bef1a
+ (id)capabilities;	// IMP=0x00100000000bc913
+ (id)supportedAudioPayloads;	// IMP=0x00100000000bc7fe
+ (void)terminateProcess:(id)arg1 terminateSource:(id)arg2 agent:(struct opaqueRTCReporting *)arg3;	// IMP=0x00100000000b946a
+ (unsigned char)audioIODirectionWithMediaStreamDirection:(long long)arg1;	// IMP=0x00100000000b928d
+ (int)operatingModeForAudioStreamMode:(long long)arg1;	// IMP=0x00100000000b9216
+ (id)newPayloadConfigForCodecConfig:(id)arg1 streamConfig:(id)arg2 inputSampleRate:(unsigned int)arg3;	// IMP=0x00100000000b7699
+ (unsigned int)audioIOTypeForMode:(long long)arg1;	// IMP=0x00100000000b761d
+ (unsigned int)audioChannelCountForMode:(id)arg1;	// IMP=0x00100000000b75ae
+ (_Bool)shouldUseAACELDSBRForMode:(long long)arg1;	// IMP=0x00100000000b759d
+ (_Bool)isVoLTE:(long long)arg1;	// IMP=0x00100000002a795b
+ (_Bool)isTelephony:(long long)arg1;	// IMP=0x00100000002a7941
@property(nonatomic) unsigned int lastNoVoiceActivityPacketCount; // @synthesize lastNoVoiceActivityPacketCount=_lastNoVoiceActivityPacketCount;
@property(retain, nonatomic) NSNumber *targetStreamID; // @synthesize targetStreamID=_targetStreamID;
@property(nonatomic, getter=isCurrentDTXEnabled) _Bool currentDTXEnable; // @synthesize currentDTXEnable=_currentDTXEnable;
@property(retain) VCAudioIO *audioIO; // @synthesize audioIO=_audioIO;
@property(retain) VCAudioTransmitter *audioTransmitter; // @synthesize audioTransmitter=_audioTransmitter;
@property(nonatomic) int deviceRole; // @synthesize deviceRole;
@property(nonatomic) _Bool isValid; // @synthesize isValid;
@property(readonly) unsigned int conferenceID; // @synthesize conferenceID;
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo *)arg1;	// IMP=0x00000000000c52a3
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x00000000000c51e8
- (void)collectTxChannelMetrics:(CDStruct_b671a7c4 *)arg1;	// IMP=0x00000000000c5142
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1;	// IMP=0x00000000000c4fca
- (void)collectRxChannelMetrics:(CDStruct_b671a7c4 *)arg1 interval:(float)arg2;	// IMP=0x00000000000c4fb8
- (void)serverDidDie;	// IMP=0x00000000000c4f63
- (void)didResumeAudioIO:(id)arg1;	// IMP=0x00000000000c4ea3
- (void)didSuspendAudioIO:(id)arg1;	// IMP=0x00000000000c4d82
- (void)unregisterCodecRateModeChangeNotifications;	// IMP=0x00000000000c4d68
- (void)registerActiveAudioStreamChangeNotifications;	// IMP=0x00000000000c4b6d
- (void)registerCodecRateModeChangeNotifications;	// IMP=0x00000000000c4ac0
- (long long)getSyncSourceSampleRate;	// IMP=0x00000000000c4aad
- (void)waitIdleForSyncSourceDelegates;	// IMP=0x00000000000c4705
- (void)removeSyncSourceDelegate:(id)arg1;	// IMP=0x00000000000c4344
- (void)addSyncSourceDelegate:(id)arg1;	// IMP=0x00000000000c3f25
- (void)setCanProcessAudio:(_Bool)arg1;	// IMP=0x00000000000c3f13
- (_Bool)canProcessAudio;	// IMP=0x00000000000c3f01
- (void)pushAudioSamples:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000000c3dd7
- (void)pullAudioSamples:(struct opaqueVCAudioBufferList *)arg1;	// IMP=0x00000000000c3720
- (int)getConnectionTypeForStreamMode:(long long)arg1;	// IMP=0x00000000000c366c
- (void)reportingAlgosAudioStreamEvent:(unsigned short)arg1;	// IMP=0x00000000000c357b
- (void)reportingAudioStreamEvent:(unsigned short)arg1;	// IMP=0x00000000000c3343
- (void)addStreamStartingMetricsToReport:(const struct __CFDictionary *)arg1;	// IMP=0x00000000000c3193
- (void)updateCodecPayloadAndBitrateForStartEvent:(int *)arg1 bitrate:(unsigned int *)arg2;	// IMP=0x00000000000c2bc5
- (void)gatherRealtimeStats:(struct __CFDictionary *)arg1;	// IMP=0x00000000000c2b79
- (id)getReportingServiceID;	// IMP=0x00000000000c2b48
- (struct __CFString *)getReportingClientName;	// IMP=0x00000000000c2a4c
- (int)getReportingClientType;	// IMP=0x00000000000c2979
- (struct __CFDictionary *)getClientSpecificUserInfo:(id)arg1;	// IMP=0x00000000000c24c6
- (_Bool)isStandaloneStreamClientSpecificUserInfoSupported;	// IMP=0x00000000000c24aa
- (void)setupReportingAgent:(id)arg1;	// IMP=0x00000000000c20e1
- (void)setupPeriodicReporting;	// IMP=0x00000000000c2040
- (void)setStreamIDs:(id)arg1 repairStreamIDs:(id)arg2;	// IMP=0x00000000000c1d0f
- (double)rtcpHeartbeatLeeway;	// IMP=0x00000000000c1d01
- (void)onSendRTCPPacket;	// IMP=0x00000000000c1b2a
- (void)onRTCPTimeout;	// IMP=0x00000000000c1b01
- (void)onRTPTimeout;	// IMP=0x00000000000c1afb
- (void)onResumeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c178e
- (void)onPauseWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c1539
- (void)redundancyController:(id)arg1 redundancyPercentageDidChange:(unsigned int)arg2;	// IMP=0x00000000000c151c
- (void)onStopWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c1368
- (void)onStartWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000c0dfa
- (void)deregisterAggregationHandlers;	// IMP=0x00000000000c0dde
- (void)registerAggregationHandlers;	// IMP=0x00000000000c0cd6
- (_Bool)shouldRegisterReportingPeriodicTask;	// IMP=0x00000000000c0cb0
- (_Bool)shouldReportNetworkInterfaceType;	// IMP=0x00000000000c0c99
- (_Bool)shouldResetRTPTimestampOnStart;	// IMP=0x00000000000c0c82
- (void)updateRateAdaptationWithNetworkNotification:(struct ifnet_interface_advisory *)arg1;	// IMP=0x00000000000c0c62
- (_Bool)onConfigureStreamWithConfiguration:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000bf090
- (int)getRTPTimeStampRateScaleFactor;	// IMP=0x00000000000bf020
- (void)setPreferredMediaBitrateWithConfiguration:(id)arg1;	// IMP=0x00000000000bef3b
- (id)streamIDsFromTransport;	// IMP=0x00000000000bece3
- (void)cleanupBeforeReconfigure:(id)arg1;	// IMP=0x00000000000be9f0
- (void)createReportSSRCListWithStreamConfigs:(id)arg1;	// IMP=0x00000000000be7bc
- (id)createTransportWithStreamConfig:(id)arg1;	// IMP=0x00000000000be25e
- (_Bool)setupSourceTransport:(id)arg1;	// IMP=0x00000000000be154
- (_Bool)validateAudioStreamConfigurations:(id)arg1;	// IMP=0x00000000000bdcf2
- (void)onCallIDChanged;	// IMP=0x00000000000bdbc8
- (id)supportedPayloads;	// IMP=0x00000000000bdbaf
- (_Bool)shouldUseNWConnectionBackingSocket;	// IMP=0x00000000000bdba7
@property(readonly, nonatomic) unsigned int actualAudioSendingBitrate;
- (void)setTargetBitrate:(unsigned int)arg1 rateChangeCounter:(unsigned int)arg2;	// IMP=0x00000000000bdb44
- (void)setVCStatistics:(struct tagVCStatisticsMessage)arg1;	// IMP=0x00000000000bdb03
- (CDUnknownFunctionPointerType)pullSamplesCallback;	// IMP=0x00000000000bcdc5
@property(readonly, nonatomic) void *realtimeSourceContext;
@property(nonatomic) float volume;
@property(nonatomic, getter=isRemoteMuted) _Bool remoteMuted;
@property(nonatomic, getter=isMuted) _Bool muted; // @synthesize muted=_isMuted;
@property(nonatomic) _Bool sendActiveVoiceOnly;
- (void)setStreamDirection:(long long)arg1;	// IMP=0x00000000000bcb23
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;	// IMP=0x00000000000bcaa6
- (void)cleanupAudio;	// IMP=0x00000000000bca42
- (void)prepareAudio;	// IMP=0x00000000000bca15
- (void)setFrequencyMeteringEnabled:(_Bool)arg1 meterType:(int)arg2;	// IMP=0x00000000000bc9cb
- (_Bool)isFrequencyMeteringEnabled:(int)arg1;	// IMP=0x00000000000bc9b6
- (struct _METER_INFO *)meterWithType:(int)arg1;	// IMP=0x00000000000bc994
- (void)stopSendDTMFEvent;	// IMP=0x00000000000bc797
- (void)sendDTMFEvent:(id)arg1;	// IMP=0x00000000000bc72a
- (_Bool)bitrateIsAudioOnly;	// IMP=0x00000000000bc704
- (_Bool)createAudioTransmitter:(long long)arg1 streamIDs:(id)arg2;	// IMP=0x00000000000bbce0
- (unsigned int)packetExpirationTimeForStreamConfig:(id)arg1 codecType:(long long)arg2;	// IMP=0x00000000000bbbee
- (_Bool)createAudioReceiver;	// IMP=0x00000000000bab5c
- (void)configureAudioJBAlgos:(struct tagVCAudioReceiverConfig *)arg1;	// IMP=0x00000000000baa1d
- (int)getPacketsPerBundleForStreamConfig:(id)arg1;	// IMP=0x00000000000ba8c1
- (void)dealloc;	// IMP=0x00000000000ba22f
- (_Bool)setupAudioStreamWithClientPid:(int)arg1 enableAudioPowerSpectrum:(_Bool)arg2;	// IMP=0x00000000000b975c
- (id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id *)arg3;	// IMP=0x00000000000b9629
- (id)initWithClientPid:(int)arg1 ssrc:(unsigned int)arg2 transportSessionID:(unsigned int)arg3;	// IMP=0x00000000000b959c
- (id)initWithClientPid:(int)arg1 ssrc:(unsigned int)arg2;	// IMP=0x00000000000b950d
- (id)initWithClientPid:(int)arg1;	// IMP=0x00000000000b947e
- (void)setupAudioPowerSpectrum;	// IMP=0x00000000000b9388
- (void)setDeviceRoleForAudioStreamMode:(long long)arg1 direction:(long long)arg2;	// IMP=0x00000000000b92ad
- (void)didEnterState:(int)arg1 oldState:(int)arg2;	// IMP=0x00000000000b91eb
- (void)willExitState:(int)arg1 newState:(int)arg2;	// IMP=0x00000000000b91cd
- (void)updateSyncSourceState:(int)arg1;	// IMP=0x00000000000b9150
- (double)lastReceivedRTCPPacketTime;	// IMP=0x00000000000b8fc6
- (double)lastReceivedRTPPacketTime;	// IMP=0x00000000000b8fb0
- (_Bool)setReceiverPayloads;	// IMP=0x00000000000b85eb
- (void)setDTXPayload:(id)arg1;	// IMP=0x00000000000b8302
- (id)addAudioPayload:(int)arg1;	// IMP=0x00000000000b828b
- (id)configForPayloadType:(int)arg1;	// IMP=0x00000000000b80d6
- (unsigned int)preferredAudioBitrateForPayload:(int)arg1;	// IMP=0x00000000000b745d
- (void)getCodecConfigForPayload:(int)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00000000000b710c
- (id)codecConfigForOpusWithStreamConfig:(id)arg1;	// IMP=0x00000000000b708d
- (_Bool)setupPayloads;	// IMP=0x00000000000b6d0f
- (id)getSupportedPayloads;	// IMP=0x00000000000b697e
- (void)stopAudioWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000b67dd
- (void)startAudioWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000000b6401
- (_Bool)generateRTCPXRVoIPMetricsReports:(struct tagVCRTCPXRVoIPMetricsReport *)arg1 reportCount:(char *)arg2;	// IMP=0x00000000000b6017
- (_Bool)generateRTCPXRSummaryReports:(struct tagVCRTCPXRSummaryReport *)arg1 reportCount:(char *)arg2;	// IMP=0x00000000000b5d8e
- (void)_computeInternalFormatForStreamConfigurations:(id)arg1;	// IMP=0x00000000000b59fc
- (unsigned int)internalSampleRateForCodecType:(long long)arg1;	// IMP=0x00000000000b593d
- (unsigned int)computePacketTimestampWithInputTimestamp:(unsigned int)arg1 numSamples:(int)arg2 hostTime:(double)arg3;	// IMP=0x00000000000b56e0
- (void)rateAdaptation:(id)arg1 targetBitrateDidChange:(unsigned int)arg2 rateChangeCounter:(unsigned int)arg3;	// IMP=0x00000000002a94f6
- (void)telephonyInterface:(id)arg1 anbrRecommendation:(unsigned int)arg2 forDirection:(long long)arg3;	// IMP=0x00000000002a93a3
- (void)telephonyInterface:(id)arg1 anbrActivationUpdate:(_Bool)arg2;	// IMP=0x00000000002a9378
- (void)handleANBR:(unsigned int)arg1 forDirection:(long long)arg2;	// IMP=0x00000000002a8dfc
- (int)selectCodecBandwidthForCodecRateMode:(int)arg1;	// IMP=0x00000000002a8b1e
- (void)handleDownlinkANBR:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002a8af3
- (void)handleUplinkANBR:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002a8a46
- (void)handleCodecModeChangeEvent:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002a84d2
- (void)notifyCodecModeChangeEvent:(struct _VCAudioCodecModeChangeEvent)arg1 didUpdateBandwidth:(_Bool)arg2 didUpdateBitrate:(_Bool)arg3;	// IMP=0x00000000002a847b
- (void)queryAnbrBitrate:(unsigned int)arg1 forDirection:(long long)arg2;	// IMP=0x00000000002a81c3
- (void)setRemoteCodecTypeAndSampleRate:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002a8156
- (void)notifyCodecModeChangeToCT:(struct _VCAudioCodecModeChangeEvent)arg1;	// IMP=0x00000000002a8124
- (void)configureCellularFeatures;	// IMP=0x00000000002a7fab
- (_Bool)isVoLTERateAdaptationEnabled;	// IMP=0x00000000002a7eca
- (void)setJitterBufferMode:(int)arg1;	// IMP=0x00000000002a7df6
- (void)handleWiFiToCelluarHandover;	// IMP=0x00000000002a7d43
- (void)handleCellularToWiFiHandover;	// IMP=0x00000000002a7ca0
- (void)setIsLocalCelluar:(unsigned int)arg1;	// IMP=0x00000000002a7971

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

