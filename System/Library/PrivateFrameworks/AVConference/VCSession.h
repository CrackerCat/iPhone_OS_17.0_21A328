//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVCRateController, NSArray, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, VCAudioCaptionsCoordinator, VCControlChannelMultiWay, VCMediaRecorder, VCNetworkFeedbackController, VCRateControlMediaController, VCSecurityKeyManager, VCSessionBitrateArbiter, VCSessionConfiguration, VCSessionDownlinkBandwidthAllocator, VCSessionMessaging, VCSessionParticipant, VCSessionParticipantLocal, VCSessionParticipantRemote, VCSessionPresentationInfo, VCSessionStatsController, VCSwitchManager, VCTransportSession;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, OS_nw_activity, VCConnectionProtocol, VCSessionDelegate;

__attribute__((visibility("hidden")))
@interface VCSession
{
    unsigned int _state;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_sessionQueue;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_notificationQueue;	// 104 = 0x68
    id <VCSessionDelegate> _delegate;	// 112 = 0x70
    NSString *_uuid;	// 120 = 0x78
    NSString *_idsDestination;	// 128 = 0x80
    VCControlChannelMultiWay *_controlChannel;	// 136 = 0x88
    VCSessionMessaging *_sessionMessaging;	// 144 = 0x90
    VCSessionConfiguration *_configuration;	// 152 = 0x98
    VCSessionParticipantLocal *_localParticipant;	// 160 = 0xa0
    NSMutableDictionary *_remoteParticipantsMapByUUID;	// 168 = 0xa8
    NSMutableDictionary *_remoteParticipantsMapByServerID;	// 176 = 0xb0
    int _reportUpdateInterval;	// 184 = 0xb8
    int _reportReportFrequency;	// 188 = 0xbc
    VCSessionStatsController *_sessionStatsController;	// 192 = 0xc0
    VCNetworkFeedbackController *_feedbackController;	// 200 = 0xc8
    NSMutableArray *_startingParticipants;	// 208 = 0xd0
    NSMutableSet *_stoppingParticipants;	// 216 = 0xd8
    NSMutableArray *_initializingParticipants;	// 224 = 0xe0
    VCSecurityKeyManager *_securityKeyManager;	// 232 = 0xe8
    VCTransportSession *_transportSession;	// 240 = 0xf0
    id <VCConnectionProtocol> _currentActiveConnection;	// 248 = 0xf8
    unsigned int _transportSessionID;	// 256 = 0x100
    _Bool _localSourceNeedsReset;	// 260 = 0x104
    struct _VCSessionOneToOneSettings _oneToOneSettings;	// 264 = 0x108
    _Bool _switchFromGFTToOneToOneEnabled;	// 304 = 0x130
    double _remoteMediaStallReconnectTimeout;	// 312 = 0x138
    double _oneToOneSwitchStartTime;	// 320 = 0x140
    _Bool _isOneToOneInitiator;	// 328 = 0x148
    _Bool _oneToOneModeEnabled;	// 329 = 0x149
    _Bool _isReconnectPending;	// 330 = 0x14a
    _Bool _isOneToOneRemoteMediaStalling;	// 331 = 0x14b
    unsigned short _maxConnectionMTU;	// 332 = 0x14c
    _Bool _useReducedSizeRTCP;	// 334 = 0x14e
    AVCRateController *_uplinkRateController;	// 336 = 0x150
    AVCRateController *_downlinkRateController;	// 344 = 0x158
    unsigned int _uplinkTargetBitrate;	// 352 = 0x160
    unsigned int _downlinkTargetBitrate;	// 356 = 0x164
    VCRateControlMediaController *_uplinkMediaController;	// 360 = 0x168
    unsigned int _basebandFlushTransactionID;	// 368 = 0x170
    VCSessionDownlinkBandwidthAllocator *_downlinkBandwidthAllocator;	// 376 = 0x178
    NSMutableDictionary *_optInDictionary;	// 384 = 0x180
    double _sessionStartTime;	// 392 = 0x188
    struct tagVCMediaQueue *_mediaQueue;	// 400 = 0x190
    struct {
        unsigned int numberOfInternalQueues;
        double maxWaitTimeToSchedulePackets;
        double queueSizeThreshold;
        double queueSizeThresholdForScreen;
        double queueSizeQuantizationStep;
        double queueSizeCallbackInterval;
        double instantPeakBitrateFactor;
        double packetSendPacingInterval;
        unsigned int packetBurstSize;
        unsigned int minBitrateWithoutThrottling;
        int schedulePolicy;
        int bundlePolicy;
        _Bool useExternalDataBuffer;
        char *dumpID;
        _Bool isDumpFileEnabled;
        struct opaqueRTCReporting *reportingAgent;
        _Bool isRTXEnabled;
        _Bool enableDynamicPeakBitrate;
    } _mediaQueueConfiguration;	// 408 = 0x198
    _Bool _forceDisableMediaPriority;	// 528 = 0x210
    NSError *_stopError;	// 536 = 0x218
    void *_spatialMetadata;	// 544 = 0x220
    _Bool _isGKVoiceChat;	// 552 = 0x228
    double _remoteMediaStallDisconnectTimeout;	// 560 = 0x230
    int _reportingModuleID;	// 568 = 0x238
    int _reportingClientType;	// 572 = 0x23c
    _Bool _shouldCreateSecondAggregator;	// 576 = 0x240
    VCAudioCaptionsCoordinator *_captionsCoordinator;	// 584 = 0x248
    _Bool _isECNEnabled;	// 592 = 0x250
    NSObject<OS_nw_activity> *_parentNWActivity;	// 600 = 0x258
    NSObject<OS_nw_activity> *_nwActivity;	// 608 = 0x260
    NSObject<OS_nw_activity> *_nwActivityActiveSession;	// 616 = 0x268
    VCSessionPresentationInfo *_presentationInfo;	// 624 = 0x270
    VCSessionBitrateArbiter *_bitrateArbiter;	// 632 = 0x278
    NSString *_conversationID;	// 640 = 0x280
    NSDate *_conversationTimeBase;	// 648 = 0x288
    NSDate *_conversationTimeBaseTruncated;	// 656 = 0x290
    _Bool _forceFixedEncryptionLabel;	// 664 = 0x298
    VCSwitchManager *_switchManager;	// 672 = 0x2a0
    int _currentConnectionType;	// 680 = 0x2a8
    _Bool _sharingEnabled;	// 684 = 0x2ac
    struct __CFDictionary *_mediaTypeToSpatialMetadataEntryMap;	// 688 = 0x2b0
    unsigned long long _siriSpatialAudioSourceID;	// 696 = 0x2b8
    NSObject<OS_dispatch_semaphore> *_stopCompletedSemaphore;	// 704 = 0x2c0
    _Bool _didServerDie;	// 712 = 0x2c8
    _Bool _isServerPacketRetransmissionForVideoEnabled;	// 713 = 0x2c9
    _Bool _isUplinkRetransmissionForVideoEnabled;	// 714 = 0x2ca
    _Bool _isSSRCCollisionDetectionEnabled;	// 715 = 0x2cb
    VCMediaRecorder *_mediaRecorder;	// 720 = 0x2d0
    _Bool _screenAndCameraMixingEnabled;	// 728 = 0x2d8
}

+ (_Bool)isUplinkRetransmissionEnabledForVideo;	// IMP=0x001000000026441d
+ (_Bool)isServerPacketRetransmissionEnabledForVideo;	// IMP=0x00100000002643e5
+ (void)cleanupControlChannelParticipantConfig:(CDStruct_c24deb19 *)arg1;	// IMP=0x001000000025b50d
+ (void)addUUIDToMutableData:(id)arg1 fromUUIDString:(id)arg2;	// IMP=0x001000000025b30d
+ (int)deviceRoleForSessionMode:(long long)arg1;	// IMP=0x0010000000257bc8
+ (void)terminateProcess:(id)arg1 terminateSource:(id)arg2 agent:(struct opaqueRTCReporting *)arg3;	// IMP=0x001000000024ec9e
+ (unsigned int)mediaStateForMediaStateMessageValue:(id)arg1;	// IMP=0x001000000041464b
+ (id)mediaStateMessageValueForMediaState:(unsigned int)arg1;	// IMP=0x001000000041462c
+ (unsigned int)mediaTypeForMediaStateMessageKey:(id)arg1;	// IMP=0x001000000041453c
+ (id)mediaStateMessageKeyForMediaType:(unsigned int)arg1;	// IMP=0x0010000000414510
+ (id)mediaStateMessageStreamGroupKeysForMediaType:(unsigned int)arg1;	// IMP=0x0010000000414323
@property(nonatomic) _Bool isOneToOneRemoteMediaStalling; // @synthesize isOneToOneRemoteMediaStalling=_isOneToOneRemoteMediaStalling;
@property(nonatomic) _Bool screenAndCameraMixingEnabled; // @synthesize screenAndCameraMixingEnabled=_screenAndCameraMixingEnabled;
@property(readonly, nonatomic) int reportingModuleID; // @synthesize reportingModuleID=_reportingModuleID;
@property(readonly, nonatomic) int reportingClientType; // @synthesize reportingClientType=_reportingClientType;
@property(nonatomic) _Bool sharingEnabled; // @synthesize sharingEnabled=_sharingEnabled;
@property(nonatomic) _Bool oneToOneModeEnabled; // @synthesize oneToOneModeEnabled=_oneToOneModeEnabled;
@property(retain, nonatomic) NSObject<OS_nw_activity> *nwActivity; // @synthesize nwActivity=_nwActivity;
@property(nonatomic, setter=setParentNWActivity:) NSObject<OS_nw_activity> *parentNWActivity; // @synthesize parentNWActivity=_parentNWActivity;
@property(readonly, nonatomic) VCSessionStatsController *sessionStatsController; // @synthesize sessionStatsController=_sessionStatsController;
@property(retain, nonatomic) VCSessionMessaging *sessionMessaging; // @synthesize sessionMessaging=_sessionMessaging;
@property(readonly, nonatomic) AVCRateController *downlinkRateController; // @synthesize downlinkRateController=_downlinkRateController;
@property(readonly, nonatomic) VCTransportSession *transportSession; // @synthesize transportSession=_transportSession;
@property(nonatomic) struct tagVCMediaQueue *mediaQueue; // @synthesize mediaQueue=_mediaQueue;
@property(retain, nonatomic) NSMutableDictionary *remoteParticipantsMapByServerID; // @synthesize remoteParticipantsMapByServerID=_remoteParticipantsMapByServerID;
@property(retain) NSMutableDictionary *optInDictionary; // @synthesize optInDictionary=_optInDictionary;
@property(retain, nonatomic) id <VCConnectionProtocol> currentActiveConnection; // @synthesize currentActiveConnection=_currentActiveConnection;
@property(readonly, nonatomic) unsigned int transportSessionID; // @synthesize transportSessionID=_transportSessionID;
@property(readonly, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(readonly, nonatomic) NSString *idsDestination; // @synthesize idsDestination=_idsDestination;
@property(readonly, nonatomic) VCSessionParticipant *localParticipant; // @synthesize localParticipant=_localParticipant;
- (void)additionalFlushCountToOneToOneRateController:(unsigned int)arg1;	// IMP=0x0000000000264a51
- (void)updateMediaRecorderCapabillities:(unsigned int)arg1 imageType:(int)arg2 videoCodec:(int)arg3;	// IMP=0x0000000000264898
- (void)didReceiveMomentsRequest:(id)arg1;	// IMP=0x00000000002647fa
- (void)mediaRecorder:(id)arg1 shouldProcessRequest:(id)arg2 recipientID:(id)arg3;	// IMP=0x0000000000264561
- (void)didLocalNetworkConditionChange:(_Bool)arg1 isLocalNetworkQualityDegraded:(_Bool)arg2 isRemoteNetworkQualityDegraded:(_Bool)arg3;	// IMP=0x0000000000264277
- (void)setIsUplinkRetransmissionEnabled:(_Bool)arg1;	// IMP=0x00000000002640db
- (void)mediaQualityDegraded:(_Bool)arg1;	// IMP=0x000000000026402b
- (void)preWarmStateChanged:(_Bool)arg1;	// IMP=0x0000000000263f29
- (void)reportingIntervalChanged:(double)arg1;	// IMP=0x0000000000263f0c
- (void)recommendedSettingsChanged:(id)arg1;	// IMP=0x0000000000263ed1
- (void)unregisterReportingTask;	// IMP=0x0000000000263e8f
- (void)registerReportingTask;	// IMP=0x0000000000263cc7
- (void)generateReportDictionary:(struct __CFDictionary *)arg1;	// IMP=0x0000000000262dd1
- (id)newNetworkBitrateString:(const CDStruct_b671a7c4 *)arg1;	// IMP=0x0000000000262d41
- (void)dispatchedParticipant:(id)arg1 didStopWithError:(id)arg2;	// IMP=0x0000000000262a7a
- (void)processDidStop;	// IMP=0x0000000000262868
- (void)setupOneToOneVideoStreamDelegate;	// IMP=0x0000000000262636
- (void)setupOneToOneVideoReceiverDelegate;	// IMP=0x0000000000262530
- (void)dispatchedParticipant:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000000002619fe
- (void)stopAllParticipants;	// IMP=0x000000000026188f
- (void)dispatchedUpdateConfiguration:(id)arg1;	// IMP=0x0000000000261109
- (void)tearDown;	// IMP=0x0000000000260fb4
- (void)dispatchedTransportStop;	// IMP=0x0000000000260f7e
- (void)dispatchedStopWithError:(id)arg1 didRemoteCancel:(_Bool)arg2;	// IMP=0x000000000026065a
- (void)dispatchedStopWithError:(id)arg1;	// IMP=0x0000000000260646
- (void)stopMediaQueueOneToOne;	// IMP=0x0000000000260609
- (void)dispatchedStart;	// IMP=0x000000000025f835
- (void)dispatchedRemoveParticipant:(id)arg1;	// IMP=0x000000000025f363
- (void)dispatchedAddParticipantConfigurations:(id)arg1;	// IMP=0x000000000025f23d
- (_Bool)configureRemoteParticipant:(id)arg1 withConfig:(id)arg2;	// IMP=0x000000000025ef4d
- (void)dispatchedAddParticipantWithConfig:(id)arg1;	// IMP=0x000000000025dca2
- (void)reportLocalRateControlExperimentConfiguration;	// IMP=0x000000000025db58
- (void)reportingSessionRemoteParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2 value:(id)arg3;	// IMP=0x000000000025d8bc
- (void)collectSessionEventKeyFieldsAndSubtype:(struct __CFDictionary *)arg1 eventType:(unsigned short)arg2 withParticipant:(id)arg3 keyChangeReason:(id)arg4 newMKI:(id)arg5 withStreamID:(unsigned short)arg6 collectSubtype:(unsigned short *)arg7;	// IMP=0x000000000025d17a
- (void)reportingMomentsToGreenTeaWithRequest:(id)arg1;	// IMP=0x000000000025d174
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2 keyChangeReason:(id)arg3 newMKI:(id)arg4 withStreamID:(unsigned short)arg5;	// IMP=0x000000000025cdd4
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2 keyChangeReason:(id)arg3 newMKI:(id)arg4;	// IMP=0x000000000025cdb2
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 keyChangeReason:(id)arg2 newMKI:(id)arg3;	// IMP=0x000000000025cd88
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withParticipant:(id)arg2;	// IMP=0x000000000025cd60
- (void)reportingSessionParticipantEvent:(unsigned short)arg1 withStreamID:(unsigned short)arg2;	// IMP=0x000000000025cd3a
- (struct __CFDictionary *)getClientSpecificUserInfo;	// IMP=0x000000000025cc79
- (id)computeConversationTimeBaseTruncated;	// IMP=0x000000000025cc15
- (void)didEncryptionKeyRollTimeout;	// IMP=0x000000000025cb9f
- (void)resetDecryptionTimeout;	// IMP=0x000000000025ca17
- (_Bool)handleEncryptionInfoChange:(id)arg1;	// IMP=0x000000000025c703
- (_Bool)generateReceptionReportList:(struct _RTCP_RECEPTION_REPORT *)arg1 reportCount:(char *)arg2;	// IMP=0x000000000025c6fb
- (void)setupMultiwayABTesting;	// IMP=0x000000000025c5a8
- (void)cleanupNwActivity;	// IMP=0x000000000025c55d
- (void)cleanupVCRC;	// IMP=0x000000000025c51c
- (void)setReportingClientExperimentSettings;	// IMP=0x000000000025c498
- (void)sendSymptomsToRemoteParticipants:(id)arg1 symptom:(id)arg2 groupID:(id)arg3;	// IMP=0x000000000025c0d6
- (void)unregisterRemoteParticipantFromSession:(id)arg1;	// IMP=0x000000000025bec8
- (void)removeDelegatesForRemoteParticipant:(id)arg1;	// IMP=0x000000000025beb1
- (_Bool)registerRemoteParticipantToSession:(id)arg1;	// IMP=0x000000000025ba8c
- (_Bool)isECNCapableWithRemoteParticipant:(id)arg1;	// IMP=0x000000000025b8d7
- (_Bool)composeControlChannelParticipantConfig:(CDStruct_c24deb19 *)arg1 withRemoteParticipant:(id)arg2;	// IMP=0x000000000025b55a
- (id)newEncryptionLabelWithLocalUUID:(id)arg1 remoteUUID:(id)arg2;	// IMP=0x000000000025b3b5
- (void)broadcastInitialMediaState;	// IMP=0x000000000025b139
- (void)messageMediaInitialStateToParticipant:(id)arg1;	// IMP=0x000000000025aec8
- (void)setDelegatesForRemoteParticipant:(id)arg1;	// IMP=0x000000000025aead
- (void)handleMembershipChangeInfoEvent:(id)arg1;	// IMP=0x000000000025ad9d
- (void)handleEncryptionInfoEvent:(id)arg1;	// IMP=0x000000000025aad8
- (_Bool)detectSSRCCollisionWithRemoteMediaStream:(id)arg1 remoteBlobCreationTime:(union tagNTP)arg2 resetNeeded:(_Bool *)arg3;	// IMP=0x000000000025a914
- (_Bool)detectSSRCCollision:(id)arg1 resetNeeded:(_Bool *)arg2;	// IMP=0x000000000025a666
- (void)optOutStreamWithIDSStreamIDs:(id)arg1;	// IMP=0x000000000025a5a8
- (void)optInStreamWithIDSStreamIDs:(id)arg1;	// IMP=0x000000000025a4ea
- (void)updateLocalStreamConfiguration;	// IMP=0x000000000025a1d3
- (void)updateLocalVideoCaptureFrameRate;	// IMP=0x0000000000259965
- (int)maxRemoteParticipants30fps;	// IMP=0x00000000002598e7
- (void)setMediaQueuePeakBitrateWithTargetBitrate:(unsigned int)arg1;	// IMP=0x0000000000259800
- (void)handleMediaQueueSizeExceedThresholdWithQueueSize:(double)arg1 mediaQueueStreamId:(unsigned int)arg2 type:(int)arg3;	// IMP=0x00000000002593a2
- (void)createMediaQueue;	// IMP=0x0000000000259074
- (void)setupUplinkBitrateCaps;	// IMP=0x000000000025900b
- (void)startRateControllersMultiwayFromOneToOne:(_Bool)arg1;	// IMP=0x0000000000258e53
- (void)updateMultiwayRateControllerWithActiveConnection:(id)arg1 isScreenEnabled:(_Bool)arg2 isLocal:(_Bool)arg3;	// IMP=0x0000000000258d14
- (void)cleanupSpatialAudio;	// IMP=0x0000000000258b7c
- (int)reserveAudioChannelForMediaType:(unsigned int)arg1 spatialAudioSourceID:(unsigned long long)arg2;	// IMP=0x00000000002589a4
- (int)setupSpatialAudio;	// IMP=0x0000000000258504
- (void)didRemoveSpatialMetadataEntry;	// IMP=0x0000000000258479
- (void)setupRateControllersMultiway;	// IMP=0x00000000002582a4
- (id)vcrcServerBagWithOperatingMode:(int)arg1;	// IMP=0x00000000002580ef
- (void)setSessionInfoSynchronizerPeerSubscribedStreamsCallback;	// IMP=0x0000000000257f28
- (void)setSessionInfoSynchronizerErrorResponseCallback;	// IMP=0x0000000000257c14
- (void)setSessionInfoSynchronizerCallbacks;	// IMP=0x0000000000257be6
- (void)reportingSessionStopEventWithError:(id)arg1;	// IMP=0x000000000025792c
- (void)reportingSessionDownlinkOptInEvent:(id)arg1 selectedMediaEntriesForParticipants:(id)arg2;	// IMP=0x00000000002573e9
- (void)distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:(_Bool)arg1;	// IMP=0x0000000000256b4e
- (void)updateParticipantConfigurations:(id)arg1;	// IMP=0x0000000000256500
- (void)updateParticipantWindowState;	// IMP=0x00000000002562a7
- (void)sendNetworkCapabilitiesMessageToParticipant:(id)arg1;	// IMP=0x0000000000256069
- (_Bool)isTLEEnabledOnPrimaryConnection;	// IMP=0x0000000000255fff
- (void)applySpatialMetadata;	// IMP=0x0000000000255a17
- (void)updatePresentationInfo:(id)arg1;	// IMP=0x00000000002556b7
- (int)flushBasebandWithPayloads:(id)arg1;	// IMP=0x00000000002556af
- (void)mediaController:(void *)arg1 mediaSuggestionDidChange:(struct VCRateControlMediaSuggestion)arg2;	// IMP=0x0000000000255650
- (void)rateController:(id)arg1 isECNEnabled:(_Bool)arg2;	// IMP=0x0000000000255515
- (int)learntBitrateForSegment:(id)arg1 defaultValue:(int)arg2;	// IMP=0x00000000002554eb
- (void)rateController:(id)arg1 targetBitrateDidChange:(unsigned int)arg2 rateChangeCounter:(unsigned int)arg3;	// IMP=0x0000000000254f4e
- (void)updateNetworkFeedbackControllerReport:(CDStruct_4b4d87a1 *)arg1;	// IMP=0x0000000000254da3
- (void)didReceivedSessionStatsAtTime:(double)arg1;	// IMP=0x0000000000254d0a
- (void)serverDidDie;	// IMP=0x0000000000254bdf
- (void)vcSessionParticipantDidStopReacting:(id)arg1;	// IMP=0x00000000002548ce
- (void)vcSessionParticipant:(id)arg1 reactionDidStart:(id)arg2;	// IMP=0x0000000000254559
- (void)vcSessionParticipant:(id)arg1 mediaMixingDidChangeForMediaType:(unsigned int)arg2 mixingMediaType:(unsigned int)arg3;	// IMP=0x0000000000254238
- (void)vcSessionParticipant:(id)arg1 remoteMediaStateDidChange:(unsigned int)arg2 forMediaType:(unsigned int)arg3;	// IMP=0x00000000002540ba
- (void)vcSessionParticipant:(id)arg1 mediaStateDidChange:(unsigned int)arg2 forMediaType:(unsigned int)arg3 didSucceed:(_Bool)arg4 error:(id)arg5;	// IMP=0x0000000000253d87
- (void)vcSessionParticipant:(id)arg1 didDetectError:(id)arg2;	// IMP=0x0000000000253cb0
- (void)vcSessionParticipant:(id)arg1 oneToOneModeDidChange:(_Bool)arg2;	// IMP=0x0000000000253bc2
- (void)vcSessionParticipantDidRemoteMediaStallTimeout:(id)arg1 duration:(double)arg2;	// IMP=0x00000000002537e0
- (void)vcSessionParticipantDidMediaDecryptionTimeOutForMKMRecovery:(id)arg1;	// IMP=0x00000000002533f5
- (void)vcSessionParticipantDidMediaDecryptionTimeOut:(id)arg1;	// IMP=0x0000000000253049
- (void)vcSessionParticipantDidChangeReceivingStreams:(id)arg1;	// IMP=0x0000000000252f94
- (void)vcSessionParticipantDidChangeSendingStreams:(id)arg1;	// IMP=0x0000000000252edf
- (void)vcSessionParticipant:(id)arg1 didRequestVideoRedundancy:(_Bool)arg2;	// IMP=0x0000000000252dd6
- (void)vcSessionParticipant:(id)arg1 didSwitchFromStreamID:(unsigned short)arg2 toStreamID:(unsigned short)arg3;	// IMP=0x0000000000252d37
- (void)vcSessionParticipant:(id)arg1 requestKeyFrameGenerationWithStreamID:(unsigned short)arg2 streamGroupID:(unsigned int)arg3 firType:(int)arg4;	// IMP=0x0000000000252b27
- (void)vcSessionParticipant:(id)arg1 didChangeActualNetworkBitrateForStreamGroupID:(unsigned int)arg2;	// IMP=0x0000000000252b0a
- (void)vcSessionParticipant:(id)arg1 didChangeMediaPriority:(unsigned char)arg2 description:(id)arg3;	// IMP=0x0000000000252926
- (void)vcSessionParticipant:(id)arg1 remoteVideoPausedDidChange:(_Bool)arg2;	// IMP=0x0000000000252782
- (void)vcSessionParticipant:(id)arg1 remoteAudioPausedDidChange:(_Bool)arg2;	// IMP=0x0000000000252632
- (void)vcSessionParticipant:(id)arg1 videoPaused:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x000000000025228f
- (void)vcSessionParticipant:(id)arg1 audioPaused:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0000000000251eaa
- (void)vcSessionParticipant:(id)arg1 remoteScreenEnabledDidChange:(_Bool)arg2;	// IMP=0x0000000000251cc5
- (void)vcSessionParticipant:(id)arg1 remoteVideoEnabledDidChange:(_Bool)arg2;	// IMP=0x0000000000251b4f
- (void)vcSessionParticipant:(id)arg1 remoteAudioEnabledDidChange:(_Bool)arg2;	// IMP=0x0000000000251a31
- (void)vcSessionParticipantFetchStreamGroupState:(id)arg1;	// IMP=0x000000000025194b
- (void)vcSessionParticipant:(id)arg1 screenEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x00000000002513fb
- (void)vcSessionParticipant:(id)arg1 videoEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0000000000250fa6
- (void)updateOneToOneVideoReceiverDelegate:(_Bool)arg1;	// IMP=0x0000000000250f75
- (void)vcSessionParticipant:(id)arg1 audioEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0000000000250bd2
- (void)vcSessionParticipant:(id)arg1 didStopWithError:(id)arg2;	// IMP=0x0000000000250b07
- (void)vcSessionParticipant:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x0000000000250a28
- (void)setOneToOneVideoStreamBandwidthProbing:(_Bool)arg1;	// IMP=0x0000000000250980
- (unsigned int)calculateExpectedTotalNetworkBitrateUplink;	// IMP=0x000000000025089a
- (unsigned int)calculateExpectedTotalNetworkBitrateDownlink;	// IMP=0x00000000002505db
- (void)handlePreferredInterfaceForDuplicationUpdate:(unsigned char)arg1 notifyPeer:(_Bool)arg2 enableDuplication:(_Bool)arg3 isMediaUnrecoverableSignal:(_Bool)arg4;	// IMP=0x000000000025047c
- (void)handleActiveConnectionChangeForMultiway:(id)arg1;	// IMP=0x00000000002501fd
- (void)dispatchedSetRemoteScreenControlEnabled:(_Bool)arg1 isLocal:(_Bool)arg2;	// IMP=0x00000000002501f7
- (void)dispatchedHandleActiveConnectionChange:(id)arg1;	// IMP=0x000000000024ff86
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x000000000024fef0
- (void)handleCellularMTUChanged:(unsigned short)arg1 connection:(id)arg2;	// IMP=0x000000000024fe96
- (void)handlePrimaryConnectionChanged:(id)arg1;	// IMP=0x000000000024fcd0
- (void)handleCellTechChange:(int)arg1 connection:(id)arg2;	// IMP=0x000000000024fbcd
- (void)notifyRemoteOfCellTechChange:(id)arg1 remoteParticipant:(id)arg2;	// IMP=0x000000000024fa6c
- (void)applyRemoteLinkConstrains:(id)arg1;	// IMP=0x000000000024f9be
- (void)applyLinkConstrains:(id)arg1;	// IMP=0x000000000024f8ac
- (void)setTransportSessionEventHandler;	// IMP=0x000000000024ecb2
- (void)sendStreamGroupStateToParticipant:(id)arg1;	// IMP=0x000000000024ebef
- (void)dispatchedSetScreenAndCameraMixingEnabled:(_Bool)arg1;	// IMP=0x000000000024e83a
- (void)dispatchedSetSharingEnabled:(_Bool)arg1;	// IMP=0x000000000024e225
- (void)setOneToOneModeEnabledFromRemoteSignal:(_Bool)arg1;	// IMP=0x000000000024e064
- (void)generateKeyFrameWithReceivedMessage:(id)arg1 forParticipant:(id)arg2;	// IMP=0x000000000024dd06
- (void)setRemoteScreenControlEnabled:(_Bool)arg1;	// IMP=0x000000000024dc6f
- (void)reportingSetUserInfo;	// IMP=0x000000000024db06
- (struct __CFString *)configurationSpecificReportingServiceName;	// IMP=0x000000000024da83
@property(readonly, nonatomic) NSArray *remoteParticipants;
- (void)mediaStateChangedForParticipant:(id)arg1;	// IMP=0x000000000024d911
- (id)participantForID:(id)arg1;	// IMP=0x000000000024d75b
- (void)updateConfiguration:(id)arg1;	// IMP=0x000000000024d6a4
- (void)stopWithError:(id)arg1 didRemoteCancel:(_Bool)arg2;	// IMP=0x000000000024d606
- (void)stopWithError:(id)arg1;	// IMP=0x000000000024d5cd
- (void)start;	// IMP=0x000000000024d52b
@property(readonly, nonatomic) VCSessionParticipantRemote *oneToOneRemoteParticipant;
- (void)removeParticipant:(id)arg1;	// IMP=0x000000000024d46a
- (void)addParticipantConfigurations:(id)arg1;	// IMP=0x000000000024d3d1
@property(readonly, nonatomic) id <VCSessionDelegate> delegate;
- (id)participantsToString;	// IMP=0x000000000024d376
@property(readonly, copy) NSString *description;
- (char *)sessionStateToString:(unsigned int)arg1;	// IMP=0x000000000024d2b4
- (void)setState:(unsigned int)arg1;	// IMP=0x000000000024d048
- (void)setupTransportSessionWithDestination:(id)arg1;	// IMP=0x000000000024ce67
- (int)selectDataPath;	// IMP=0x000000000024cd27
- (void)setTransportConnectionSelectionVersionWithLocalFrameWorkVersion:(id)arg1 remoteFrameworkVersion:(id)arg2;	// IMP=0x000000000024ccba
@property(readonly, nonatomic) NSDictionary *transportMetadata;
@property(readonly, nonatomic) NSDictionary *capabilities;
- (void)startDeallocTimer;	// IMP=0x000000000024c8f1
- (void)stopTimeoutTimer;	// IMP=0x000000000024c88d
- (void)setReportingConfig:(CDStruct_acd50889 *)arg1;	// IMP=0x000000000024c436
- (void)dealloc;	// IMP=0x000000000024bdcc
- (id)initWithIDSDestination:(id)arg1 configurationDict:(id)arg2 negotiationData:(id)arg3 delegate:(id)arg4 processId:(int)arg5 isGKVoiceChat:(_Bool)arg6;	// IMP=0x000000000024a3fc
- (void)configureOneToOneReportingOnVideoEnabled;	// IMP=0x0000000000404cfa
- (void)handleActiveConnectionChangeForOneToOne:(id)arg1;	// IMP=0x0000000000404ade
- (void)notifyDelegateActiveConnectionDidChange;	// IMP=0x00000000004048f9
- (void)reportActiveConnectionOneToOne;	// IMP=0x000000000040479c
- (void)startOneToOne;	// IMP=0x0000000000403bb6
- (void)setupOneToOneABTesting;	// IMP=0x0000000000402265
- (void)applyNegotiatedOneToOneFaceTimeSettings;	// IMP=0x000000000040212c
- (void)dispatchedSetOneToOneModeEnabled:(_Bool)arg1 isLocal:(_Bool)arg2;	// IMP=0x0000000000401408
- (void)completionHandlerOneToOneEnabled:(_Bool)arg1 didSucceed:(_Bool)arg2;	// IMP=0x0000000000400f53
- (_Bool)completeTransitionToOneToOneEnabled:(_Bool)arg1;	// IMP=0x0000000000400cdb
- (_Bool)addOneToOneParticipant:(id)arg1;	// IMP=0x00000000004002f8
- (unsigned int)vcrcServerBagProfileNumber;	// IMP=0x000000000040008c
- (void)configureOneToOneRateController:(id)arg1 isUsingCamera:(_Bool)arg2 isUsingScreen:(_Bool)arg3;	// IMP=0x00000000003ffc6d
- (_Bool)negotiateOneToOneWithRemoteParticipant:(id)arg1;	// IMP=0x00000000003ff410
- (void)setupOneToOneAdaptiveLearning;	// IMP=0x00000000003ff0b1
- (void)renewOneToOneMediaQueue;	// IMP=0x00000000003ff048
- (void)startReportingForOneToOneEnabled:(_Bool)arg1;	// IMP=0x00000000003febcb
- (void)cleanUpOneToOneVideoStreamDelegate;	// IMP=0x00000000003feb5f
- (void)cleanupOneToOneVideoReceiverDelegate;	// IMP=0x00000000003feb1b
- (void)cleanupOneToOneDelegates;	// IMP=0x00000000003feaed
- (void)cleanupOneToOne;	// IMP=0x00000000003fea42
- (void)cleanupOneToOneMediaQueue;	// IMP=0x00000000003fe9f1
- (_Bool)switchFromMultiwayToOneToOne;	// IMP=0x00000000003fe683
- (_Bool)multiwayToOneToOneSwitchConfigure;	// IMP=0x00000000003fe1ae
- (void)multiwayToOneToOneSwitchResume;	// IMP=0x00000000003fe0ce
- (void)multiwayToOneToOneSwitchSuspend;	// IMP=0x00000000003fdfed
- (void)messageExistingParticipantsPostOneToOneModeSwitch;	// IMP=0x00000000003fde88
- (_Bool)switchFromOneToOneToMultiway;	// IMP=0x00000000003fdc6c
- (void)oneToOneToMultiwaySwitchConfigure;	// IMP=0x00000000003fd8fc
- (void)oneToOneToMultiwaySwitchResume;	// IMP=0x00000000003fd792
- (void)oneToOneToMultiwaySwitchSuspend;	// IMP=0x00000000003fd725
- (void)reportSwitchingError:(_Bool)arg1 errorEvent:(unsigned int)arg2;	// IMP=0x00000000003fd67b
- (void)reportCompletedSwitchingToOneToOne:(_Bool)arg1;	// IMP=0x00000000003fd3a0
- (void)reportStartedSwitchingToOneToOne:(_Bool)arg1;	// IMP=0x00000000003fd381
- (void)reportExistingParticipantsAnew;	// IMP=0x00000000003fd09f
- (_Bool)configureRemoteParticipantForOneToOne:(id)arg1;	// IMP=0x00000000003fca9b
- (_Bool)isOneToOneRemoteParticipantUsingScreen;	// IMP=0x00000000003fca2d
- (_Bool)isOneToOneUsingScreen;	// IMP=0x00000000003fc9ce
- (_Bool)isOneToOneUsingVideo;	// IMP=0x00000000003fc96f
- (void)stopRateControllerOneToOne;	// IMP=0x00000000003fc94f
- (void)startRateControllerOneToOne;	// IMP=0x00000000003fc8af
- (id)newParticipantOneToOneConfigWithIDSParticipantID:(unsigned long long)arg1 isLocal:(_Bool)arg2 mediaControlInfoVersion:(unsigned char)arg3 videoEnabled:(_Bool)arg4 screenEnabled:(_Bool)arg5 remoteParticipant:(id)arg6;	// IMP=0x00000000003fc390
- (int)setupOneToOneMediaControlInfoGeneratorsWithVersion:(unsigned char)arg1 oneToOneConfig:(id)arg2 videoEnabled:(_Bool)arg3;	// IMP=0x00000000003fbf50
- (_Bool)configureLocalParticipantWithOneToOneRemoteParticipant:(id)arg1 isInitialConfiguration:(_Bool)arg2;	// IMP=0x00000000003fb8d8
- (void)cleanupRateControllerOneToOne;	// IMP=0x00000000003fb895
- (void)initWithRelevantStorebagEntries;	// IMP=0x00000000003fb7eb
- (void)updateOneToOneRateControllerForVideoEnabled:(_Bool)arg1;	// IMP=0x00000000003fb7ad
- (void)updateOneToOneRateControllerForVideoEnabled:(_Bool)arg1 screenEnabled:(_Bool)arg2;	// IMP=0x00000000003fb673
- (int)setupRateControllerOneToOne;	// IMP=0x00000000003fadd5
- (_Bool)setOneToOneConfigOnRemoteParticipant:(id)arg1;	// IMP=0x00000000003fab67
- (id)newNegotiatorForOneToOneWithRemoteParticipant:(id)arg1;	// IMP=0x00000000003fa3cc
- (int)setupOneToOneMediaQueue;	// IMP=0x00000000003fa044
- (int)setupOneToOne;	// IMP=0x00000000003f9d26
- (void)processMediaTypeMixingList:(id)arg1 forRemoteParticipant:(id)arg2;	// IMP=0x0000000000416ddf
- (void)processMediaStateMessage:(id)arg1 remoteParticipantID:(id)arg2;	// IMP=0x000000000041644b
- (void)processMediaTypeStatesWithMessage:(id)arg1 mediaTypeStates:(id)arg2;	// IMP=0x0000000000415f81
- (void)processStreamGroupStateMessageKey:(id)arg1 value:(id)arg2 mediaTypeStates:(id)arg3;	// IMP=0x0000000000415a5c
- (void)setupMediaStateUpdateMessage;	// IMP=0x0000000000415967
- (_Bool)validateStreamGroup:(id)arg1 state:(id)arg2;	// IMP=0x00000000004158ff
- (void)sendMediaStateUpdateMessageToRemoteParticipant:(id)arg1;	// IMP=0x0000000000415884
- (void)broadcastMediaStateUpdateMessage;	// IMP=0x00000000004152bb
- (void)appendMediaTypeMixingListToMessageDictionary:(id)arg1;	// IMP=0x0000000000414f16
- (id)stateMessageWithSupportsNestedDictionary:(_Bool)arg1;	// IMP=0x00000000004146fe
- (void)updateStateMessage:(id)arg1 stateState:(unsigned int)arg2 streamGroupKey:(id)arg3;	// IMP=0x000000000041466c
- (void)setupReactionMessages;	// IMP=0x0000000000413c7c
- (void)setupLinkConstrainsChangedMessages;	// IMP=0x0000000000413b32
- (void)setupCellTechChangeMessages;	// IMP=0x00000000004138e7
- (void)remoteCellTechStateUpdate:(int)arg1 maxRemoteBitrate:(unsigned int)arg2;	// IMP=0x0000000000413694
- (void)setupNetworkCapabilityMessage;	// IMP=0x0000000000413525
- (void)handleNetworkCapabilityMessage:(id)arg1 forParticipantId:(id)arg2;	// IMP=0x000000000041305d
- (void)setupNetworkQualityDegradedMessage;	// IMP=0x0000000000412ce7
- (void)setupMediaQualityDegradedMessage;	// IMP=0x0000000000412971
- (void)setupDisconnectMessage;	// IMP=0x000000000041273b
- (void)setupPiPStateChangeMessage;	// IMP=0x000000000041241a
- (void)setupPreferredInterfaceMessage;	// IMP=0x000000000041207f
- (void)setupVideoRedundancyMessages;	// IMP=0x0000000000411e33
- (void)setupMomentsMessages;	// IMP=0x0000000000411bfe
- (void)setupWRMAlertUpdateMessage;	// IMP=0x0000000000411888
- (void)setupSymptomEnabledMessages;	// IMP=0x0000000000411605
- (void)processSymptomFromMessage:(id)arg1 participantID:(id)arg2 isLocalInitiated:(_Bool)arg3 isLocalSideOnly:(_Bool)arg4;	// IMP=0x00000000004112d8
- (void)setupKeyFrameGenerationMessages;	// IMP=0x00000000004111dc
- (void)setupVideoPausedMessages;	// IMP=0x0000000000410f5a
- (void)setupOneToOneEnabledMessages;	// IMP=0x0000000000410ccd
- (void)setupAudioPausedMessages;	// IMP=0x0000000000410a4b
- (void)setupStreamGroupStateFetchMessage;	// IMP=0x0000000000410703
- (void)setupVideoEnabledMessages;	// IMP=0x000000000041048a
- (void)setupAudioEnabledMessages;	// IMP=0x000000000041020f
- (void)broadcastSingleStateMessage:(id)arg1 withTopic:(id)arg2;	// IMP=0x0000000000410057
- (void)broadcastMessageDictionary:(id)arg1 withTopic:(id)arg2;	// IMP=0x000000000040fecc
- (void)broadcastMessage:(id)arg1 withTopic:(id)arg2;	// IMP=0x000000000040fd41
- (void)stopSessionMessaging;	// IMP=0x000000000040fcd5
- (void)startSessionMessaging;	// IMP=0x000000000040fc8e
- (void)destroySessionMessaging;	// IMP=0x000000000040fc36
- (void)createSessionMessaging;	// IMP=0x000000000040fa94

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

