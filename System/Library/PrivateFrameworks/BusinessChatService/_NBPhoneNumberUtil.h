//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CTTelephonyNetworkInfo, NSDictionary, NSLock, NSMutableDictionary, NSRegularExpression, _NBMetadataHelper, _NBRegExMatcher;

__attribute__((visibility("hidden")))
@interface _NBPhoneNumberUtil : NSObject
{
    NSLock *_entireStringCacheLock;	// 8 = 0x8
    NSMutableDictionary *_entireStringRegexCache;	// 16 = 0x10
    NSLock *_lockPatternCache;	// 24 = 0x18
    NSMutableDictionary *_regexPatternCache;	// 32 = 0x20
    NSRegularExpression *_CAPTURING_DIGIT_PATTERN;	// 40 = 0x28
    NSRegularExpression *_VALID_ALPHA_PHONE_PATTERN;	// 48 = 0x30
    _NBMetadataHelper *_helper;	// 56 = 0x38
    _NBRegExMatcher *_matcher;	// 64 = 0x40
}

+ (void)initialize;	// IMP=0x0060000000055e21
+ (id)sharedInstance;	// IMP=0x0060000000054b58
- (void).cxx_destruct;	// IMP=0x0000000000061ba4
@property(retain, nonatomic) _NBRegExMatcher *matcher; // @synthesize matcher=_matcher;
@property(retain, nonatomic) _NBMetadataHelper *helper; // @synthesize helper=_helper;
@property(retain, nonatomic) NSRegularExpression *VALID_ALPHA_PHONE_PATTERN; // @synthesize VALID_ALPHA_PHONE_PATTERN=_VALID_ALPHA_PHONE_PATTERN;
@property(retain, nonatomic) NSRegularExpression *CAPTURING_DIGIT_PATTERN; // @synthesize CAPTURING_DIGIT_PATTERN=_CAPTURING_DIGIT_PATTERN;
@property(retain, nonatomic) NSMutableDictionary *regexPatternCache; // @synthesize regexPatternCache=_regexPatternCache;
@property(retain, nonatomic) NSLock *lockPatternCache; // @synthesize lockPatternCache=_lockPatternCache;
@property(retain, nonatomic) NSMutableDictionary *entireStringRegexCache; // @synthesize entireStringRegexCache=_entireStringRegexCache;
@property(retain, nonatomic) NSLock *entireStringCacheLock; // @synthesize entireStringCacheLock=_entireStringCacheLock;
- (_Bool)matchesEntirely:(id)arg1 string:(id)arg2;	// IMP=0x0000000000061993
- (_Bool)canBeInternationallyDialled:(id)arg1;	// IMP=0x0000000000061883
- (_Bool)canBeInternationallyDialled:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000061730
- (_Bool)isNationalNumberSuffixOfTheOther:(id)arg1 second:(id)arg2;	// IMP=0x0000000000061606
- (long long)isNumberMatch:(id)arg1 second:(id)arg2;	// IMP=0x0000000000060e3b
- (long long)isNumberMatch:(id)arg1 second:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000060cc7
- (void)buildNationalNumberForParsing:(id)arg1 nationalNumber:(id *)arg2;	// IMP=0x00000000000609e9
- (id)parseHelper:(id)arg1 defaultRegion:(id)arg2 keepRawInput:(_Bool)arg3 checkRegion:(_Bool)arg4 error:(id *)arg5;	// IMP=0x000000000005fce1
- (void)setItalianLeadingZerosForPhoneNumber:(id)arg1 phoneNumber:(id)arg2;	// IMP=0x000000000005fb75
- (id)parseAndKeepRawInput:(id)arg1 defaultRegion:(id)arg2 error:(id *)arg3;	// IMP=0x000000000005f9e8
- (id)countryCodeByCarrier;	// IMP=0x000000000005f937
@property(readonly, nonatomic) CTTelephonyNetworkInfo *telephonyNetworkInfo;
- (id)parseWithPhoneCarrierRegion:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005f7c8
- (id)parse:(id)arg1 defaultRegion:(id)arg2 error:(id *)arg3;	// IMP=0x000000000005f6d3
- (_Bool)checkRegionForParsing:(id)arg1 defaultRegion:(id)arg2;	// IMP=0x000000000005f64a
- (id)maybeStripExtension:(id *)arg1;	// IMP=0x000000000005f43a
- (_Bool)maybeStripNationalPrefixAndCarrierCode:(id *)arg1 metadata:(id)arg2 carrierCode:(id *)arg3;	// IMP=0x000000000005ef21
- (long long)maybeStripInternationalPrefixAndNormalize:(id *)arg1 possibleIddPrefix:(id)arg2;	// IMP=0x000000000005ede9
- (_Bool)parsePrefixAsIdd:(id)arg1 sourceString:(id *)arg2;	// IMP=0x000000000005eadc
- (_Bool)descHasPossibleNumberData:(id)arg1;	// IMP=0x000000000005ea09
- (id)maybeExtractCountryCode:(id)arg1 metadata:(id)arg2 nationalNumber:(id *)arg3 keepRawInput:(_Bool)arg4 phoneNumber:(id *)arg5 error:(id *)arg6;	// IMP=0x000000000005e3b3
- (id)getSupportedRegions;	// IMP=0x000000000005e2f9
- (id)extractCountryCode:(id)arg1 nationalNumber:(id *)arg2;	// IMP=0x000000000005e04d
- (_Bool)truncateTooLongNumber:(id)arg1;	// IMP=0x000000000005dead
- (_Bool)isPossibleNumberString:(id)arg1 regionDialingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x000000000005ddfd
- (long long)isPossibleNumberWithReason:(id)arg1;	// IMP=0x000000000005dcdd
- (long long)isPossibleNumberWithReason:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005db8a
- (long long)testNumberLength:(id)arg1 desc:(id)arg2;	// IMP=0x000000000005d968
- (long long)validateNumberLength:(id)arg1 metadata:(id)arg2 type:(long long)arg3;	// IMP=0x000000000005d40f
- (long long)validateNumberLength:(id)arg1 metadata:(id)arg2;	// IMP=0x000000000005d3f6
- (_Bool)isPossibleNumber:(id)arg1;	// IMP=0x000000000005d3dc
- (_Bool)isPossibleNumber:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005d289
- (_Bool)isAlphaNumber:(id)arg1;	// IMP=0x000000000005d191
- (_Bool)isLeadingZeroPossible:(id)arg1;	// IMP=0x000000000005d0ef
- (_Bool)isNANPACountry:(id)arg1;	// IMP=0x000000000005ceb8
- (id)getNddPrefixForRegion:(id)arg1 stripNonDigits:(_Bool)arg2;	// IMP=0x000000000005cd9d
- (id)getCountryCodeForValidRegion:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005cc3c
- (id)getCountryCodeForRegion:(id)arg1;	// IMP=0x000000000005cb8f
- (id)getRegionCodesForCountryCode:(id)arg1;	// IMP=0x000000000005cb76
- (id)getRegionCodeForCountryCode:(id)arg1;	// IMP=0x000000000005cb0a
- (id)getRegionCodeForNumberFromRegionList:(id)arg1 regionCodes:(id)arg2;	// IMP=0x000000000005c90f
- (id)getRegionCodeForNumber:(id)arg1;	// IMP=0x000000000005c801
- (_Bool)isValidNumberForRegion:(id)arg1 regionCode:(id)arg2;	// IMP=0x000000000005c5f2
- (_Bool)isValidNumber:(id)arg1;	// IMP=0x000000000005c580
- (_Bool)isNumberMatchingDesc:(id)arg1 numberDesc:(id)arg2;	// IMP=0x000000000005c42f
- (long long)getNumberTypeHelper:(id)arg1 metadata:(id)arg2;	// IMP=0x000000000005bfba
- (long long)getNumberType:(id)arg1;	// IMP=0x000000000005bec4
- (id)getNumberDescByType:(id)arg1 type:(long long)arg2;	// IMP=0x000000000005bdb0
- (id)maybeGetFormattedExtension:(id)arg1 metadata:(id)arg2 numberFormat:(long long)arg3;	// IMP=0x000000000005bba6
- (id)getExampleNumberForNonGeoEntity:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005b73f
- (id)getExampleNumberForType:(id)arg1 type:(long long)arg2 error:(id *)arg3;	// IMP=0x000000000005b5c3
- (id)getExampleNumber:(id)arg1 error:(id *)arg2;	// IMP=0x000000000005b5ac
- (id)formatNsnUsingPattern:(id)arg1 formattingPattern:(id)arg2 numberFormat:(long long)arg3 carrierCode:(id)arg4;	// IMP=0x000000000005b1f5
- (id)chooseFormattingPatternForNumber:(id)arg1 nationalNumber:(id)arg2;	// IMP=0x000000000005af10
- (id)formatNsn:(id)arg1 metadata:(id)arg2 phoneNumberFormat:(long long)arg3 carrierCode:(id)arg4;	// IMP=0x000000000005adca
- (id)formatOutOfCountryKeepingAlphaChars:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x000000000005a7f2
- (id)formatOutOfCountryKeepingAlphaChars:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x000000000005a672
- (_Bool)hasFormattingPatternForNumber:(id)arg1;	// IMP=0x000000000005a540
- (_Bool)hasUnexpectedItalianLeadingZero:(id)arg1;	// IMP=0x000000000005a4b9
- (_Bool)rawInputContainsNationalPrefix:(id)arg1 nationalPrefix:(id)arg2 regionCode:(id)arg3;	// IMP=0x000000000005a381
- (id)formatInOriginalFormat:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x0000000000059caa
- (id)formatInOriginalFormat:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000059b2a
- (id)prefixNumberWithCountryCallingCode:(id)arg1 phoneNumberFormat:(long long)arg2 formattedNationalNumber:(id)arg3 formattedExtension:(id)arg4;	// IMP=0x0000000000059a14
- (id)formatOutOfCountryCallingNumber:(id)arg1 regionCallingFrom:(id)arg2;	// IMP=0x0000000000059545
- (id)formatOutOfCountryCallingNumber:(id)arg1 regionCallingFrom:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000593c5
- (id)formatNumberForMobileDialing:(id)arg1 regionCallingFrom:(id)arg2 withFormatting:(_Bool)arg3;	// IMP=0x0000000000058fd7
- (id)formatNumberForMobileDialing:(id)arg1 regionCallingFrom:(id)arg2 withFormatting:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000000058e47
- (id)formatNationalNumberWithPreferredCarrierCode:(id)arg1 fallbackCarrierCode:(id)arg2;	// IMP=0x0000000000058d7a
- (id)formatNationalNumberWithPreferredCarrierCode:(id)arg1 fallbackCarrierCode:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000058bfa
- (id)getMetadataForRegionOrCallingCode:(id)arg1 regionCode:(id)arg2;	// IMP=0x0000000000058b3c
- (id)formatNationalNumberWithCarrierCode:(id)arg1 carrierCode:(id)arg2;	// IMP=0x0000000000058998
- (id)formatNationalNumberWithCarrierCode:(id)arg1 carrierCode:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000058818
- (id)formatByPattern:(id)arg1 numberFormat:(long long)arg2 userDefinedFormats:(id)arg3;	// IMP=0x0000000000058498
- (id)formatByPattern:(id)arg1 numberFormat:(long long)arg2 userDefinedFormats:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000058308
- (id)format:(id)arg1 numberFormat:(long long)arg2;	// IMP=0x0000000000058045
- (id)format:(id)arg1 numberFormat:(long long)arg2 error:(id *)arg3;	// IMP=0x0000000000057ee0
- (_Bool)hasValidCountryCallingCode:(id)arg1;	// IMP=0x0000000000057ea6
- (_Bool)isValidRegionCode:(id)arg1;	// IMP=0x0000000000057d69
- (_Bool)isNumberGeographical:(id)arg1;	// IMP=0x0000000000057cc0
- (_Bool)formattingRuleHasFirstGroupOnly:(id)arg1;	// IMP=0x0000000000057c54
- (id)normalizeHelper:(id)arg1 normalizationReplacements:(id)arg2 removeNonMatches:(_Bool)arg3;	// IMP=0x0000000000057aee
- (id)getCountryMobileTokenFromCountryCode:(long long)arg1;	// IMP=0x0000000000057a61
- (int)getLengthOfNationalDestinationCode:(id)arg1;	// IMP=0x0000000000057683
- (int)getLengthOfNationalDestinationCode:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000057530
- (int)getLengthOfGeographicalAreaCode:(id)arg1;	// IMP=0x0000000000057419
- (int)getLengthOfGeographicalAreaCode:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000572c6
- (id)convertAlphaCharactersInNumber:(id)arg1;	// IMP=0x0000000000057249
- (id)normalizeDiallableCharsOnly:(id)arg1;	// IMP=0x00000000000571c9
- (id)normalizeDigitsOnly:(id)arg1;	// IMP=0x000000000005712c
- (void)normalizeSB:(id *)arg1;	// IMP=0x00000000000570f4
- (id)normalize:(id)arg1;	// IMP=0x0000000000057057
- (_Bool)isViablePhoneNumber:(id)arg1;	// IMP=0x0000000000056fce
- (id)extractPossibleNumber:(id)arg1;	// IMP=0x0000000000056eb4
- (void)initNormalizationMappings;	// IMP=0x0000000000056554
@property(readonly, nonatomic) NSDictionary *DIGIT_MAPPINGS;
- (void)initRegularExpressionSet;	// IMP=0x0000000000055f33
- (id)init;	// IMP=0x0000000000055e6b
- (id)getNationalSignificantNumber:(id)arg1;	// IMP=0x0000000000055c83
- (_Bool)isAllDigits:(id)arg1;	// IMP=0x0000000000055bdb
- (id)stringByReplacingOccurrencesString:(id)arg1 withMap:(id)arg2 removeNonMatches:(_Bool)arg3;	// IMP=0x0000000000055a8b
- (_Bool)isStartingStringByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x0000000000055895
- (id)matchedStringByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x000000000005568d
- (id)matchesByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x00000000000555ce
- (id)matchFirstByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x00000000000554db
- (id)replaceStringByRegex:(id)arg1 regex:(id)arg2 withTemplate:(id)arg3;	// IMP=0x00000000000552d5
- (id)replaceFirstStringByRegex:(id)arg1 regex:(id)arg2 withTemplate:(id)arg3;	// IMP=0x000000000005516d
- (int)indexOfStringByString:(id)arg1 target:(id)arg2;	// IMP=0x0000000000055155
- (int)stringPositionByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x0000000000054fda
- (id)componentsSeparatedByRegex:(id)arg1 regex:(id)arg2;	// IMP=0x0000000000054f3e
- (id)regularExpressionWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000054e17
- (id)entireRegularExpressionWithPattern:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000000054c7d
- (id)errorWithObject:(id)arg1 withDomain:(id)arg2;	// IMP=0x0000000000054bdd

@end

