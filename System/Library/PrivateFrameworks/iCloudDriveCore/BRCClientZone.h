//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class BRCAccountSessionFPFS, BRCDeadlineSource, BRCFetchRecentAndFavoriteDocumentsOperation, BRCItemID, BRCPQLConnection, BRCServerZone, BRCSyncBudgetThrottle, BRCSyncDownOperation, BRCSyncOperationBackoffRatio, BRCSyncOperationThrottle, BRCSyncUpOperation, BRCThrottle, BRCThrottleBase, BRCZoneRowID, BRMangledID, CKOperationGroup, NSArray, NSDate, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSMutableIndexSet, NSSet, NSString, brc_task_tracker;
@protocol BRCClientZoneDelegate, NSObject, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface BRCClientZone : NSObject
{
    BRCAccountSessionFPFS *_session;	// 8 = 0x8
    BRCServerZone *_serverZone;	// 16 = 0x10
    id <BRCClientZoneDelegate> _delegate;	// 24 = 0x18
    BRCZoneRowID *_dbRowID;	// 32 = 0x20
    NSString *_zoneName;	// 40 = 0x28
    NSString *_ownerName;	// 48 = 0x30
    BRMangledID *_mangledID;	// 56 = 0x38
    BRCPQLConnection *_db;	// 64 = 0x40
    unsigned int _state;	// 72 = 0x48
    _Bool _activated;	// 76 = 0x4c
    _Bool _isInitialCreation;	// 77 = 0x4d
    BRCThrottleBase *_readerThrottle;	// 80 = 0x50
    long long _syncUpRetryAfter;	// 88 = 0x58
    _Atomic unsigned int _syncState;	// 96 = 0x60
    BRCSyncUpOperation *_syncUpOperation;	// 104 = 0x68
    NSError *_lastSyncUpError;	// 112 = 0x70
    _Bool _lastSyncUpErrorWasOnChainedItem;	// 120 = 0x78
    BRCSyncDownOperation *_syncDownOperation;	// 128 = 0x80
    id _syncDeadlineSourceResumer;	// 136 = 0x88
    NSError *_lastSyncDownError;	// 144 = 0x90
    BRCSyncOperationThrottle *_syncUpThrottle;	// 152 = 0x98
    BRCSyncBudgetThrottle *_syncUpBudget;	// 160 = 0xa0
    BRCSyncOperationBackoffRatio *_syncUpBackoffRatio;	// 168 = 0xa8
    BRCSyncOperationThrottle *_syncDownThrottle;	// 176 = 0xb0
    BRCDeadlineSource *_syncDeadlineSource;	// 184 = 0xb8
    NSMutableArray *_blockedOperationsOnInitialSync;	// 192 = 0xc0
    NSMutableDictionary *_runningListOperations;	// 200 = 0xc8
    NSMutableDictionary *_recursiveListOperations;	// 208 = 0xd0
    NSMutableDictionary *_fetchParentOperations;	// 216 = 0xd8
    NSMutableDictionary *_locateRecordOperations;	// 224 = 0xe0
    BRCFetchRecentAndFavoriteDocumentsOperation *_fetchRecentsOperation;	// 232 = 0xe8
    _Bool _invokeFetchRecentsOperation;	// 240 = 0xf0
    BRCThrottle *_serverStitchingOperationThrottle;	// 248 = 0xf8
    NSMutableIndexSet *_appliedTombstoneRanks;	// 256 = 0x100
    long long _lastInsertedRank;	// 264 = 0x108
    NSDate *_lastSyncDownDate;	// 272 = 0x110
    NSDate *_lastAttemptedSyncDownDate;	// 280 = 0x118
    NSObject<OS_dispatch_source> *_resetTimer;	// 288 = 0x120
    NSMutableDictionary *_syncDownBlockToPerformForBookmarkData;	// 296 = 0x128
    _Bool _shouldShowiCloudDriveAppInstallationNotification;	// 304 = 0x130
    NSMutableArray *_faultsLiveBarriers;	// 312 = 0x138
    NSMutableDictionary *_onDiskBlockToPerformForItemID;	// 320 = 0x140
    NSMutableDictionary *_downloadedBlockToPerformForItemID;	// 328 = 0x148
    NSMutableDictionary *_syncDownBlockToPerformForItemID;	// 336 = 0x150
    NSMutableDictionary *_locateBlocksToPerformForRecordID;	// 344 = 0x158
    NSMutableArray *_nextSyncDownBarriers;	// 352 = 0x160
    NSMutableArray *_currentSyncDownBarriers;	// 360 = 0x168
    id <NSObject> _hasWorkDidUpdateObserver;	// 368 = 0x170
    NSMutableArray *_nextIdleHandlers;	// 376 = 0x178
    NSMutableArray *_directoriesCreatedLastSyncUp;	// 384 = 0x180
    CKOperationGroup *_syncDownGroup;	// 392 = 0x188
    NSMutableArray *_syncDownDependencies;	// 400 = 0x190
    NSMutableArray *_allItemsDidUploadTrackers;	// 408 = 0x198
    float _syncUpBatchSizeMultiplier;	// 416 = 0x1a0
    brc_task_tracker *_taskTracker;	// 424 = 0x1a8
    _Bool _needsSave;	// 432 = 0x1b0
    unsigned long long _requestID;	// 440 = 0x1b8
    NSArray *_syncThrottles;	// 448 = 0x1c0
    NSString *_osNameRequiredToSync;	// 456 = 0x1c8
    NSSet *_itemIDsBlockedFromSyncForCZMProcessing;	// 464 = 0x1d0
    NSDictionary *_parentsOfCZMFaults;	// 472 = 0x1d8
}

- (void).cxx_destruct;	// IMP=0x00000000001597a6
@property(readonly, nonatomic) NSDictionary *parentsOfCZMFaults; // @synthesize parentsOfCZMFaults=_parentsOfCZMFaults;
@property(readonly, nonatomic) NSSet *itemIDsBlockedFromSyncForCZMProcessing; // @synthesize itemIDsBlockedFromSyncForCZMProcessing=_itemIDsBlockedFromSyncForCZMProcessing;
@property(retain, nonatomic) NSDate *lastAttemptedSyncDownDate; // @synthesize lastAttemptedSyncDownDate=_lastAttemptedSyncDownDate;
@property(readonly, nonatomic) brc_task_tracker *taskTracker; // @synthesize taskTracker=_taskTracker;
@property(readonly, nonatomic) NSString *osNameRequiredToSync; // @synthesize osNameRequiredToSync=_osNameRequiredToSync;
@property(retain, nonatomic) BRCServerZone *serverZone; // @synthesize serverZone=_serverZone;
@property(readonly, nonatomic) BRCDeadlineSource *syncDeadlineSource; // @synthesize syncDeadlineSource=_syncDeadlineSource;
@property(retain, nonatomic) BRCAccountSessionFPFS *session; // @synthesize session=_session;
@property(readonly, nonatomic) long long lastInsertedRank; // @synthesize lastInsertedRank=_lastInsertedRank;
@property(readonly, nonatomic) unsigned long long currentRequestID; // @synthesize currentRequestID=_requestID;
@property(readonly, nonatomic) NSString *zoneName; // @synthesize zoneName=_zoneName;
@property(retain, nonatomic) BRCZoneRowID *dbRowID; // @synthesize dbRowID=_dbRowID;
@property(readonly, nonatomic) unsigned int state; // @synthesize state=_state;
@property(nonatomic) _Bool needsSave; // @synthesize needsSave=_needsSave;
@property(readonly, nonatomic) BRCPQLConnection *db; // @synthesize db=_db;
@property(retain, nonatomic) id <BRCClientZoneDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool activated; // @synthesize activated=_activated;
- (void)resetSyncUpBackoffRatio;	// IMP=0x0000000000159673
- (float)syncUpBackoffRatio;	// IMP=0x000000000015965a
- (float)syncUpBackoffDelay;	// IMP=0x000000000015963c
- (_Bool)shouldSyncMangledID:(id)arg1;	// IMP=0x000000000015942c
- (_Bool)dumpActivityToContext:(id)arg1 includeExpensiveActivity:(_Bool)arg2 error:(id *)arg3;	// IMP=0x0000000000157c38
- (_Bool)_dumpItemsToContext:(id)arg1 includeAllItems:(_Bool)arg2 error:(id *)arg3;	// IMP=0x0000000000156a7c
- (void)_dumpRecursivePropertiesOfItemByRowID:(unsigned long long)arg1 context:(id)arg2 depth:(int)arg3;	// IMP=0x000000000015678f
- (void)_appendToString:(id)arg1 descriptionOfFieldNamed:(id)arg2 inResultSet:(id)arg3 pos:(int *)arg4 containsSize:(_Bool)arg5 context:(id)arg6;	// IMP=0x000000000015659d
- (long long)throttleHashWithItemID:(id)arg1;	// IMP=0x0000000000156517
- (void)networkReachabilityChanged:(_Bool)arg1;	// IMP=0x00000000001563ad
- (id)syncUpAnalyticsError;	// IMP=0x00000000001562bb
- (id)syncDownAnalyticsError;	// IMP=0x00000000001561c7
- (_Bool)removeSyncDownForItemIDBlock:(id)arg1;	// IMP=0x0000000000156032
- (_Bool)removeItemIsDownloadedBlock:(id)arg1;	// IMP=0x0000000000155ec2
- (_Bool)removeItemOnDiskBlock:(id)arg1;	// IMP=0x0000000000155d52
@property(readonly, nonatomic) _Bool hasHighPriorityWatchers;
- (void)performBlock:(CDUnknownBlockType)arg1 whenLocatingCompletesForItemWithRecordID:(id)arg2;	// IMP=0x0000000000154a9e
- (void)_enumerateAndClearLocateBlocksForRecordID:(id)arg1 exists:(_Bool)arg2;	// IMP=0x000000000015492a
- (id)insertParentChainForItem:(id)arg1;	// IMP=0x0000000000154504
- (void)performBlock:(CDUnknownBlockType)arg1 whenSyncDownCompletesLookingForItemID:(id)arg2;	// IMP=0x0000000000153a39
- (_Bool)_shouldFailSyncDownWaitImmediately;	// IMP=0x00000000001538be
- (void)_prepareForForegroundSyncDown;	// IMP=0x000000000015370d
- (void)performBlock:(CDUnknownBlockType)arg1 whenItemWithIDIsDownloaded:(id)arg2;	// IMP=0x0000000000152eb2
- (void)performBlock:(CDUnknownBlockType)arg1 whenItemWithRecordIDIsOnDisk:(id)arg2;	// IMP=0x000000000015229d
- (CDUnknownBlockType)popDownloadedBlockForItemID:(id)arg1;	// IMP=0x00000000001521f9
- (CDUnknownBlockType)popOnDiskBlockForItemID:(id)arg1;	// IMP=0x00000000001520a5
- (void)_removeDownloadedBlockToPerformForItemID:(id)arg1;	// IMP=0x0000000000152005
- (void)_removeOnDiskBlockToPerformForItemID:(id)arg1;	// IMP=0x0000000000151f65
- (void)_removeAllShareAcceptanceBlocks;	// IMP=0x00000000001517b4
- (_Bool)validateStructureLoggingToFile:(struct __sFILE *)arg1 db:(id)arg2;	// IMP=0x000000000015167d
- (_Bool)validateItemsLoggingToFile:(struct __sFILE *)arg1 db:(id)arg2;	// IMP=0x0000000000151546
- (BOOL)itemTypeByItemID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001514ea
- (_Bool)existsByItemID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001514d2
- (_Bool)existsByItemID:(id)arg1;	// IMP=0x00000000001514bc
- (id)directoryOrRootItemIDByFileID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x000000000015148c
- (id)directoryOrRootItemIDByFileID:(unsigned long long)arg1;	// IMP=0x0000000000151476
- (id)itemByRowID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x0000000000151338
- (id)itemByRowID:(unsigned long long)arg1;	// IMP=0x0000000000151322
- (id)documentItemByItemID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001512b9
- (id)documentItemByItemID:(id)arg1;	// IMP=0x00000000001512a3
- (id)itemByItemID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001511f9
- (id)itemByItemID:(id)arg1;	// IMP=0x00000000001511e3
- (id)serverHiddenChildCountWithParentID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001511b3
- (id)serverQuotaUsageWithParentID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000151183
- (_Bool)containsNonRejectedChildWithParentID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000151131
- (id)clientChildCountWithParentID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000151101
- (id)serverChildCountWithParentID:(id)arg1 db:(id)arg2;	// IMP=0x00000000001510d1
- (id)serverItemByRowID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x0000000000150fea
- (id)serverItemByRowID:(unsigned long long)arg1;	// IMP=0x0000000000150fd4
- (id)serverItemByItemID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000150ee9
- (id)serverItemByItemID:(id)arg1;	// IMP=0x0000000000150ed3
- (long long)serverRankByItemID:(id)arg1 db:(id)arg2;	// IMP=0x0000000000150e56
- (id)serverItemByRank:(long long)arg1;	// IMP=0x0000000000150d6a
- (long long)serverRankByItemID:(id)arg1;	// IMP=0x0000000000150d54
- (id)itemsParentedToThisZoneButLivingInAnOtherZone;	// IMP=0x0000000000150bf5
- (id)allItemsSortedByDepthDescending:(_Bool)arg1;	// IMP=0x00000000001509a8
- (id)allItems;	// IMP=0x0000000000150849
- (_Bool)_resetItemsTable;	// IMP=0x000000000015071b
- (_Bool)dumpTablesToContext:(id)arg1 includeAllItems:(_Bool)arg2 error:(id *)arg3;	// IMP=0x0000000000150061
- (_Bool)dumpStatusToContext:(id)arg1 error:(id *)arg2;	// IMP=0x000000000014f0a7
- (void)fetchRecentAndFavoriteDocuments:(_Bool)arg1;	// IMP=0x000000000014e4c3
- (void)fetchRecentAndFavoriteDocuments;	// IMP=0x000000000014e4af
- (void)clearAndRefetchRecentAndFavoriteDocuments;	// IMP=0x000000000014e35d
- (id)locateRecordIfNecessaryForRecordID:(id)arg1 isUserWaiting:(_Bool)arg2;	// IMP=0x000000000014df4b
- (id)fetchParentChainIfNecessaryWithParentItemID:(id)arg1 isUserWaiting:(_Bool)arg2;	// IMP=0x000000000014da0d
- (id)fetchRecursiveDirectoryContentsIfNecessary:(id)arg1 isUserWaiting:(_Bool)arg2 rescheduleApply:(_Bool)arg3;	// IMP=0x000000000014cf4b
- (id)fetchDirectoryContentsIfNecessary:(id)arg1 isUserWaiting:(_Bool)arg2 rescheduleApplyScheduler:(_Bool)arg3;	// IMP=0x000000000014c324
- (_Bool)_isSideSyncOperationBlockedWithName:(id)arg1 isListDirectoryOp:(_Bool)arg2;	// IMP=0x000000000014c0b2
- (_Bool)_isSideSyncOperationBlockedWithName:(id)arg1;	// IMP=0x000000000014c09e
- (id)cancelLocateRecordOperationAndReschedule:(id)arg1;	// IMP=0x000000000014bfd6
- (void)_registerLocateRecordOperation:(id)arg1;	// IMP=0x000000000014bec0
- (id)cancelFetchParentChainOperationAndReschedule:(id)arg1;	// IMP=0x000000000014bdf8
- (void)_registerFetchParentChainOperation:(id)arg1;	// IMP=0x000000000014bce2
- (void)_blockLowPriorityStitchingOperationsForOperation:(id)arg1;	// IMP=0x000000000014b102
- (id)cancelListOperationAndReschedule:(id)arg1;	// IMP=0x000000000014affb
- (void)_registerListOperation:(id)arg1;	// IMP=0x000000000014ad3e
- (void)_registerServerStitchingOperation:(id)arg1;	// IMP=0x000000000014a63f
- (_Bool)_hasNonDiscretionaryServerStitchingOperation;	// IMP=0x000000000014a524
- (_Bool)_checkIfEnumeratorContainsNonDiscretionaryOp:(id)arg1;	// IMP=0x000000000014a3d7
- (_Bool)hasCompletedInitialSyncDownOnce;	// IMP=0x000000000014a3c6
- (void)flushAppliedTombstones;	// IMP=0x000000000014a30a
- (void)didApplyTombstoneForRank:(long long)arg1;	// IMP=0x000000000014a21c
- (void)didGCTombstoneRanks:(id)arg1;	// IMP=0x000000000014a05b
- (void)handleRootRecordDeletion;	// IMP=0x0000000000149ee7
- (void)recomputeAllItemsDidUploadState;	// IMP=0x0000000000149cf0
- (void)_allItemsDidUploadWithError:(id)arg1;	// IMP=0x00000000001499eb
- (_Bool)_hasAllItemsDidUploadHandlers;	// IMP=0x00000000001499bf
- (_Bool)_crossZoneMoveDocumentsToZone:(id)arg1;	// IMP=0x000000000014800d
- (void)didSyncDownRequestID:(unsigned long long)arg1 maxApplyRank:(long long)arg2 caughtUpWithServer:(_Bool)arg3 syncDownDate:(id)arg4;	// IMP=0x0000000000146238
- (void)listedUpToRank:(long long)arg1;	// IMP=0x000000000014621a
- (void)_fixupMissingCrossMovedItems;	// IMP=0x00000000001460b9
- (void)syncDownOperation:(id)arg1 didFinishWithError:(id)arg2 status:(long long)arg3;	// IMP=0x0000000000144ea1
- (void)notifyClient:(id)arg1 whenIdle:(CDUnknownBlockType)arg2;	// IMP=0x0000000000143fa5
- (void)notifyClient:(id)arg1 afterNextSyncDown:(CDUnknownBlockType)arg2;	// IMP=0x0000000000143d54
- (void)_flushIdleBlocksIfNeeded;	// IMP=0x0000000000143b1e
- (_Bool)_isIdle;	// IMP=0x00000000001435df
@property(readonly, nonatomic) NSArray *syncThrottles; // @synthesize syncThrottles=_syncThrottles;
- (void)_syncUpOfRecords:(id)arg1 createdAppLibraryNames:(id)arg2 didFinishWithError:(id)arg3 errorWasOnPCSChainedItem:(_Bool)arg4;	// IMP=0x0000000000142701
- (void)learnCKInfosFromSavedRecords:(id)arg1 isOutOfBandModifyRecords:(_Bool)arg2;	// IMP=0x0000000000140ab9
- (unsigned long long)allocateSyncUpRequestID;	// IMP=0x0000000000140a55
- (void)_markRequestIDAcked;	// IMP=0x0000000000140a18
- (void)_markLatestSyncRequestFailed;	// IMP=0x000000000014084d
- (id)directoryItemIDsCreatedLastSyncUp;	// IMP=0x00000000001407a7
- (void)prepareDirectoryForSyncUp:(id)arg1;	// IMP=0x0000000000140602
- (void)clearSyncUpError;	// IMP=0x00000000001405e8
- (void)resetSyncBudgetAndThrottle;	// IMP=0x0000000000140549
- (void)scheduleSyncDownForOOBModifyRecordsAck;	// IMP=0x0000000000140512
- (void)scheduleSyncDownFirst;	// IMP=0x00000000001404db
- (void)scheduleSyncDown;	// IMP=0x00000000001404c7
- (void)scheduleSyncDownWithGroup:(id)arg1;	// IMP=0x0000000000140459
- (void)scheduleSyncUp;	// IMP=0x000000000014041b
- (void)_startSync;	// IMP=0x000000000013eda6
- (id)syncDownImmediately;	// IMP=0x000000000013e6fc
- (void)_blockSyncDownOnStitchingOperations;	// IMP=0x000000000013dc9c
- (_Bool)_blockExistingOperationIfNecessary:(id)arg1 onNewOperation:(id)arg2;	// IMP=0x000000000013da8c
- (void)removeSyncDownDependency:(id)arg1;	// IMP=0x000000000013d8b3
- (void)addSyncDownDependency:(id)arg1;	// IMP=0x000000000013d5c5
- (void)clearSyncStateBits:(unsigned int)arg1;	// IMP=0x000000000013d3bc
- (void)setSyncStateBits:(unsigned int)arg1;	// IMP=0x000000000013d032
@property(readonly) unsigned int syncState;
- (void)didClearOutOfQuota;	// IMP=0x000000000013cf67
- (id)_faultsEnumeratorFromRow:(unsigned long long)arg1 batchSize:(unsigned long long)arg2;	// IMP=0x000000000013cdd9
- (void)_enumerateFaultsWithBlock:(CDUnknownBlockType)arg1 rowID:(unsigned long long)arg2 batchSize:(unsigned long long)arg3;	// IMP=0x000000000013caeb
- (void)enumerateFaultsAsyncWithBlock:(CDUnknownBlockType)arg1 batchSize:(unsigned long long)arg2;	// IMP=0x000000000013c9b7
- (id)documentsNotIdleEnumeratorWithDB:(id)arg1 startingRowID:(unsigned long long)arg2 batchSize:(unsigned long long)arg3;	// IMP=0x000000000013c850
- (_Bool)hasItemsWithInFlightDiffs;	// IMP=0x000000000013c803
- (id)itemsWithInFlightDiffsEnumerator;	// IMP=0x000000000013c6a4
- (_Bool)hasItems;	// IMP=0x000000000013c657
- (id)itemsEnumeratorWithDB:(id)arg1;	// IMP=0x000000000013c4f7
- (BOOL)serverItemTypeByItemID:(id)arg1 db:(id)arg2;	// IMP=0x000000000013c309
- (_Bool)existsByParentID:(id)arg1 andCaseInsensitiveLogicalName:(id)arg2;	// IMP=0x000000000013c2a9
- (_Bool)existsByParentID:(id)arg1 andLogicalName:(id)arg2 excludingItemID:(id)arg3 db:(id)arg4;	// IMP=0x000000000013c177
- (_Bool)existsByParentID:(id)arg1 andLogicalName:(id)arg2 db:(id)arg3;	// IMP=0x000000000013c15f
- (_Bool)existsByParentID:(id)arg1 andLogicalName:(id)arg2 excludingItemID:(id)arg3;	// IMP=0x000000000013c149
- (_Bool)existsByParentID:(id)arg1 andLogicalName:(id)arg2;	// IMP=0x000000000013c133
- (id)itemByParentID:(id)arg1 andPhysicalName:(id)arg2;	// IMP=0x000000000013c11d
- (id)itemByParentID:(id)arg1 andPhysicalName:(id)arg2 db:(id)arg3;	// IMP=0x000000000013bdd5
- (id)itemByParentID:(id)arg1 andLogicalName:(id)arg2 db:(id)arg3;	// IMP=0x000000000013ba8d
- (id)itemByParentID:(id)arg1 andLogicalName:(id)arg2;	// IMP=0x000000000013ba77
- (id)serverItemByParentID:(id)arg1 andLogicalName:(id)arg2 db:(id)arg3;	// IMP=0x000000000013b985
- (id)serverItemByParentID:(id)arg1 andLogicalName:(id)arg2;	// IMP=0x000000000013b96f
- (id)itemByFileID:(unsigned long long)arg1 db:(id)arg2;	// IMP=0x000000000013b82f
- (id)itemByFileID:(unsigned long long)arg1;	// IMP=0x000000000013b819
- (id)itemByDocumentID:(unsigned int)arg1 db:(id)arg2;	// IMP=0x000000000013b6d9
- (id)itemByDocumentID:(unsigned int)arg1;	// IMP=0x000000000013b6c3
- (id)descriptionWithContext:(id)arg1;	// IMP=0x000000000013b4ec
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000013b471
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToClientZone:(id)arg1;	// IMP=0x000000000013b3e5
- (_Bool)isSyncBlockedBecauseOSNeedsUpgrade;	// IMP=0x000000000013b3cc
- (_Bool)isSyncBlockedBecauseAppNotInstalled;	// IMP=0x000000000013b3b3
- (_Bool)isSyncBlocked;	// IMP=0x000000000013b376
- (void)clearStateBits:(unsigned int)arg1;	// IMP=0x000000000013b35d
- (_Bool)setStateBits:(unsigned int)arg1;	// IMP=0x000000000013b333
- (unsigned int)_activateState:(unsigned int)arg1 origState:(unsigned int)arg2;	// IMP=0x000000000013b0da
- (void)_forDBUpgrade_setStateBits:(unsigned int)arg1 clearStateBits:(unsigned int)arg2;	// IMP=0x000000000013b0a6
@property(readonly, nonatomic) _Bool isForeground;
- (void)disconnectNSMDQListenerAsync;	// IMP=0x000000000013ad8b
@property(readonly, nonatomic) _Bool isCloudDocsZone;
- (void)unregisterAllItemsDidUploadTracker:(id)arg1;	// IMP=0x000000000013aca7
- (void)registerAllItemsDidUploadTracker:(id)arg1;	// IMP=0x000000000013abbb
- (id)sizeOfItemsNeedingSyncUpOrUploadAndReturnError:(id *)arg1;	// IMP=0x000000000013a9c5
- (id)itemCountPendingUploadOrSyncUpAndReturnError:(id *)arg1;	// IMP=0x000000000013a72f
- (_Bool)handleZoneLevelErrorIfNeeded:(id)arg1 forItemCreation:(_Bool)arg2;	// IMP=0x000000000013a315
- (void)scheduleResetServerAndClientTruthsForReason:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000000013a039
- (void)scheduleResetServerAndClientTruthsForReason:(id)arg1;	// IMP=0x000000000013a025
- (void)close;	// IMP=0x00000000001388bd
- (void)resume;	// IMP=0x00000000001382e1
- (void)associateWithServerZone:(id)arg1 offline:(_Bool)arg2;	// IMP=0x00000000001381a8
- (void)associateWithServerZone:(id)arg1;	// IMP=0x0000000000138194
- (void)updateWithPlist:(id)arg1;	// IMP=0x0000000000137e87
- (void)_recreateSyncBudgetsAndThrottlesIfNeeded;	// IMP=0x0000000000137d47
@property(readonly, nonatomic) NSMutableDictionary *plist;
- (void)dealloc;	// IMP=0x0000000000137abd
- (id)initWithMangledID:(id)arg1 dbRowID:(id)arg2 db:(id)arg3 plist:(id)arg4 session:(id)arg5 initialCreation:(_Bool)arg6;	// IMP=0x000000000013774d
- (id)init;	// IMP=0x00000000001376c1
- (void)_increaseSyncUpBatchSizeAfterSuccess;	// IMP=0x000000000013755e
- (void)_decreaseSyncUpBatchSizeAfterError;	// IMP=0x00000000001374c7
@property(readonly, nonatomic) unsigned int syncUpBatchSize;
@property(readonly, nonatomic) _Bool isSharedZone;
@property(readonly, nonatomic) _Bool isPrivateZone;
@property(readonly, nonatomic) BRMangledID *mangledID; // @synthesize mangledID=_mangledID;
@property(readonly, nonatomic) BRCItemID *rootItemID;
- (id)asSharedClientZone;	// IMP=0x0000000000137306
- (id)asPrivateClientZone;	// IMP=0x0000000000137290
- (id)ownerName;	// IMP=0x000000000013727c
- (void)_finishedReset:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000a882d
- (id)_cancelAllOperationsForReset;	// IMP=0x00000000000a75a8
- (void)_performAfterResetServerAndClientTruthsAndUnlinkDataAndPurgeTheZone:(CDUnknownBlockType)arg1;	// IMP=0x00000000000a7260
- (void)_performAfterResetServerAndClientTruthsAndUnlinkData:(CDUnknownBlockType)arg1;	// IMP=0x00000000000a71fe
- (void)_performAfterResetServerAndClientSharedTruthsAndUnlinkData:(CDUnknownBlockType)arg1;	// IMP=0x00000000000a7137
- (void)_performAfterResetServerAndClientPrivateTruthsAndUnlinkData:(CDUnknownBlockType)arg1;	// IMP=0x00000000000a711b
- (void)_performResetAndWantsUnlink:(_Bool)arg1 clientTruthBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000000000a6bef
- (_Bool)_postHardResetHandlingWithDB:(id)arg1 completionBlock:(CDUnknownBlockType)arg2 error:(id *)arg3;	// IMP=0x00000000000a65aa
- (_Bool)_performHardResetOnClientItemsAndWantsUnlink:(_Bool)arg1 db:(id)arg2 error:(id *)arg3;	// IMP=0x00000000000a5e22
- (_Bool)_deleteRelevantPackageItemsWithDB:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000a5bad
- (void)_postSoftResetHandlingAndWantsUnlink:(_Bool)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000a5b45
- (void)_performSoftResetOnItems:(id)arg1 wantsUnlink:(_Bool)arg2;	// IMP=0x00000000000a5929
- (void)_handleSoftResetOfLocalItem:(id)arg1 wantsUnlink:(_Bool)arg2;	// IMP=0x00000000000a574f
- (id)_getRelevantClientTruthItemEnumerator;	// IMP=0x00000000000a5738
- (void)_deleteJobsMatchingServerZone;	// IMP=0x00000000000a5629
- (void)_resetAndDeleteServerTruthData;	// IMP=0x00000000000a545a
- (_Bool)supportsKeepingClientItemsDuringReset;	// IMP=0x00000000000a5448
- (void)_reset:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000a5068
- (void)scheduleReset:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000a3c33
- (void)scheduleReset:(unsigned long long)arg1;	// IMP=0x00000000000a3c1f
- (void)cancelReset;	// IMP=0x00000000000a3b4a
- (void)notifyClient:(id)arg1 whenFaultingIsDone:(CDUnknownBlockType)arg2;	// IMP=0x000000000018da6a
- (void)signalFaultingWatchersWithError:(id)arg1;	// IMP=0x000000000018d913
- (void)itemMovedIntoShareInThisZone:(id)arg1 associatedItemID:(id)arg2;	// IMP=0x000000000018d7a1
- (id)deadItemByParentID:(id)arg1 andUnbouncedLogicalName:(id)arg2;	// IMP=0x000000000018d5e6
- (id)liveItemByParentID:(id)arg1 andCaseInsensitiveLogicalName:(id)arg2 excludingItemID:(id)arg3;	// IMP=0x000000000018d37f
- (id)liveItemByParentID:(id)arg1 andLogicalName:(id)arg2 excludingItemID:(id)arg3;	// IMP=0x000000000018d118

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

