//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NSString;

@interface RSPointCloud : NSObject
{
    struct vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>> _points;	// 8 = 0x8
    struct vector<unsigned char __attribute__((ext_vector_type(4))), std::allocator<unsigned char __attribute__((ext_vector_type(4)))>> _semLabels;	// 32 = 0x20
    struct vector<unsigned short __attribute__((ext_vector_type(4))), std::allocator<unsigned short __attribute__((ext_vector_type(4)))>> _semVotes;	// 56 = 0x38
    struct vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>> _colors;	// 80 = 0x50
    struct vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>> _cameraPositions;	// 104 = 0x68
    struct unordered_map<std::string, unsigned int __attribute__((ext_vector_type(2))), std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int __attribute__((ext_vector_type(2)))>>> _mappingInterval;	// 128 = 0x80
    struct unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long>> _voxelSet;	// 168 = 0xa8
    struct unordered_map<std::string, std::unordered_set<unsigned long long>, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, std::unordered_set<unsigned long long>>>> _keyframeVoxelSet;	// 208 = 0xd0
    struct vector<float __attribute__((ext_vector_type(3))), std::allocator<float __attribute__((ext_vector_type(3)))>> _rawPoints;	// 248 = 0xf8
    struct unordered_map<std::string, unsigned int __attribute__((ext_vector_type(2))), std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<const std::string, unsigned int __attribute__((ext_vector_type(2)))>>> _rawMappingInterval;	// 272 = 0x110
    unsigned long long _rawUpdateCursor;	// 312 = 0x138
    _Bool _isCameraPositionEnabled;	// 320 = 0x140
}

- (id).cxx_construct;	// IMP=0x0000000000194509
- (void).cxx_destruct;	// IMP=0x0000000000194435
- (const MISSING_TYPE **)cameraPositions;	// IMP=0x000000000019442b
- (unsigned long long)rawUpdateCursor;	// IMP=0x000000000019441e
- (unsigned long long)rawCount;	// IMP=0x0000000000194406
- (const MISSING_TYPE **)rawPoints;	// IMP=0x00000000001943f9
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000019416a
- (void)reset;	// IMP=0x000000000019409d
- (MISSING_TYPE *)mappingIntervalOfKeyframe:(id)arg1;	// IMP=0x0000000000193fce
- (void)select:(unsigned long long)arg1 indices:(const unsigned long long *)arg2;	// IMP=0x0000000000193cda
- (void)processWithVoxelize:(_Bool)arg1 asPythonApproach:(_Bool)arg2 resample:(_Bool)arg3;	// IMP=0x0000000000193b5c
- (void)accumulateWithKeyframesInWorld:(id)arg1 voxelize:(_Bool)arg2;	// IMP=0x0000000000191f10
- (void)append:(unsigned long long)arg1 points:(const MISSING_TYPE **)arg2 semanticLabels:(const MISSING_TYPE **)arg3 semanticVotes:(const MISSING_TYPE **)arg4 colors:(MISSING_TYPE **)arg5;	// IMP=0x0000000000191e25
- (id)initWithCount:(unsigned long long)arg1 points:(const MISSING_TYPE **)arg2 semanticLabels:(const MISSING_TYPE **)arg3 semanticVotes:(const MISSING_TYPE **)arg4 colors:(MISSING_TYPE **)arg5;	// IMP=0x0000000000191d2a
- (id)initWithKeyframes:(id)arg1 enableCameraPosition:(_Bool)arg2;	// IMP=0x0000000000191637
- (id)initWithDictionary:(id)arg1;	// IMP=0x0000000000190a6b
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000001906da
@property(readonly, nonatomic) MISSING_TYPE **colors;
@property(readonly, nonatomic) const MISSING_TYPE **semanticVotes;
@property(readonly, nonatomic) const MISSING_TYPE **semanticLabels;
@property(readonly, nonatomic) const MISSING_TYPE **points;
@property(readonly, nonatomic) unsigned long long count;
- (id)init;	// IMP=0x000000000019065a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

