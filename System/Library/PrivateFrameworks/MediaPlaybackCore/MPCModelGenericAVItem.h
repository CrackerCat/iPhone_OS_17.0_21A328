//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MediaPlayer/MPAVItem.h>

@class ICAVAssetDownloadURLSession, ICContentKeySession, ICMusicSubscriptionLeaseSession, ICMusicSubscriptionLeaseStatus, ICStoreRequestContext, ICURLRequest, MPCAudioAssetTypeSelection, MPCAudioAssetTypeSelector, MPCDeferrableTask, MPCModelGenericAVItemTimedMetadataRequest, MPCModelGenericAVItemTimedMetadataResponse, MPCModelGenericAVItemUserIdentityPropertySet, MPCPlaybackEngineEventStream, MPCPlaybackRequestEnvironment, MPCPlayerAudioFormat, MPCPlayerAudioRoute, MPCSuzeLeaseSession, MPGaplessInfo, MPMediaLibrary, MPModelGenericObject, MPPropertySet, MPSubscriptionStatusPlaybackInformation, NSArray, NSData, NSDictionary, NSNumber, NSObject, NSOperationQueue, NSString, NSURL;
@protocol MPCModelPlaybackAssetCacheProviding, MPCReportingIdentityPropertiesLoading, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface MPCModelGenericAVItem : MPAVItem
{
    NSObject<OS_dispatch_queue> *_accessQueue;	// 112 = 0x70
    _Bool _allowsAirPlayFromCloud;	// 120 = 0x78
    _Bool _hasLoadedSubscriptionLeaseSession;	// 121 = 0x79
    NSObject<OS_dispatch_queue> *_subscriptionLeaseSessionLoadQueue;	// 128 = 0x80
    ICMusicSubscriptionLeaseSession *_subscriptionLeaseSession;	// 136 = 0x88
    _Bool _hasLoadedSubscriptionPlaybackInformation;	// 144 = 0x90
    MPSubscriptionStatusPlaybackInformation *_subscriptionPlaybackInformation;	// 152 = 0x98
    NSObject<OS_dispatch_queue> *_subscriptionPlaybackInformationLoadQueue;	// 160 = 0xa0
    _Bool _shouldAutomaticallyRefreshSubscriptionLease;	// 168 = 0xa8
    _Bool _isSubscriptionPolicyContent;	// 169 = 0xa9
    _Bool _lastPreparedForNonZeroRate;	// 170 = 0xaa
    long long _subscriptionLeaseRequestCount;	// 176 = 0xb0
    _Bool _didDeferPreventionStatusUpdate;	// 184 = 0xb8
    MPCSuzeLeaseSession *_suzeLeaseSession;	// 192 = 0xc0
    _Bool _isAutomaticallyRefreshingSuzeLeaseSession;	// 200 = 0xc8
    CDUnknownBlockType _firstBecomeActivePlayerItemBlock;	// 208 = 0xd0
    NSArray *_currentGlobalTimedMetadataGroups;	// 216 = 0xd8
    MPModelGenericObject *_flattenedGenericObject;	// 224 = 0xe0
    MPModelGenericObject *_flattenedMetadataGenericObject;	// 232 = 0xe8
    MPModelGenericObject *_metadataGenericObject;	// 240 = 0xf0
    MPPropertySet *_itemProperties;	// 248 = 0xf8
    id <MPCReportingIdentityPropertiesLoading> _identityPropertiesLoader;	// 256 = 0x100
    MPCModelGenericAVItemTimedMetadataRequest *_timedMetadataRequest;	// 264 = 0x108
    MPCModelGenericAVItemTimedMetadataResponse *_timedMetadataResponse;	// 272 = 0x110
    NSOperationQueue *_timedMetadataOperationQueue;	// 280 = 0x118
    _Bool _isMusicCellularStreamingAllowed;	// 288 = 0x120
    _Bool _didReceiveHLSTimedMetadata;	// 289 = 0x121
    NSString *_hlsStreamIdentifier;	// 296 = 0x128
    _Bool _isiTunesStoreStream;	// 304 = 0x130
    ICStoreRequestContext *_storeRequestContext;	// 312 = 0x138
    NSURL *_streamingKeyCertificateURL;	// 320 = 0x140
    NSURL *_streamingKeyServerURL;	// 328 = 0x148
    NSString *_rtcReportingServiceIdentifier;	// 336 = 0x150
    MPCModelGenericAVItemUserIdentityPropertySet *_identityPropertySet;	// 344 = 0x158
    ICContentKeySession *_contentKeySession;	// 352 = 0x160
    ICAVAssetDownloadURLSession *_hlsDownloadURLSession;	// 360 = 0x168
    ICURLRequest *_hlsDownloadURLRequest;	// 368 = 0x170
    struct os_unfair_lock_s _genericObjectLock;	// 376 = 0x178
    _Bool _mediaItemNeedsLoading;	// 380 = 0x17c
    NSURL *_tempFileURLToCleanup;	// 384 = 0x180
    MPCDeferrableTask *_deferredLeaseAcquisitionTask;	// 392 = 0x188
    _Bool _radioPlayback;	// 400 = 0x190
    _Bool _radioStreamPlayback;	// 401 = 0x191
    _Bool _subscriptionRequired;	// 402 = 0x192
    _Bool _hlsAsset;	// 403 = 0x193
    _Bool _downloadedAsset;	// 404 = 0x194
    _Bool _prioritizeStartupOverQuality;	// 405 = 0x195
    long long _leasePlaybackPreventionState;	// 408 = 0x198
    ICMusicSubscriptionLeaseStatus *_leaseStatus;	// 416 = 0x1a0
    NSDictionary *_audioFormatsDictionary;	// 424 = 0x1a8
    long long _preferredAudioAssetType;	// 432 = 0x1b0
    MPCAudioAssetTypeSelection *_preferredAudioAssetTypeSelection;	// 440 = 0x1b8
    id <MPCModelPlaybackAssetCacheProviding> _assetCacheProvider;	// 448 = 0x1c0
    NSString *_assetSourceStoreFrontID;	// 456 = 0x1c8
    long long _equivalencySourceAdamID;	// 464 = 0x1d0
    MPModelGenericObject *_genericObject;	// 472 = 0x1d8
    NSData *_jingleTimedMetadata;	// 480 = 0x1e0
    MPMediaLibrary *_mediaLibrary;	// 488 = 0x1e8
    NSNumber *_siriInitiated;	// 496 = 0x1f0
    MPCPlaybackRequestEnvironment *_playbackRequestEnvironment;	// 504 = 0x1f8
    long long _stationItemLikedState;	// 512 = 0x200
    NSDictionary *_trackInfo;	// 520 = 0x208
    NSString *_playerID;	// 528 = 0x210
    MPCPlaybackEngineEventStream *_eventStream;	// 536 = 0x218
    MPCPlayerAudioFormat *_preferredFormat;	// 544 = 0x220
    MPCPlayerAudioFormat *_activeFormat;	// 552 = 0x228
    long long _activeFormatJustification;	// 560 = 0x230
    NSArray *_alternateFormats;	// 568 = 0x238
    NSArray *_availableSortedFormats;	// 576 = 0x240
    MPCPlayerAudioRoute *_audioRoute;	// 584 = 0x248
    NSString *_previousQueueItemID;	// 592 = 0x250
    MPCAudioAssetTypeSelector *_audioAssetTypeSelector;	// 600 = 0x258
    long long _loadedAudioAssetType;	// 608 = 0x260
}

+ (id)_downloadCompletionPendingItems;	// IMP=0x001000000011abd2
+ (id)_utilitySerialQueue;	// IMP=0x001000000011aba2
+ (_Bool)_prefersHighQualityVideoContentForNetworkType:(long long)arg1;	// IMP=0x001000000011aa5e
+ (_Bool)_prefersHighQualityAudioContentForNetworkType:(long long)arg1;	// IMP=0x001000000011a8ad
+ (long long)_unwrapPlaybackError:(id)arg1;	// IMP=0x001000000011a782
- (void).cxx_destruct;	// IMP=0x000000000011160d
@property(nonatomic) _Bool prioritizeStartupOverQuality; // @synthesize prioritizeStartupOverQuality=_prioritizeStartupOverQuality;
@property(readonly, nonatomic, getter=isDownloadedAsset) _Bool downloadedAsset; // @synthesize downloadedAsset=_downloadedAsset;
@property(readonly, nonatomic, getter=isHLSAsset) _Bool hlsAsset; // @synthesize hlsAsset=_hlsAsset;
@property(readonly, nonatomic) long long loadedAudioAssetType; // @synthesize loadedAudioAssetType=_loadedAudioAssetType;
@property(retain, nonatomic) MPCAudioAssetTypeSelector *audioAssetTypeSelector; // @synthesize audioAssetTypeSelector=_audioAssetTypeSelector;
@property(copy, nonatomic) NSString *previousQueueItemID; // @synthesize previousQueueItemID=_previousQueueItemID;
@property(retain, nonatomic) MPCPlayerAudioRoute *audioRoute; // @synthesize audioRoute=_audioRoute;
@property(retain, nonatomic) NSArray *availableSortedFormats; // @synthesize availableSortedFormats=_availableSortedFormats;
@property(retain, nonatomic) NSArray *alternateFormats; // @synthesize alternateFormats=_alternateFormats;
@property(nonatomic) long long activeFormatJustification; // @synthesize activeFormatJustification=_activeFormatJustification;
@property(retain, nonatomic) MPCPlayerAudioFormat *activeFormat; // @synthesize activeFormat=_activeFormat;
@property(retain, nonatomic) MPCPlayerAudioFormat *preferredFormat; // @synthesize preferredFormat=_preferredFormat;
@property(nonatomic) __weak MPCPlaybackEngineEventStream *eventStream; // @synthesize eventStream=_eventStream;
@property(retain, nonatomic) NSString *playerID; // @synthesize playerID=_playerID;
@property(retain, nonatomic) NSDictionary *trackInfo; // @synthesize trackInfo=_trackInfo;
@property(nonatomic) long long stationItemLikedState; // @synthesize stationItemLikedState=_stationItemLikedState;
@property(readonly, copy, nonatomic) MPCPlaybackRequestEnvironment *playbackRequestEnvironment; // @synthesize playbackRequestEnvironment=_playbackRequestEnvironment;
@property(nonatomic, getter=isSubscriptionRequired) _Bool subscriptionRequired; // @synthesize subscriptionRequired=_subscriptionRequired;
@property(nonatomic, getter=isRadioStreamPlayback) _Bool radioStreamPlayback; // @synthesize radioStreamPlayback=_radioStreamPlayback;
@property(nonatomic, getter=isRadioPlayback) _Bool radioPlayback; // @synthesize radioPlayback=_radioPlayback;
@property(copy, nonatomic, getter=isSiriInitiated) NSNumber *siriInitiated; // @synthesize siriInitiated=_siriInitiated;
@property(retain, nonatomic) MPMediaLibrary *mediaLibrary; // @synthesize mediaLibrary=_mediaLibrary;
@property(readonly, copy, nonatomic) NSData *jingleTimedMetadata; // @synthesize jingleTimedMetadata=_jingleTimedMetadata;
@property(retain, nonatomic) MPModelGenericObject *genericObject; // @synthesize genericObject=_genericObject;
@property(nonatomic) long long equivalencySourceAdamID; // @synthesize equivalencySourceAdamID=_equivalencySourceAdamID;
@property(copy, nonatomic) NSString *assetSourceStoreFrontID; // @synthesize assetSourceStoreFrontID=_assetSourceStoreFrontID;
@property(retain, nonatomic) id <MPCModelPlaybackAssetCacheProviding> assetCacheProvider; // @synthesize assetCacheProvider=_assetCacheProvider;
@property(readonly, nonatomic) MPCAudioAssetTypeSelection *preferredAudioAssetTypeSelection; // @synthesize preferredAudioAssetTypeSelection=_preferredAudioAssetTypeSelection;
@property(readonly, nonatomic) long long preferredAudioAssetType; // @synthesize preferredAudioAssetType=_preferredAudioAssetType;
@property(copy, nonatomic) NSDictionary *audioFormatsDictionary; // @synthesize audioFormatsDictionary=_audioFormatsDictionary;
- (id)leaseStatus;	// IMP=0x000000000011128e
- (long long)leasePlaybackPreventionState;	// IMP=0x000000000011127d
- (void)contentKeySession:(id)arg1 didFinishProcessingKey:(id)arg2 withResponse:(id)arg3 error:(id)arg4;	// IMP=0x0000000000111154
- (void)reevaluateType;	// IMP=0x000000000011107c
- (void)_removeFromDownloadCompletionPendingItems;	// IMP=0x0000000000110ff1
- (void)_addToDownloadCompletionPendingItems;	// IMP=0x0000000000110f66
- (_Bool)supportsVocalAttenuation;	// IMP=0x0000000000110ca8
- (void)resumeContentKeySession;	// IMP=0x0000000000110c84
- (void)pauseContentKeySession;	// IMP=0x0000000000110c60
- (id)analyticsFormatType;	// IMP=0x0000000000110a34
- (id)analyticsContentType;	// IMP=0x00000000001109e0
- (void)_updatePreventionStatusWithLeaseSession:(id)arg1;	// IMP=0x000000000011064a
- (void)_updateJingleTimedMetadata;	// IMP=0x0000000000110178
- (void)_updateAutomaticSubscriptionLeaseRefresh;	// IMP=0x000000000011011f
- (id)_storeUbiquitousIdentifier;	// IMP=0x00000000001100cf
- (id)_stopTime;	// IMP=0x000000000011007f
- (double)_startTime;	// IMP=0x000000000011002f
- (id)_storeRequestContext;	// IMP=0x000000000010ffaa
- (_Bool)usesBookmarking;	// IMP=0x000000000010ff55
- (id)_rtcReportingServiceIdentifierWithAssetURL:(id)arg1;	// IMP=0x000000000010fc22
- (id)_rtcReportingMediaIdentifierWithAssetLoadProperties:(id)arg1;	// IMP=0x000000000010fa58
- (id)_radioStation;	// IMP=0x000000000010f9ed
- (void)_postInvalidationNotifications;	// IMP=0x000000000010f913
- (id)_modelPlaybackPosition;	// IMP=0x000000000010f855
- (void)_invalidateContentItemForTimedMetadataChangesChangingRevisionID:(_Bool)arg1;	// IMP=0x000000000010f775
- (void)_getUnverifiedSubscriptionLeaseSessionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000010f4ed
- (void)_getSubscriptionLeasePropertiesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000010f205
- (id)_bookmarkTime;	// IMP=0x000000000010f184
- (unsigned long long)_audioFormatPreference;	// IMP=0x000000000010f167
- (void)_applyPreferredPeakBitRateToPlayerItem:(id)arg1 withItemType:(long long)arg2;	// IMP=0x000000000010ebf3
- (void)_applyLoudnessInfo;	// IMP=0x000000000010e742
- (_Bool)_allowsStreamingPlayback;	// IMP=0x000000000010e73a
- (CDStruct_c6d350ec)_timeoutValues;	// IMP=0x000000000010e53c
- (void)_timedMetadataResponseDidInvalidateNotification:(id)arg1;	// IMP=0x000000000010e4f5
- (void)_suzeLeaseSessionRenewDidFailNotification:(id)arg1;	// IMP=0x000000000010e3e2
- (void)_subscriptionLeaseStatusDidChangeNotification:(id)arg1;	// IMP=0x000000000010e347
- (void)_contentTasteControllerDidChangeNotification:(id)arg1;	// IMP=0x000000000010e2fc
- (void)_ageVerificationStateDidChangeNotification:(id)arg1;	// IMP=0x000000000010e2b1
- (void)_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:(id)arg1;	// IMP=0x000000000010e266
- (void)environmentMonitorDidChangeNetworkType:(id)arg1;	// IMP=0x000000000010e21b
- (void)nowPlayingInfoCenter:(id)arg1 lyricsForContentItem:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000010dd2f
- (void)_reloadTimedMetadataRequest;	// IMP=0x000000000010d92d
- (void)metadataOutput:(id)arg1 didOutputTimedMetadataGroups:(id)arg2 fromPlayerItemTrack:(id)arg3;	// IMP=0x000000000010d745
- (_Bool)resourceLoader:(id)arg1 shouldWaitForRenewalOfRequestedResource:(id)arg2;	// IMP=0x000000000010d733
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;	// IMP=0x000000000010d2e4
- (id)rtcReportingServiceIdentifier;	// IMP=0x000000000010d28c
@property(readonly, nonatomic) NSData *trackInfoData;
- (id)mpcReporting_trackInfo;	// IMP=0x000000000010d0f4
- (id)mpcReporting_siriInitiated;	// IMP=0x000000000010d0e2
- (_Bool)mpcReporting_shouldReportPlayEventsToStore;	// IMP=0x000000000010d0d0
- (_Bool)mpcReporting_shouldUseRelativeTimePositions;	// IMP=0x000000000010d0be
- (id)mpcReporting_requestingBundleVersion;	// IMP=0x000000000010d0a1
- (id)mpcReporting_requestingBundleIdentifier;	// IMP=0x000000000010d084
- (id)mpcReporting_jingleTimedMetadata;	// IMP=0x000000000010d072
- (id)mpcReporting_identityPropertiesLoader;	// IMP=0x000000000010d016
- (unsigned long long)mpcReporting_itemType;	// IMP=0x000000000010cfcd
- (long long)mpcReporting_equivalencySourceAdamID;	// IMP=0x000000000010cfbb
- (CDUnknownBlockType)artworkCatalogBlock;	// IMP=0x000000000010ce84
- (long long)_keyServerAdamID;	// IMP=0x000000000010cc60
- (void)_didBecomeActivePlayerItem;	// IMP=0x000000000010caa4
- (void)_didResignActivePlayerItem;	// IMP=0x000000000010c851
- (void)_willResignActivePlayerItem;	// IMP=0x000000000010c72a
- (void)_willBecomeActivePlayerItem;	// IMP=0x000000000010c6b0
- (long long)_persistedLikedState;	// IMP=0x000000000010c5bb
- (void)_handleUpdatedLikedState:(long long)arg1 forUserIdentity:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000010c48e
- (void)_currentPlaybackRateDidChange:(float)arg1;	// IMP=0x000000000010c44d
- (_Bool)usesSubscriptionLease;	// IMP=0x000000000010c374
- (id)storeFrontIdentifier;	// IMP=0x000000000010c319
- (id)storeAccountID;	// IMP=0x000000000010c27d
- (_Bool)shouldPreventPlayback;	// IMP=0x000000000010c268
- (void)resolvePlaybackError:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000000010b850
- (_Bool)requiresLoadedAssetForAirPlayProperties;	// IMP=0x000000000010b848
- (id)bookmarkTime;	// IMP=0x000000000010b836
- (_Bool)allowsExternalPlayback;	// IMP=0x000000000010b82e
- (_Bool)allowsAirPlayFromCloud;	// IMP=0x000000000010b81e
- (_Bool)canUseLoadedAsset;	// IMP=0x000000000010b7b1
- (void)_updateAudioFormatInfoForContentItem:(id)arg1;	// IMP=0x000000000010b08b
- (float)userRating;	// IMP=0x000000000010aff3
- (_Bool)useEmbeddedChapterData;	// IMP=0x000000000010afeb
- (id)urlTimeMarkers;	// IMP=0x000000000010afe3
- (long long)type;	// IMP=0x000000000010af0a
- (void)setupWithPlaybackInfo;	// IMP=0x000000000010ac7a
- (id)playbackInfo;	// IMP=0x000000000010a6e7
- (id)containerUniqueID;	// IMP=0x000000000010a666
- (_Bool)hasTimeSyncedLyrics;	// IMP=0x000000000010a5ab
- (_Bool)hasStoreLyrics;	// IMP=0x000000000010a4f0
- (id)libraryLyrics;	// IMP=0x000000000010a429
- (_Bool)supportsLikedState;	// IMP=0x000000000010a421
- (long long)lyricsAdamID;	// IMP=0x000000000010a2dd
- (long long)reportingAdamID;	// IMP=0x000000000010a1e2
- (long long)storeSubscriptionAdamID;	// IMP=0x000000000010a0e7
- (long long)storeItemInt64ID;	// IMP=0x0000000000109f80
- (long long)stationProviderID;	// IMP=0x0000000000109f14
- (id)stationStringID;	// IMP=0x0000000000109e73
- (id)stationName;	// IMP=0x0000000000109d39
- (id)stationHash;	// IMP=0x0000000000109c98
- (long long)stationID;	// IMP=0x0000000000109c03
@property(readonly, nonatomic) _Bool shouldReportPlayEventsToStore;
- (void)setRating:(float)arg1;	// IMP=0x0000000000109999
- (void)_prepareLeaseWithShouldRequireLeaseAcquisition:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000109901
- (void)prepareForRate:(float)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000001095d8
- (_Bool)prefersSeekOverSkip;	// IMP=0x00000000001094ba
- (_Bool)shouldShowComposer;	// IMP=0x0000000000109429
- (id)playbackError;	// IMP=0x000000000010902b
- (void)notePlaybackFinishedByHittingEnd;	// IMP=0x0000000000108fdc
- (long long)storePurchasedAdamID;	// IMP=0x0000000000108f3d
- (unsigned long long)composerPersistentID;	// IMP=0x0000000000108e34
- (unsigned long long)genrePersistentID;	// IMP=0x0000000000108d2b
- (unsigned long long)artistPersistentID;	// IMP=0x0000000000108c05
- (unsigned long long)albumArtistPersistentID;	// IMP=0x0000000000108adc
- (unsigned long long)albumPersistentID;	// IMP=0x00000000001089b6
- (id)cloudAlbumID;	// IMP=0x000000000010889e
- (id)cloudUniversalLibraryID;	// IMP=0x00000000001087f3
- (id)personID;	// IMP=0x0000000000108748
- (unsigned long long)cloudID;	// IMP=0x00000000001086a9
- (id)databaseID;	// IMP=0x00000000001085fe
- (unsigned long long)persistentID;	// IMP=0x000000000010855f
- (unsigned long long)mediaType;	// IMP=0x00000000001084a0
- (id)modelGenericObject;	// IMP=0x000000000010845c
- (_Bool)mediaItemNeedsLoading;	// IMP=0x000000000010844c
- (id)mediaItem;	// IMP=0x0000000000108383
- (id)mainTitle;	// IMP=0x00000000001082c5
- (void)updatePlayerItemMetadata;	// IMP=0x00000000001082bf
- (void)_emitNetworkOperationWithPerformanceMetrics:(id)arg1 operationType:(long long)arg2 reason:(id)arg3 blocksPlayback:(_Bool)arg4;	// IMP=0x0000000000108078
- (void)_emitAudioAssetTypeSelection:(id)arg1 assetLoadInfo:(id)arg2;	// IMP=0x0000000000107dd8
- (void)_emitAudioFormatChangeEvent;	// IMP=0x0000000000107a1f
- (void)_updateActiveFormatJustification:(long long)arg1;	// IMP=0x000000000010794b
- (void)configureAVPlayerItemWithAudioFormat:(id)arg1 forceSpatial:(_Bool)arg2;	// IMP=0x00000000001078b3
- (_Bool)updateActiveFormat:(id)arg1 justification:(long long)arg2;	// IMP=0x0000000000107618
- (_Bool)updatePreferredFormat:(id)arg1;	// IMP=0x0000000000107466
- (_Bool)updateAudioFormatsDictionary:(id)arg1;	// IMP=0x0000000000107305
- (id)audioFormatForStableVariantID:(id)arg1;	// IMP=0x000000000010728b
- (id)currentPlayerAudioFormat;	// IMP=0x0000000000107200
- (_Bool)_linkAssetIfNeededAtURL:(id)arg1 toDestinationURL:(id)arg2 shareCacheURL:(id)arg3;	// IMP=0x0000000000106cad
- (void)_checkDownloadErrorAndValidityOfDownloadedHLSAsset:(id)arg1 downloadLocationURL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000010697f
- (void)_downloadHLSAsset:(id)arg1 destinationURL:(id)arg2 sharedCacheURL:(id)arg3 assetLoadProperties:(id)arg4 loadResult:(id)arg5 storeRequestContext:(id)arg6 urlBag:(id)arg7 fileUpgradeRecommendation:(long long)arg8;	// IMP=0x0000000000106351
- (id)_createOrUpdateDatabaseEntry:(id)arg1 loadResult:(id)arg2 urlBag:(id)arg3 destinationURL:(id)arg4 purgeable:(_Bool)arg5;	// IMP=0x0000000000105f23
- (id)_hlsDownloadOptionsDictionary:(id)arg1;	// IMP=0x0000000000105bf0
- (void)_getHLSServerDataForLoadResults:(id)arg1 bag:(id)arg2 keyCertificateURL:(id *)arg3 keyServerURL:(id *)arg4 keyServerAdamID:(id *)arg5 keyServerProtocolType:(long long *)arg6;	// IMP=0x000000000010585a
- (void)_downloadHLSAssetWhilePlaying:(id)arg1 assetLoadProperties:(id)arg2 assetLoadResult:(id)arg3 destinationURL:(id)arg4 sharedCacheURL:(id)arg5 storeRequestContext:(id)arg6 urlBag:(id)arg7 fileUpgradeRecommendation:(long long)arg8;	// IMP=0x000000000010558f
- (void)_prepareAssetForHLSPlayback:(id)arg1 loadResult:(id)arg2 destinationURL:(id)arg3 storeRequestContext:(id)arg4 urlBag:(id)arg5 identityProperties:(id)arg6;	// IMP=0x000000000010493f
- (_Bool)_isAssetLoadResultValidForPlayback:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001046ab
- (id)_decorateAssetLoadResult:(id)arg1 withURLBag:(id)arg2;	// IMP=0x00000000001041cc
- (void)loadAssetAndPlayerItem;	// IMP=0x00000000000fc813
- (float)_volumeAdjustment;	// IMP=0x00000000000fc774
- (id)_loudnessInfoMediaKind;	// IMP=0x00000000000fc698
@property(readonly, nonatomic) MPGaplessInfo *gaplessInfo;
- (id)_iTunesStorePurchasedMediaKind;	// IMP=0x00000000000fc507
- (long long)_suzeLeaseMediaType;	// IMP=0x00000000000fc44f
- (id)_assetLoadPropertiesWithUserIdentityProperties:(id)arg1 delegatedUserIdentityProperties:(id)arg2 subscriptionPlaybackInfo:(id)arg3;	// IMP=0x00000000000fbc3d
- (_Bool)_shouldPreloadSubscriptionStatus;	// IMP=0x00000000000fbb8c
@property(readonly, nonatomic) _Bool hasVideo;
- (_Bool)_prefersHighQualityContent;	// IMP=0x00000000000fb8f1
- (id)_delegatedUserIdentityProperties:(id *)arg1;	// IMP=0x00000000000fb71a
- (_Bool)isValidPlayerSubstituteForItem:(id)arg1;	// IMP=0x00000000000fb623
- (_Bool)isStreamable;	// IMP=0x00000000000fb61b
- (_Bool)isRadioItem;	// IMP=0x00000000000fb609
- (_Bool)isLikedStateEnabled;	// IMP=0x00000000000fb601
- (id)explicitBadge;	// IMP=0x00000000000fb4ea
- (_Bool)isExplicitTrack;	// IMP=0x00000000000fb3fd
- (_Bool)isAssetURLValid;	// IMP=0x00000000000fb3f5
- (_Bool)isAlwaysLive;	// IMP=0x00000000000fb258
- (id)genre;	// IMP=0x00000000000fb191
- (id)externalContentIdentifier;	// IMP=0x00000000000fb0c7
- (double)durationFromExternalMetadata;	// IMP=0x00000000000fb00e
- (id)copyrightText;	// IMP=0x00000000000faf71
- (id)chapterTimeMarkers;	// IMP=0x00000000000faf69
- (id)composer;	// IMP=0x00000000000faea2
- (id)artworkTimeMarkers;	// IMP=0x00000000000fae9a
- (_Bool)isArtistUploadedContent;	// IMP=0x00000000000fae09
- (id)artist;	// IMP=0x00000000000fad03
- (void)applyVolumeNormalizationWithSoundCheckEnabled:(_Bool)arg1;	// IMP=0x00000000000fabe7
- (_Bool)allowsEQ;	// IMP=0x00000000000fabdf
- (unsigned long long)albumTrackCount;	// IMP=0x00000000000fab47
- (unsigned long long)albumTrackNumber;	// IMP=0x00000000000faaaf
- (long long)artistStoreID;	// IMP=0x00000000000fa912
- (long long)albumStoreID;	// IMP=0x00000000000fa775
- (long long)storeAlbumArtistID;	// IMP=0x00000000000fa64c
- (id)albumArtist;	// IMP=0x00000000000fa504
- (long long)albumYear;	// IMP=0x00000000000fa449
- (id)album;	// IMP=0x00000000000fa382
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x00000000000f9da5
- (id)initWithGenericObject:(id)arg1 itemProperties:(id)arg2 playbackRequestEnvironment:(id)arg3 identityPropertySet:(id)arg4;	// IMP=0x00000000000f9aaf

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

