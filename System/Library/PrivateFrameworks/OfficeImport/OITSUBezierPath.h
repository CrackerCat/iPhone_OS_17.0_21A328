//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface OITSUBezierPath : NSObject
{
    long long sfr_elementCount;	// 8 = 0x8
    long long sfr_elementMax;	// 16 = 0x10
    struct PATHSEGMENT *sfr_head;	// 24 = 0x18
    double *sfr_elementLength;	// 32 = 0x20
    double sfr_totalLength;	// 40 = 0x28
    long long sfr_lastSubpathIndex;	// 48 = 0x30
    void *sfr_extraSegments;	// 56 = 0x38
    double sfr_lineWidth;	// 64 = 0x40
    struct CGRect sfr_controlPointBounds;	// 72 = 0x48
    double sfr_miterLimit;	// 104 = 0x68
    double sfr_flatness;	// 112 = 0x70
    double *sfr_dashedLinePattern;	// 120 = 0x78
    unsigned long long sfr_dashedLineCount;	// 128 = 0x80
    double sfr_dashedLinePhase;	// 136 = 0x88
    void *sfr_path;	// 144 = 0x90
    long long sfr_extraSegmentCount;	// 152 = 0x98
    long long sfr_extraSegmentMax;	// 160 = 0xa0
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;	// 168 = 0xa8
}

+ (double)defaultLineWidth;	// IMP=0x0010000000274061
+ (void)setDefaultLineWidth:(double)arg1;	// IMP=0x0010000000274053
+ (unsigned long long)defaultLineJoinStyle;	// IMP=0x0010000000274046
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000274039
+ (unsigned long long)defaultLineCapStyle;	// IMP=0x001000000027402c
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;	// IMP=0x001000000027401f
+ (unsigned long long)defaultWindingRule;	// IMP=0x0010000000274012
+ (void)setDefaultWindingRule:(unsigned long long)arg1;	// IMP=0x0010000000274005
+ (double)defaultFlatness;	// IMP=0x0010000000273ff7
+ (void)setDefaultFlatness:(double)arg1;	// IMP=0x0010000000273fe9
+ (double)defaultMiterLimit;	// IMP=0x0010000000273fdb
+ (void)setDefaultMiterLimit:(double)arg1;	// IMP=0x0010000000273fcd
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x0010000000273f32
+ (void)clipRect:(struct CGRect)arg1;	// IMP=0x0010000000273f0c
+ (void)strokeRect:(struct CGRect)arg1;	// IMP=0x0010000000273d52
+ (void)fillRect:(struct CGRect)arg1;	// IMP=0x0010000000273d2c
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;	// IMP=0x0010000000273b62
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x0010000000273b10
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0010000000273ac7
+ (id)bezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0010000000273a7e
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;	// IMP=0x0010000000273a11
+ (id)bezierPath;	// IMP=0x00100000002739ff
+ (void)initialize;	// IMP=0x00100000002739bf
+ (double)lineWidth;	// IMP=0x0010000000279a62
+ (void)setLineWidth:(double)arg1;	// IMP=0x0010000000279a50
+ (unsigned long long)lineJoinStyle;	// IMP=0x0010000000279a3e
+ (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000279a2c
+ (unsigned long long)lineCapStyle;	// IMP=0x0010000000279a1a
+ (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x0010000000279a08
+ (unsigned long long)windingRule;	// IMP=0x00100000002799f6
+ (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x00100000002799e4
+ (double)flatness;	// IMP=0x00100000002799d2
+ (void)setFlatness:(double)arg1;	// IMP=0x00100000002799c0
+ (double)miterLimit;	// IMP=0x00100000002799ae
+ (void)setMiterLimit:(double)arg1;	// IMP=0x001000000027999c
- (id)initWithCString:(const char *)arg1;	// IMP=0x0000000000278fd0
- (const char *)cString;	// IMP=0x0000000000278cb4
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000278472
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000277de4
- (_Bool)containsPoint:(struct CGPoint)arg1;	// IMP=0x0000000000277d60
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;	// IMP=0x0000000000277941
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;	// IMP=0x000000000027792a
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x0000000000277644
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;	// IMP=0x0000000000277523
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0000000000277348
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;	// IMP=0x0000000000277299
- (void)appendBezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0000000000277188
- (void)appendBezierPath:(id)arg1;	// IMP=0x0000000000277174
- (void)appendBezierPath:(id)arg1 skippingInitialMoveIfPossible:(_Bool)arg2;	// IMP=0x0000000000276f94
- (void)_appendToPath:(id)arg1 skippingInitialMoveIfPossible:(_Bool)arg2;	// IMP=0x0000000000276e3b
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;	// IMP=0x0000000000276d67
- (long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000276c8f
- (long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000276bd3
- (long long)elementAtIndex:(long long)arg1;	// IMP=0x0000000000276bbf
- (long long)elementCount;	// IMP=0x0000000000276bb5
- (double)lengthToElement:(long long)arg1;	// IMP=0x0000000000276b05
- (double)lengthOfElement:(long long)arg1;	// IMP=0x0000000000276ad1
- (double)length;	// IMP=0x0000000000276aa3
- (void)calculateLengths;	// IMP=0x0000000000276a04
- (double)calculateLengthOfElement:(long long)arg1;	// IMP=0x0000000000276958
- (_Bool)isClockwise;	// IMP=0x000000000027673e
- (_Bool)isFlat;	// IMP=0x000000000027672d
- (struct CGRect)bounds;	// IMP=0x00000000002766a7
- (struct CGRect)controlPointBounds;	// IMP=0x0000000000276578
- (struct CGPoint)currentPoint;	// IMP=0x0000000000276518
- (_Bool)isEmpty;	// IMP=0x000000000027650a
- (_Bool)isCircular;	// IMP=0x000000000027632c
- (_Bool)isRectangular;	// IMP=0x0000000000275f9a
- (_Bool)isDiamond;	// IMP=0x0000000000275d4b
- (_Bool)isTriangular;	// IMP=0x0000000000275bee
- (struct CGPath *)CGPath;	// IMP=0x0000000000275bb0
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x0000000000275a60
- (id)p_bezierPathByRemovingRedundantElementAndSubregionsSmallerThanThreshold:(double)arg1;	// IMP=0x0000000000275577
- (id)bezierPathByRemovingRedundantElements;	// IMP=0x0000000000275562
- (id)bezierPathByRemovingSmallSubpathsForInteriorWrapsForInset:(double)arg1;	// IMP=0x000000000027554c
- (id)bezierPathByReversingPath;	// IMP=0x0000000000275377
- (id)_copyFlattenedPath;	// IMP=0x0000000000275342
- (id)bezierPathByFlatteningPathWithFlatness:(double)arg1;	// IMP=0x00000000002752ce
- (id)bezierPathByFlatteningPath;	// IMP=0x00000000002752b4
- (void)flattenIntoPath:(id)arg1 flatness:(double)arg2;	// IMP=0x000000000027517e
- (void)flattenIntoPath:(id)arg1;	// IMP=0x0000000000275164
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;	// IMP=0x0000000000274f88
- (void)addClip;	// IMP=0x0000000000274e58
- (void)fill;	// IMP=0x0000000000274d28
- (void)stroke;	// IMP=0x0000000000274bac
- (void)_doPath;	// IMP=0x00000000002749f9
- (struct CGPoint)_checkPointForValidity:(struct CGPoint)arg1;	// IMP=0x0000000000274995
- (_Bool)_isValid:(double)arg1;	// IMP=0x0000000000274963
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;	// IMP=0x000000000027490e
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;	// IMP=0x0000000000274834
- (void)setFlatness:(double)arg1;	// IMP=0x0000000000274829
- (double)flatness;	// IMP=0x000000000027481e
- (void)setMiterLimit:(double)arg1;	// IMP=0x0000000000274813
- (double)miterLimit;	// IMP=0x0000000000274808
- (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x00000000002747eb
- (unsigned long long)windingRule;	// IMP=0x00000000002747d9
- (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x00000000002747bc
- (unsigned long long)lineJoinStyle;	// IMP=0x00000000002747aa
- (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x000000000027478b
- (unsigned long long)lineCapStyle;	// IMP=0x0000000000274779
- (void)setLineWidth:(double)arg1;	// IMP=0x000000000027476e
- (double)lineWidth;	// IMP=0x0000000000274763
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x00000000002746e1
- (void)relativeLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000274697
- (void)relativeMoveToPoint:(struct CGPoint)arg1;	// IMP=0x000000000027464d
- (void)removeAllPoints;	// IMP=0x00000000002745ec
- (void)closePath;	// IMP=0x00000000002745da
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000274541
- (void)lineToPoint:(struct CGPoint)arg1;	// IMP=0x00000000002744d3
- (void)moveToPoint:(struct CGPoint)arg1;	// IMP=0x00000000002744c1
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000027446f
- (void)copyPathAttributesTo:(id)arg1;	// IMP=0x0000000000274378
- (unsigned long long)hash;	// IMP=0x0000000000274366
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000002741c9
- (void)dealloc;	// IMP=0x0000000000274139
- (id)init;	// IMP=0x000000000027406f
- (void)_deviceClosePath;	// IMP=0x000000000027985c
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x00000000002796fb
- (void)_deviceLineToPoint:(struct CGPoint)arg1;	// IMP=0x00000000002796c3
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000279636
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;	// IMP=0x00000000002794a4
- (id)description;	// IMP=0x0000000000279a74
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startRadialVector:(struct CGPoint)arg2 endRadialVector:(struct CGPoint)arg3 angleSign:(int)arg4 startNewPath:(_Bool)arg5;	// IMP=0x000000000028f4d8
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startAngle:(double)arg2 swingAngle:(double)arg3 angleType:(int)arg4 startNewPath:(_Bool)arg5;	// IMP=0x000000000028f030
- (void)attachBezierPath:(id)arg1;	// IMP=0x00000000003691d0

@end

