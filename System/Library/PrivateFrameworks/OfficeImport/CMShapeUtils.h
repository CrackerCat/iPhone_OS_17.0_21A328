//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface CMShapeUtils : NSObject
{
}

+ (int)radToFixedPointDeg:(double)arg1;	// IMP=0x00800000004659b3
+ (double)fixedPointDegToRad:(int)arg1;	// IMP=0x00800000004659a1
+ (float)fontSizeForText:(id)arg1 insideRectangle:(struct CGSize)arg2;	// IMP=0x00800000001e9394
+ (float)intersectionAngleNextToAngle:(float)arg1 isAfter:(_Bool)arg2 nodeSize:(struct CGSize)arg3;	// IMP=0x008000000022ac6c
+ (double)getFormulaResultFromCustomGeometry:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0080000000162ec0
+ (double)mapFormulaOfType:(int)arg1 argValues:(double *)arg2 isEscher:(_Bool)arg3;	// IMP=0x0080000000163348
+ (double)mapAdjustCoord:(struct OADAdjustCoord)arg1 geometry:(id)arg2;	// IMP=0x008000000015797f
+ (id)transformedBoundsWithBounds:(id)arg1 transform:(id)arg2;	// IMP=0x00800000002240af
+ (id)relatvieBoundsWithAbsoluteInnerBounds:(id)arg1 parentBounds:(id)arg2;	// IMP=0x00800000001e7c49
+ (id)internalBoundsWithBounds:(id)arg1 scaleBounds:(struct CGRect)arg2;	// IMP=0x00800000001e9426
+ (id)inscribedBoundsWithBounds:(id)arg1 logicalBounds:(struct CGRect)arg2;	// IMP=0x00800000001e793d
+ (id)absoluteOrientedBoundsWithRelativeOrientedBounds:(id)arg1 parentOrientedBounds:(id)arg2 parentLogicalBounds:(struct CGRect)arg3;	// IMP=0x00800000004656aa
+ (id)transformFromBounds:(struct CGRect)arg1 toOrientedBounds:(id)arg2;	// IMP=0x008000000010cdcf
+ (struct CGRect)transformRect:(struct CGRect)arg1 scale:(float)arg2 offsetX:(float)arg3 offsetY:(float)arg4;	// IMP=0x0080000000215359
+ (float)scaleFactorFromLength:(float)arg1 toLength:(float)arg2;	// IMP=0x008000000010d1bc
+ (void)setCoordSpaceForCustomeGeometry:(id)arg1 fromSize:(struct CGSize)arg2;	// IMP=0x00800000001dbf9e
+ (_Bool)isShapeALine:(id)arg1;	// IMP=0x0080000000158095
+ (int)mapFormulaKeywordValue:(int)arg1 geometry:(id)arg2;	// IMP=0x00800000001631cd
+ (float)normalizedAngle:(float)arg1;	// IMP=0x008000000022b045
+ (int)radToMilliMinutes:(double)arg1;	// IMP=0x0080000000465a0b
+ (double)milliMinutesToRad:(int)arg1;	// IMP=0x00800000001dbff9
+ (int)radToNativeAngle:(double)arg1 isEscher:(_Bool)arg2;	// IMP=0x00800000004659e7
+ (double)nativeAngleToRad:(int)arg1 isEscher:(_Bool)arg2;	// IMP=0x00800000001dbfd5

@end

