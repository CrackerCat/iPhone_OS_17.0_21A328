//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSString.h>

@interface NSString (TSUDateFormatStringUtilities)
+ (id)tsu_numberSymbols;	// IMP=0x008000000025ed61
+ (id)tsu_stringByHexEncodingData:(id)arg1;	// IMP=0x0080000000269ba6
+ (id)tsu_stringWithXMLString:(const char *)arg1;	// IMP=0x00800000002697ae
+ (id)tsu_stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2 breakLines:(_Bool)arg3;	// IMP=0x00800000002693ca
+ (id)tsu_stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x00800000002693ae
+ (id)tsu_stringWithHexFromBytes:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x0080000000269316
+ (id)tsu_stringByIndentingString:(id)arg1;	// IMP=0x0080000000266c58
+ (id)tsu_stringByIndentingString:(id)arg1 times:(unsigned long long)arg2;	// IMP=0x0080000000266b1e
+ (id)tsu_stringWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x0080000000266ac2
+ (id)tsu_stringWithUUID;	// IMP=0x0080000000266a89
+ (id)tsu_localizedDisplayNameWithPersonNameComponents:(id)arg1;	// IMP=0x008000000026ab3f
+ (id)tsu_fogFilenameFromShareToken:(id)arg1;	// IMP=0x008000000026b4f8
+ (id)tsu_fogShareTokenFromFileURL:(id)arg1;	// IMP=0x008000000026b3b3
+ (id)tsu_customNumberFormatDecimalFormatStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2 includeDecimalSeparator:(_Bool)arg3;	// IMP=0x0080000000287ac4
+ (id)tsu_customNumberFormatDecimalTokenRepresentedStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;	// IMP=0x0080000000287a47
+ (id)tsu_customNumberFormatDecimalTokenDisplayStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;	// IMP=0x00800000002879b5
+ (id)tsu_customNumberFormatIntegerFormatStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;	// IMP=0x0080000000287890
+ (id)tsu_customNumberFormatIntegerTokenRepresentedStringWithDigits:(unsigned long long)arg1 separator:(_Bool)arg2 digitString:(id)arg3;	// IMP=0x00800000002877f7
+ (id)tsu_customNumberFormatIntegerTokenDisplayStringWithDigits:(unsigned long long)arg1 separator:(_Bool)arg2 digitString:(id)arg3 locale:(id)arg4;	// IMP=0x0080000000287678
+ (id)tsu_customNumberFormatTokenStringOfType:(int)arg1 content:(id)arg2;	// IMP=0x00800000002871ea
+ (id)tc_stringByFixingUnpairedSurrogateCharactersInString:(id)arg1;	// IMP=0x00800000002dc8fa
+ (_Bool)tc_fixUnpairedSurrogateCharactersInBuffer:(void *)arg1;	// IMP=0x00800000002dc88c
+ (id)tc_stringWithXmlString:(const char *)arg1;	// IMP=0x00800000002dcfa6
+ (id)stringWithOcText:(const struct OcText *)arg1;	// IMP=0x00800000000b24ce
+ (id)stringWithCsString:(const struct CsString *)arg1;	// IMP=0x0080000000018297
+ (_Bool)tc_skipString:(id)arg1;	// IMP=0x0080000000373544
+ (id)tc_mapString:(id)arg1;	// IMP=0x00800000003733b6
- (id)tsu_stringByReplacing2DigitYearStringWith4DigitYearString;	// IMP=0x001000000024b752
- (id)tsu_stringByReplacing4DigitYearStringWith2DigitYearString;	// IMP=0x001000000024b6e4
- (id)tsu_prefixOfNumberFormatSubpattern;	// IMP=0x001000000025f719
- (unsigned long long)tsu_indexOfFirstNonPrefixCharacterInNumberFormatSubpattern;	// IMP=0x001000000025f579
- (id)tsu_suffixOfNumberFormatSubpattern;	// IMP=0x001000000025f547
- (unsigned long long)tsu_indexOfLastNonSuffixCharacterInNumberFormatSubpattern;	// IMP=0x001000000025f3e2
- (id)tsu_numberPortionOfNumberFormatSubpattern;	// IMP=0x001000000025f391
- (id)tsu_negativeSubpatternOfNumberFormatPattern;	// IMP=0x001000000025f337
- (id)tsu_positiveSubpatternOfNumberFormatPattern;	// IMP=0x001000000025f2de
- (unsigned long long)tsu_indexOfNumberFormatSubpatternSeparator;	// IMP=0x001000000025f106
- (id)tsu_stringByRemovingEscapedCharactersFromNumberFormatPattern;	// IMP=0x001000000025efbf
- (id)tsu_newRangesOfEscapedCharactersInNumberFormatPattern;	// IMP=0x001000000025ee5e
- (_Bool)tsu_isNumberFormatPattern;	// IMP=0x001000000025edcd
- (id)tsu_stringWithNormalizedQuotationMarks;	// IMP=0x001000000026a49c
- (id)tsu_stringWithNormalizedHyphens;	// IMP=0x001000000026a414
- (id)tsu_stringWithNormalizedHyphensAndQuotationMarks;	// IMP=0x001000000026a3c4
- (_Bool)tsu_isEqualToString:(id)arg1;	// IMP=0x001000000026a3a9
- (id)tsu_middleTruncateToLength:(unsigned long long)arg1;	// IMP=0x001000000026a2ff
- (id)tsu_stringWithoutAttachmentCharacters;	// IMP=0x001000000026a265
- (id)tsu_setOfContainedWordsIncludingPunctuationAndSymbols:(_Bool)arg1;	// IMP=0x0010000000269ef2
- (_Bool)tsu_containsSubstring:(id)arg1;	// IMP=0x0010000000269ecf
- (void)tsu_enumerateRangesOfCharactersInSet:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000269d8a
- (struct _NSRange)tsu_range;	// IMP=0x0010000000269d72
- (struct _NSRange)tsu_rangeOfString:(id)arg1 options:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;	// IMP=0x0010000000269c80
- (id)tsu_tolerantStringByAppendingPathExtension:(id)arg1;	// IMP=0x00100000002699f9
- (_Bool)tsu_containsOnlyCharactersFromSet:(id)arg1;	// IMP=0x0010000000269996
- (id)tsu_unescapeXML;	// IMP=0x00100000002698b1
- (id)tsu_escapeXML;	// IMP=0x00100000002697cc
- (id)tsu_stringByMakingFirstCharacterUppercase;	// IMP=0x001000000026970b
- (id)tsu_stringByMakingFirstCharacterLowercase;	// IMP=0x0010000000269613
- (id)tsu_encodeStringBase64;	// IMP=0x00100000002695bf
- (id)tsu_stringByTrimmingCharactersInSetFromFront:(id)arg1;	// IMP=0x0010000000269283
- (id)tsu_stringWithPathRelativeTo:(id)arg1 allowBacktracking:(_Bool)arg2;	// IMP=0x0010000000268fef
- (id)tsu_stringWithPathRelativeTo:(id)arg1;	// IMP=0x0010000000268dc2
- (id)tsu_substringWithComposedCharacterSequencesToFileSystemLength:(unsigned long long)arg1;	// IMP=0x0010000000268cb8
- (id)tsu_substringWithComposedCharacterSequencesTruncatedToLength:(unsigned long long)arg1;	// IMP=0x0010000000268c4a
- (id)tsu_stringWithRealpath;	// IMP=0x0010000000268bde
- (_Bool)tsu_isChildOfPath:(id)arg1;	// IMP=0x0010000000268949
- (_Bool)tsu_isDescendantOfPath:(id)arg1;	// IMP=0x00100000002687af
- (id)tsu_escapeForIcuRegex;	// IMP=0x0010000000268470
- (unsigned long long)tsu_countInstancesOfString:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x001000000026839a
- (id)tsu_stringByReplacingInstancesOfCharactersInSet:(id)arg1 withString:(id)arg2;	// IMP=0x0010000000268146
- (id)tsu_stringByRemovingCharactersInSet:(id)arg1;	// IMP=0x0010000000268132
- (id)tsu_stringByRemovingCharactersInSet:(id)arg1 options:(unsigned int)arg2;	// IMP=0x0010000000267ef7
- (id)tsu_stringByFixingBrokenSurrogatePairs;	// IMP=0x0010000000267be5
- (id)tsu_stringByUniquingPathInsideDirectory:(id)arg1 withFormat:(id)arg2;	// IMP=0x001000000026790a
- (id)tsu_stringByUniquingPathInsideDirectory:(id)arg1;	// IMP=0x00100000002678f1
- (id)tsu_stringByAddingCSVEscapesForLocale:(id)arg1;	// IMP=0x0010000000267689
- (id)tsu_stringByAppendingSeparator:(id)arg1 format:(id)arg2;	// IMP=0x0010000000267550
- (id)tsu_stringQuotedIfContainsCharacterSet:(id)arg1;	// IMP=0x0010000000267474
- (id)tsu_stringByExpandingTableFormatting;	// IMP=0x0010000000266c6f
- (_Bool)tsu_isLegalEmailAddress;	// IMP=0x001000000026a7e2
- (id)tsu_uncommentedAddressRespectingGroups;	// IMP=0x001000000026a75f
- (id)tsu_uncommentedAddress;	// IMP=0x001000000026a524
- (_Bool)tsu_isCJKString;	// IMP=0x001000000026a93e
- (id)tsu_sha256HexHashString;	// IMP=0x001000000026acfe
- (long long)tsu_compareToVersionString:(id)arg1;	// IMP=0x001000000026ae05
- (unsigned long long)tsu_numberOfKeysInKeyPath;	// IMP=0x001000000026b339
- (id)tsu_lastKey;	// IMP=0x001000000026b2c5
- (id)tsu_firstKey;	// IMP=0x001000000026b254
- (id)tsu_keyPathByAppendingKey:(id)arg1;	// IMP=0x001000000026b19c
- (id)tsu_keyPathByPrependingKey:(id)arg1;	// IMP=0x001000000026b0e4
- (id)tsu_keyPathByRemovingFirstKey;	// IMP=0x001000000026b07e
- (id)tsu_keyPathByRemovingLastKey;	// IMP=0x001000000026b01b
- (id)tsu_initUnRedactedWithFormat:(id)arg1;	// IMP=0x001000000026ba4e
- (id)tsu_initRedactedWithFormat:(id)arg1;	// IMP=0x001000000026b98f
- (id)tsu_initUnRedactedWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x001000000026b8b4
- (id)tsu_initRedactedWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x001000000026b62a
- (unsigned short)tsu_spaceCharacterInCustomNumberFormatSpaceToken;	// IMP=0x0010000000287c63
- (unsigned short)tsu_scaleCharacterInCustomNumberFormatScaleToken;	// IMP=0x0010000000287c4c
- (id)tsu_formatStringFromCustomNumberFormatScaleToken;	// IMP=0x0010000000287c35
- (int)tsu_fractionAccuracyFromCustomNumberFormatFractionToken;	// IMP=0x0010000000287c05
- (id)tsu_currencyCodeFromCustomNumberFormatCurrencyToken;	// IMP=0x0010000000287bb4
- (id)tsu_digitPlaceholderStringInDigitToken;	// IMP=0x0010000000287b44
- (unsigned long long)tsu_numberOfDigitsInCustomNumberFormatDecimalToken;	// IMP=0x00100000002878f1
- (id)tsu_stringByInsertingFormatGroupingSeparators:(id)arg1;	// IMP=0x00100000002874f3
- (_Bool)tsu_customFormatIntegerTokenUsesSeparator;	// IMP=0x0010000000287417
- (unsigned long long)tsu_numberOfDigitsInCustomNumberFormatIntegerToken;	// IMP=0x0010000000287309
- (_Bool)tsu_isSpecialCustomNumberFormatTokenOfType:(int)arg1;	// IMP=0x0010000000287290
- (_Bool)tsu_isSpecialCustomNumberFormatToken;	// IMP=0x001000000028724c
- (void)sfu_appendJsonStringToString:(id)arg1;	// IMP=0x001000000029cdf6
- (const char *)nulTerminatedUTF8;	// IMP=0x00100000002dc872
- (_Bool)tc_doesURLHostContainWhitespace;	// IMP=0x00100000002dc733
- (_Bool)tc_startsWithString:(id)arg1;	// IMP=0x00100000002dc712
- (id)tc_stringByRemovingInvalidXmlChars;	// IMP=0x00100000002dd5b3
- (_Bool)tc_isEqualToXmlString:(const char *)arg1;	// IMP=0x00100000002dd545
- (id)tc_componentsSeparatedByWhitespace;	// IMP=0x00100000002dd2f6
- (id)tc_initFromXmlNode:(struct _xmlNode *)arg1 nsWithFallbackNs:(id)arg2 attributeName:(const char *)arg3;	// IMP=0x00100000002dd1d8
- (id)tc_initFromXmlNode:(struct _xmlNode *)arg1 ns:(const char *)arg2 attributeName:(const char *)arg3;	// IMP=0x00100000002dd14e
- (id)tc_initWithContentOfXmlNode:(struct _xmlNode *)arg1;	// IMP=0x00100000002dd0b7
- (id)tc_initWithValueOfXmlAttribute:(struct _xmlAttr *)arg1;	// IMP=0x00100000002dcfef
- (const char *)tc_xmlString;	// IMP=0x00100000002dcfd5
- (id)tc_initWithXmlString:(const char *)arg1;	// IMP=0x00100000002dcf94
- (void)copyToOcText:(struct OcText *)arg1 encoding:(int)arg2;	// IMP=0x0010000000182285
- (void)copyToOcText:(struct OcText *)arg1;	// IMP=0x001000000018226e
- (void)copyToCsString:(struct CsString *)arg1;	// IMP=0x001000000034f28f
- (id)dataUsingWordEncoding:(int)arg1;	// IMP=0x001000000018237a
- (id)initWithOcText:(const struct OcText *)arg1;	// IMP=0x00100000000b2505
- (id)initWithCsString:(const struct CsString *)arg1;	// IMP=0x001000000001582a
- (unsigned short *)cWideString;	// IMP=0x0010000000373280
- (id)tc_escapedFragment;	// IMP=0x0010000000373aa4
- (id)tc_escapedPath;	// IMP=0x0010000000373a2a
- (int)tc_languageTypeAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;	// IMP=0x0010000000373857
- (id)tc_initialsFromAuthorName;	// IMP=0x0010000000373619
- (id)getDataUsingOfficeCryptographicEncoding;	// IMP=0x0010000000377b8a
- (int)tc_fontTypeAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 forXML:(_Bool)arg3;	// IMP=0x00100000004159b7
- (int)fontTypeForCharacter:(unsigned short)arg1 isControl:(_Bool *)arg2;	// IMP=0x0010000000415908
- (id)CM_stringByAddingCSSEscapes;	// IMP=0x0010000000463f81
- (id)copyCsvRows:(unsigned long long *)arg1;	// IMP=0x0010000000472ad2
- (id)_copyCsvRows:(unsigned long long *)arg1 usingDelimiter:(id)arg2 columnCountIsConstant:(_Bool *)arg3;	// IMP=0x001000000047247f
- (struct _NSRange)oi_rangeOfCharactersFromSet:(id)arg1 index:(int)arg2;	// IMP=0x00100000000f4acf
- (double)oi_sizeWithFontName:(id)arg1 size:(int)arg2 bold:(_Bool)arg3 italic:(_Bool)arg4;	// IMP=0x00100000000ae8ad
- (double)oi_sizeWithFontName:(id)arg1 size:(int)arg2;	// IMP=0x00100000000ae895
@end

