//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "UIView.h"

@class NSMutableDictionary, NSString, NSTimer, UIButton, UIImageView, UIViewPropertyAnimator;
@protocol UIStepperControl;

__attribute__((visibility("hidden")))
@interface UIStepperHorizontalVisualElement : UIView
{
    _Bool _isRtoL;	// 128 = 0x80
    UIImageView *_leftBackground;	// 136 = 0x88
    UIImageView *_rightBackground;	// 144 = 0x90
    UIImageView *_leftHighlight;	// 152 = 0x98
    UIImageView *_rightHighlight;	// 160 = 0xa0
    UIImageView *_middleView;	// 168 = 0xa8
    UIButton *_plusButton;	// 176 = 0xb0
    UIButton *_minusButton;	// 184 = 0xb8
    NSTimer *_repeatTimer;	// 192 = 0xc0
    long long _repeatCount;	// 200 = 0xc8
    NSMutableDictionary *_dividerImages;	// 208 = 0xd0
    UIViewPropertyAnimator *_leftAlphaAnimator;	// 216 = 0xd8
    UIViewPropertyAnimator *_rightAlphaAnimator;	// 224 = 0xe0
    UIViewPropertyAnimator *_leftFrameAnimator;	// 232 = 0xe8
    UIViewPropertyAnimator *_rightFrameAnimator;	// 240 = 0xf0
    _Bool _autorepeat;	// 248 = 0xf8
    _Bool _continuous;	// 249 = 0xf9
    _Bool _enabled;	// 250 = 0xfa
    _Bool _wraps;	// 251 = 0xfb
    double _value;	// 256 = 0x100
    double _maximumValue;	// 264 = 0x108
    double _minimumValue;	// 272 = 0x110
    id <UIStepperControl> _stepperControl;	// 280 = 0x118
    double _stepValue;	// 288 = 0x120
}

+ (id)_highlightOpacityAnimation;	// IMP=0x00100000014f3a7a
+ (id)_highlightSizeAnimation;	// IMP=0x00100000014f3a09
+ (struct UIEdgeInsets)initialAlignmentRectInsets;	// IMP=0x00100000014f3351
+ (struct CGSize)initialIntrinsicSize;	// IMP=0x00100000014f333f
+ (struct CGSize)initialSize;	// IMP=0x00100000014f331a
- (void).cxx_destruct;	// IMP=0x00000000014f6c60
@property(nonatomic) _Bool wraps; // @synthesize wraps=_wraps;
@property(nonatomic) double stepValue; // @synthesize stepValue=_stepValue;
@property(nonatomic) __weak id <UIStepperControl> stepperControl; // @synthesize stepperControl=_stepperControl;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic, getter=isContinuous) _Bool continuous; // @synthesize continuous=_continuous;
@property(nonatomic) _Bool autorepeat; // @synthesize autorepeat=_autorepeat;
@property(nonatomic) double minimumValue; // @synthesize minimumValue=_minimumValue;
@property(nonatomic) double maximumValue; // @synthesize maximumValue=_maximumValue;
@property(nonatomic) double value; // @synthesize value=_value;
- (void)setTintColor:(id)arg1;	// IMP=0x00000000014f6b35
- (id)decrementImageForState:(unsigned long long)arg1;	// IMP=0x00000000014f6b18
- (void)setDecrementImage:(id)arg1 forState:(unsigned long long)arg2;	// IMP=0x00000000014f69fd
- (id)incrementImageForState:(unsigned long long)arg1;	// IMP=0x00000000014f6983
- (void)setIncrementImage:(id)arg1 forState:(unsigned long long)arg2;	// IMP=0x00000000014f6868
- (id)dividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2;	// IMP=0x00000000014f6798
- (void)setDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3;	// IMP=0x00000000014f667f
- (id)backgroundImageForState:(unsigned long long)arg1;	// IMP=0x00000000014f6662
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;	// IMP=0x00000000014f6106
- (void)layoutSubviews;	// IMP=0x00000000014f5b23
- (void)pointerInteraction:(id)arg1 willExitRegion:(id)arg2 animator:(id)arg3;	// IMP=0x00000000014f5a28
- (void)pointerInteraction:(id)arg1 willEnterRegion:(id)arg2 animator:(id)arg3;	// IMP=0x00000000014f5932
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;	// IMP=0x00000000014f5723
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;	// IMP=0x00000000014f54b3
- (void)_updateCount:(id)arg1;	// IMP=0x00000000014f51f6
- (void)_stopTimer;	// IMP=0x00000000014f51be
- (void)_startTimer;	// IMP=0x00000000014f5146
- (struct UIEdgeInsets)alignmentRectInsetsForControl:(id)arg1;	// IMP=0x00000000014f510f
- (void)cancelTrackingWithEvent:(id)arg1;	// IMP=0x00000000014f509b
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000014f501a
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000014f4fb6
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;	// IMP=0x00000000014f4f17
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000014f4e9c
- (_Bool)pointMostlyInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000014f4d68
- (void)_updateDividerImageForButtonState;	// IMP=0x00000000014f4a30
- (void)_updateBackgroundForButtonState;	// IMP=0x00000000014f46d8
- (void)_updateButton:(id)arg1 backgroundView:(id)arg2 highlightView:(id)arg3 backgroundImage:(id)arg4 highlightImage:(id)arg5 onRight:(_Bool)arg6;	// IMP=0x00000000014f42f8
- (void)_updateHighlight:(id)arg1 button:(id)arg2 onRight:(_Bool)arg3;	// IMP=0x00000000014f3e43
- (id)_alphaAnimator:(_Bool)arg1;	// IMP=0x00000000014f3d80
- (struct CGRect)_rightHighlightInsetFrame;	// IMP=0x00000000014f3d22
- (struct CGRect)_rightHighlightFrame;	// IMP=0x00000000014f3c34
- (struct CGRect)_leftHighlightInsetFrame;	// IMP=0x00000000014f3bd6
- (struct CGRect)_leftHighlightFrame;	// IMP=0x00000000014f3b03
- (void)_dynamicUserInterfaceTraitDidChange;	// IMP=0x00000000014f39a0
- (void)_updateHighlightingAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000014f3868
- (void)_updateButtonEnabled;	// IMP=0x00000000014f3748
- (void)_commonStepperInit;	// IMP=0x00000000014f3495
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x00000000014f3467
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 forControl:(id)arg2;	// IMP=0x00000000014f3455
- (struct CGSize)intrinsicSizeWithinSize:(struct CGSize)arg1 forControl:(id)arg2;	// IMP=0x00000000014f3443
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;	// IMP=0x00000000014f3364
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000014f2ff0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

