//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSUUID, RTIDocumentState, RTIDocumentTraits, RTIInputSourceState, RTIInputSystemClient, TIKeyboardOutput, UIKeyboardTaskExecutionContext, UIKeyboardTaskSubqueue;
@protocol UIKBRTIPartnerDelegate;

__attribute__((visibility("hidden")))
@interface UIKBRTIPartner : NSObject
{
    RTIDocumentTraits *_remoteDocumentTraits;	// 8 = 0x8
    NSNumber *_cachedHasPreviousKeyResponder;	// 16 = 0x10
    NSNumber *_cachedHasNextKeyResponder;	// 24 = 0x18
    struct __CFStringTokenizer *_wkRectTokenizer;	// 32 = 0x20
    struct os_unfair_lock_s _lock;	// 40 = 0x28
    UIKeyboardTaskExecutionContext *_waitingRTIOutputOperationResponseContext;	// 48 = 0x30
    UIKeyboardTaskSubqueue *_keyboardTaskSubqueue;	// 56 = 0x38
    NSDictionary *_pendingDisableBecomeFirstResponderParameters;	// 64 = 0x40
    _Bool _dontTakeKeyboardSnapshot;	// 72 = 0x48
    _Bool _applicationDeactivationReasonAssistant;	// 73 = 0x49
    long long _id;	// 80 = 0x50
    _Bool _inputSystemClientEnabled;	// 88 = 0x58
    _Bool _isNotifyingDelegateOfRemoteOutputOperation;	// 89 = 0x59
    _Bool _applicationStateIsActiveForRTI;	// 90 = 0x5a
    _Bool _viewServiceStateIsActiveForRTI;	// 91 = 0x5b
    _Bool _isObservingGeometry;	// 92 = 0x5c
    _Bool _cacheHitTestsAsOpaque;	// 93 = 0x5d
    id <UIKBRTIPartnerDelegate> _partnerDelegate;	// 96 = 0x60
    RTIInputSystemClient *_rtiClient;	// 104 = 0x68
    RTIDocumentTraits *_rtiDocumentTraits;	// 112 = 0x70
    RTIDocumentState *_rtiDocumentState;	// 120 = 0x78
    RTIInputSourceState *_rtiInputSourceState;	// 128 = 0x80
    TIKeyboardOutput *_pendingOutputOperation;	// 136 = 0x88
    NSUUID *_currentSessionIdentifier;	// 144 = 0x90
    NSMutableDictionary *_rtiSessionMarkers;	// 152 = 0x98
    NSMutableDictionary *_supplementalLexicons;	// 160 = 0xa0
    NSMutableDictionary *_textSuggestions;	// 168 = 0xa8
    NSMutableArray *_queuedSupplementalLexiconOperations;	// 176 = 0xb0
}

+ (void)registerTextOperationCustomInfo;	// IMP=0x0010000000dd7088
- (void).cxx_destruct;	// IMP=0x0000000000def2d6
@property(retain, nonatomic) NSMutableArray *queuedSupplementalLexiconOperations; // @synthesize queuedSupplementalLexiconOperations=_queuedSupplementalLexiconOperations;
@property(retain, nonatomic) NSMutableDictionary *textSuggestions; // @synthesize textSuggestions=_textSuggestions;
@property(retain, nonatomic) NSMutableDictionary *supplementalLexicons; // @synthesize supplementalLexicons=_supplementalLexicons;
@property(retain, nonatomic) NSMutableDictionary *rtiSessionMarkers; // @synthesize rtiSessionMarkers=_rtiSessionMarkers;
@property(nonatomic) _Bool cacheHitTestsAsOpaque; // @synthesize cacheHitTestsAsOpaque=_cacheHitTestsAsOpaque;
@property(nonatomic) _Bool isObservingGeometry; // @synthesize isObservingGeometry=_isObservingGeometry;
@property(copy, nonatomic) NSUUID *currentSessionIdentifier; // @synthesize currentSessionIdentifier=_currentSessionIdentifier;
@property(retain, nonatomic) TIKeyboardOutput *pendingOutputOperation; // @synthesize pendingOutputOperation=_pendingOutputOperation;
@property(nonatomic) _Bool viewServiceStateIsActiveForRTI; // @synthesize viewServiceStateIsActiveForRTI=_viewServiceStateIsActiveForRTI;
@property(nonatomic) _Bool applicationStateIsActiveForRTI; // @synthesize applicationStateIsActiveForRTI=_applicationStateIsActiveForRTI;
@property(readonly, nonatomic) RTIInputSourceState *rtiInputSourceState; // @synthesize rtiInputSourceState=_rtiInputSourceState;
@property(retain, nonatomic) RTIDocumentState *rtiDocumentState; // @synthesize rtiDocumentState=_rtiDocumentState;
@property(retain, nonatomic) RTIDocumentTraits *rtiDocumentTraits; // @synthesize rtiDocumentTraits=_rtiDocumentTraits;
@property(retain, nonatomic) RTIInputSystemClient *rtiClient; // @synthesize rtiClient=_rtiClient;
@property(readonly, nonatomic) _Bool isNotifyingDelegateOfRemoteOutputOperation; // @synthesize isNotifyingDelegateOfRemoteOutputOperation=_isNotifyingDelegateOfRemoteOutputOperation;
@property(nonatomic) _Bool inputSystemClientEnabled; // @synthesize inputSystemClientEnabled=_inputSystemClientEnabled;
@property(nonatomic) __weak id <UIKBRTIPartnerDelegate> partnerDelegate; // @synthesize partnerDelegate=_partnerDelegate;
- (id)insertionPointColor;	// IMP=0x0000000000def00f
- (void)_geometryChanged:(const CDStruct_c9afd433 *)arg1 forAncestor:(id)arg2;	// IMP=0x0000000000deeff6
- (void)_updateGeometryObserverIfNecessary;	// IMP=0x0000000000deed25
- (struct CGRect)convertRect:(struct CGRect)arg1 from:(id)arg2;	// IMP=0x0000000000deeb21
- (void)_queryUIKitDocumentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000decd04
- (void)_queryWKDocumentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000dec42f
- (void)_addMergedTextRectsToDocumentState:(id)arg1 forWKContext:(id)arg2 textInputView:(id)arg3 granularity:(long long)arg4;	// IMP=0x0000000000debefa
- (void)_addAutocorrectStylingToDocumentState:(id)arg1;	// IMP=0x0000000000debb4a
- (void)_addFirstSelectionRectToDocumentState:(id)arg1;	// IMP=0x0000000000deb3db
- (struct CGRect)_selectionClipRect;	// IMP=0x0000000000deb273
- (long long)_uiTextGranularityForRTITextGranularity:(long long)arg1;	// IMP=0x0000000000deb260
- (void)_queryDocumentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000deb19c
- (void)performDocumentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000deb0c8
- (void)_performDocumentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000deb002
- (void)defaultDocumentRequestDidChange:(id)arg1;	// IMP=0x0000000000deaf84
- (unsigned int)_performKeyboardOutputOperations:(id)arg1;	// IMP=0x0000000000deac09
- (void)_queued_performTextOperations:(id)arg1 resultHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000de7a0a
- (void)performTextOperations:(id)arg1 resultHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000de7499
- (void)performTextOperations:(id)arg1;	// IMP=0x0000000000de7393
- (void)connectionInterrupted:(id)arg1;	// IMP=0x0000000000de7381
- (void)connectionInvalidated:(id)arg1;	// IMP=0x0000000000de736f
- (void)finishCompletionHandlersIfNeeded;	// IMP=0x0000000000de730f
- (id)exchangeWaitingRTIOutputOperationResponseContext:(id)arg1;	// IMP=0x0000000000de728b
- (_Bool)compareWaitingRTIOutputOperationResponseContext:(id)arg1 andExchange:(id)arg2;	// IMP=0x0000000000de71f5
- (void)inputSession:(id)arg1 didRemoveRTISupplementalLexicon:(id)arg2;	// IMP=0x0000000000de6fe6
- (void)inputSession:(id)arg1 didAddRTISupplementalLexicon:(id)arg2;	// IMP=0x0000000000de6da8
- (void)inputSession:(id)arg1 textSuggestionsChanged:(id)arg2;	// IMP=0x0000000000de6c34
- (void)inputSession:(id)arg1 performInputOperation:(id)arg2 withResponse:(CDUnknownBlockType)arg3;	// IMP=0x0000000000de64d7
- (void)inputSession:(id)arg1 performInputOperation:(id)arg2;	// IMP=0x0000000000de417c
- (void)inputSession:(id)arg1 documentStateDidChange:(id)arg2;	// IMP=0x0000000000de4165
- (void)inputSession:(id)arg1 documentTraitsDidChange:(id)arg2;	// IMP=0x0000000000de414e
- (void)applyRemoteDocumentStateIfNecessary:(id)arg1 force:(_Bool)arg2;	// IMP=0x0000000000de3ec4
- (void)applyAssistantItem:(id)arg1;	// IMP=0x0000000000de3e5b
- (void)applyRemoteDocumentTraitsIfNecessary:(id)arg1 force:(_Bool)arg2;	// IMP=0x0000000000de1ee9
- (void)_addTextCheckingAnnotatedStringToDocumentState:(id)arg1;	// IMP=0x0000000000de1bbd
- (void)_addCharacterRectsToDocumentState:(id)arg1 textRange:(id)arg2 offset:(long long)arg3;	// IMP=0x0000000000de15cc
- (void)_updateRTIStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000de109e
- (id)inputDelegateView;	// IMP=0x0000000000de1006
- (id)inputDelegate;	// IMP=0x0000000000de0fb6
- (_Bool)_updateRTITraitsIfNecessary;	// IMP=0x0000000000ddf170
- (void)updateStateWithCompletion:(CDUnknownBlockType)arg1 updateTraits:(_Bool)arg2;	// IMP=0x0000000000ddf082
- (void)restartCurrentSession;	// IMP=0x0000000000ddefba
- (void)endAllowingRemoteTextInput:(id)arg1 waitForReply:(_Bool)arg2;	// IMP=0x0000000000ddef12
- (void)endAllowingRemoteTextInput:(id)arg1;	// IMP=0x0000000000ddeefe
- (void)beginAllowingRemoteTextInput:(id)arg1;	// IMP=0x0000000000ddee72
- (void)ensureRTIConnection;	// IMP=0x0000000000ddec7d
- (void)_createRTIClientIfNecessary;	// IMP=0x0000000000ddebc8
- (void)_createRTIClient;	// IMP=0x0000000000ddeb51
- (void)_didCreateRTIClient:(id)arg1;	// IMP=0x0000000000ddeb14
- (id)_newRTIConnection;	// IMP=0x0000000000dde9c1
- (id)_newInputSystemAutoFillUIClient;	// IMP=0x0000000000dde885
- (id)_newInputSystemUIClient;	// IMP=0x0000000000dde61f
- (id)_defaultRTIMachNames;	// IMP=0x0000000000dde38e
- (void)_updateRTIAllowedAndNotify:(_Bool)arg1 withReason:(id)arg2;	// IMP=0x0000000000dddc59
- (void)_didRemoveSupplementalLexiconWithIdentifier:(unsigned long long)arg1;	// IMP=0x0000000000dddbe5
- (void)_didAddSupplementalLexicon:(id)arg1;	// IMP=0x0000000000ddd876
- (void)didRemoveSupplementalLexicon:(id)arg1;	// IMP=0x0000000000ddd7c9
- (void)didAddSupplementalLexicon:(id)arg1;	// IMP=0x0000000000ddd747
- (void)_performQueuedSupplementalLexiconOperations;	// IMP=0x0000000000ddd4d9
- (void)_queueSupplementalLexiconOperation:(unsigned long long)arg1 lexicon:(id)arg2;	// IMP=0x0000000000ddd398
- (_Bool)remoteTextInputClientHasActiveSession;	// IMP=0x0000000000ddd2dd
- (void)removeTextSuggestionsForSessionWithID:(id)arg1;	// IMP=0x0000000000ddd21f
- (void)addTextSuggestions:(id)arg1;	// IMP=0x0000000000ddd10f
- (void)updateTextSuggestionsIfNecessary:(id)arg1;	// IMP=0x0000000000ddcf81
- (void)textSuggestionsChanged:(id)arg1;	// IMP=0x0000000000ddcea6
- (void)forwardGrammarCorrectionEntries:(id)arg1;	// IMP=0x0000000000ddcd8e
- (void)forwardTypologyLogURL:(id)arg1;	// IMP=0x0000000000ddccc0
- (void)forwardKeyboardOperation:(SEL)arg1 object:(id)arg2;	// IMP=0x0000000000ddcbd6
- (void)forwardAutofillPayload:(id)arg1 toPayloadDelegate:(id)arg2;	// IMP=0x0000000000ddcb05
- (id)payloadDelegate;	// IMP=0x0000000000ddca7c
- (id)autofillPayloadDelegate;	// IMP=0x0000000000ddca6a
- (id)textOperation_insertAutofillContent:(id)arg1;	// IMP=0x0000000000ddc8fa
- (id)textOperation_insertionPointExitedTextWithSupplementalItems;	// IMP=0x0000000000ddc7de
- (id)textOperation_insertionPointEnteredText:(id)arg1 withSupplementalCandidate:(id)arg2;	// IMP=0x0000000000ddc61f
- (id)textOperation_cancelChooseSupplementalItemToInsert;	// IMP=0x0000000000ddc503
- (id)textOperation_chooseSupplementalItem:(id)arg1 toReplaceText:(id)arg2;	// IMP=0x0000000000ddc1e3
- (id)textOperation_insertSupplementalCandidate:(id)arg1 textToCommit:(id)arg2;	// IMP=0x0000000000ddc05c
- (void)forwardEventToRemoteSource_canSuggestSupplementalItemsForCurrentSelection:(_Bool)arg1;	// IMP=0x0000000000ddbe93
- (void)forwardEventCallbackToRemoteSource_didChooseSupplementalItem:(id)arg1 toReplaceText:(id)arg2;	// IMP=0x0000000000ddbc3a
- (void)forwardKeyboardCameraEvent_startCameraInput:(id)arg1;	// IMP=0x0000000000ddbb0d
- (void)forwardSelectorToUIHost:(SEL)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000ddb911
- (void)forwardInputDestinationEventToUIHost:(SEL)arg1 params:(id)arg2;	// IMP=0x0000000000ddb7f4
- (void)forwardInputDestinationEventToUIHost:(SEL)arg1;	// IMP=0x0000000000ddb7e0
- (void)forwardDictationEventToUIHost:(SEL)arg1 withOptionalObject:(id)arg2;	// IMP=0x0000000000ddb6b0
- (_Bool)synchronousForwardKeyInputMethodCommandEventToUIHost:(id)arg1 canHandleAppKeyCommand:(_Bool)arg2;	// IMP=0x0000000000ddb2d9
- (_Bool)synchronousForwardKeyCommandsToUIHost:(id)arg1;	// IMP=0x0000000000ddafc8
- (_Bool)synchronousForwardKeyCommandsBeforePublicToUIHost:(id)arg1;	// IMP=0x0000000000ddabfd
- (void)forwardKeyboardEventToUIHost:(id)arg1;	// IMP=0x0000000000ddaad7
- (void)forwardClearForwardingInputDelegateAndResign:(_Bool)arg1;	// IMP=0x0000000000dda8f6
- (void)forwardKeyboardInputMode:(id)arg1;	// IMP=0x0000000000dda7d6
- (void)forwardApplicationOperation:(SEL)arg1 object:(id)arg2;	// IMP=0x0000000000dda665
- (void)forwardKeyboardSuppression:(_Bool)arg1 suppressAssistantBar:(_Bool)arg2;	// IMP=0x0000000000dda48f
- (void)performInputOperation:(id)arg1;	// IMP=0x0000000000dda3c3
- (void)documentStateChanged:(_Bool)arg1;	// IMP=0x0000000000dda1f8
- (void)documentStateChanged;	// IMP=0x0000000000dda1e4
- (_Bool)_remoteInputSystemRequiresTextSuggestionUpdates;	// IMP=0x0000000000dda1d2
- (_Bool)_remoteInputSystemRequiresDocumentStateUpdates;	// IMP=0x0000000000dda16b
- (_Bool)_remoteInputSystemRequiresDocumentStateForAutofill;	// IMP=0x0000000000dda0de
- (void)endInputSessionWithIdentifier:(id)arg1 shouldResign:(_Bool)arg2 waitForReply:(_Bool)arg3;	// IMP=0x0000000000dd999a
- (void)endInputSessionWithIdentifier:(id)arg1 shouldResign:(_Bool)arg2;	// IMP=0x0000000000dd9985
- (void)endInputSessionWithIdentifier:(id)arg1;	// IMP=0x0000000000dd996e
- (void)beginInputSessionWithIdentifier:(id)arg1;	// IMP=0x0000000000dd8d8e
- (void)updateAnimationForOptions:(id)arg1;	// IMP=0x0000000000dd8ccc
- (void)documentTraitsChanged;	// IMP=0x0000000000dd8bba
- (id)delegate;	// IMP=0x0000000000dd8b6a
- (void)_screenModeDidChange:(id)arg1;	// IMP=0x0000000000dd8b4f
- (void)_applicationDidRemoveDeactivationReason:(id)arg1;	// IMP=0x0000000000dd895b
- (void)endInputSessionOnSwitchingApps;	// IMP=0x0000000000dd8906
- (void)_applicationWillAddDeactivationReason:(id)arg1;	// IMP=0x0000000000dd8584
- (unsigned int)_ignoredReasonsForAutoFill;	// IMP=0x0000000000dd8579
- (unsigned int)_ignoredReasonsForKeyboard;	// IMP=0x0000000000dd8554
- (void)_viewServiceHostDidBecomeActive:(id)arg1;	// IMP=0x0000000000dd8518
- (void)_viewServiceHostWillResignActive:(id)arg1;	// IMP=0x0000000000dd8475
- (void)_applicationWillSuspend:(id)arg1;	// IMP=0x0000000000dd83bb
- (void)_macWindowChangedKey:(id)arg1;	// IMP=0x0000000000dd83a9
@property(retain, nonatomic) UIKeyboardTaskSubqueue *keyboardTaskSubqueue;
- (void)invalidate;	// IMP=0x0000000000dd80eb
- (void)dealloc;	// IMP=0x0000000000dd7f0d
- (id)init;	// IMP=0x0000000000dd6e2a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

