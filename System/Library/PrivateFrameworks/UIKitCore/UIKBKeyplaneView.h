//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSMutableDictionary, NSString, UIKBCacheToken, UIKBKeyView, UIKBKeyViewAnimator, UIKBRenderConfig, UIKBRenderFactory, UIKBRenderingContext, UIKBScreenTraits, UIKBSplitImageView, UIKBTree, UIKeyboardEmojiKeyDisplayController, UIView;
@protocol UIKBKeyplaneViewDelegate;

__attribute__((visibility("hidden")))
@interface UIKBKeyplaneView
{
    UIKBTree *_keyplane;	// 8 = 0x8
    UIKBTree *_defaultKeyplane;	// 16 = 0x10
    UIKBCacheToken *_cacheToken;	// 24 = 0x18
    UIKBCacheToken *_defaultKeyplaneCacheToken;	// 32 = 0x20
    UIKBKeyViewAnimator *_keyViewAnimator;	// 40 = 0x28
    UIKeyboardEmojiKeyDisplayController *_emojiKeyManager;	// 48 = 0x30
    UIKBKeyView *_candidateGapView;	// 56 = 0x38
    NSMutableDictionary *_subviewIndex;	// 64 = 0x40
    NSMutableDictionary *_activeViewIndex;	// 72 = 0x48
    NSMutableDictionary *_renderedKeyViews;	// 80 = 0x50
    NSMutableDictionary *_delayedDeactivationKeys;	// 88 = 0x58
    _Bool _shouldDrawRect;	// 96 = 0x60
    UIKBRenderConfig *_renderConfig;	// 104 = 0x68
    UIKBRenderingContext *_renderingContext;	// 112 = 0x70
    UIKBRenderFactory *_factory;	// 120 = 0x78
    UIKBSplitImageView *_keyBorders;	// 128 = 0x80
    UIKBSplitImageView *_keyBackgrounds;	// 136 = 0x88
    UIKBSplitImageView *_keyCaps;	// 144 = 0x90
    UIView *_keyplaneMaskView;	// 152 = 0x98
    _Bool _suppressDrawing;	// 160 = 0xa0
    UIKBScreenTraits *_overrideScreenTraits;	// 168 = 0xa8
    id <UIKBKeyplaneViewDelegate> _delegate;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x0000000000b75721
@property(nonatomic) _Bool suppressDrawing; // @synthesize suppressDrawing=_suppressDrawing;
@property(nonatomic) __weak id <UIKBKeyplaneViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIKBScreenTraits *overrideScreenTraits; // @synthesize overrideScreenTraits=_overrideScreenTraits;
@property(retain, nonatomic) UIKeyboardEmojiKeyDisplayController *emojiKeyManager; // @synthesize emojiKeyManager=_emojiKeyManager;
@property(retain, nonatomic) UIKBKeyViewAnimator *keyViewAnimator; // @synthesize keyViewAnimator=_keyViewAnimator;
@property(retain, nonatomic) UIKBRenderFactory *factory; // @synthesize factory=_factory;
@property(retain, nonatomic) UIKBRenderingContext *renderingContext; // @synthesize renderingContext=_renderingContext;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(retain, nonatomic) UIKBCacheToken *defaultKeyplaneCacheToken; // @synthesize defaultKeyplaneCacheToken=_defaultKeyplaneCacheToken;
@property(retain, nonatomic) UIKBCacheToken *cacheToken; // @synthesize cacheToken=_cacheToken;
@property(retain, nonatomic) UIKBTree *defaultKeyplane; // @synthesize defaultKeyplane=_defaultKeyplane;
@property(retain, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=_keyplane;
- (_Bool)_shouldUseUnifiedKeyView:(id)arg1 forState:(int)arg2;	// IMP=0x0000000000b75593
@property(readonly, nonatomic) UIView *keyplaneMaskView; // @synthesize keyplaneMaskView=_keyplaneMaskView;
- (void)_updateKeyplaneMaskView;	// IMP=0x0000000000b753a6
- (void)purgeFactory;	// IMP=0x0000000000b75385
- (void)purgeLayerContents;	// IMP=0x0000000000b7532b
- (void)purgeSubviews;	// IMP=0x0000000000b752c1
- (void)purgeKeyViews;	// IMP=0x0000000000b74bca
- (void)purgeActiveKeyViews;	// IMP=0x0000000000b74a3e
- (void)activateKeys;	// IMP=0x0000000000b74826
- (void)deactivateKeysWithReason:(id)arg1 force:(_Bool)arg2;	// IMP=0x0000000000b742ce
- (void)deactivateKeys;	// IMP=0x0000000000b742b8
- (void)deactivateKey:(id)arg1 previousState:(int)arg2 keyView:(id)arg3;	// IMP=0x0000000000b73e91
- (void)deactivateKey:(id)arg1 previousState:(int)arg2;	// IMP=0x0000000000b73e16
- (_Bool)retestSelectedVariantIndexForKey:(id)arg1 atPoint:(struct CGPoint)arg2 phase:(long long)arg3;	// IMP=0x0000000000b73d2c
- (id)existingVariantsKeyViewForKey:(id)arg1;	// IMP=0x0000000000b73c3f
- (void)orientKeyCapForKey:(id)arg1 orientation:(long long)arg2;	// IMP=0x0000000000b739cc
- (void)hideKeyCaps:(_Bool)arg1 andControlKeysWithInteractionTypes:(id)arg2;	// IMP=0x0000000000b73763
- (void)hideKeyCaps:(_Bool)arg1;	// IMP=0x0000000000b735ff
- (void)dimKeys:(id)arg1;	// IMP=0x0000000000b73381
- (void)deactivateAdaptiveKey:(id)arg1;	// IMP=0x0000000000b7330b
- (_Bool)shouldAnimateOutKeyView:(id)arg1;	// IMP=0x0000000000b7324d
- (_Bool)shouldAnimateInKeyView:(id)arg1;	// IMP=0x0000000000b731d7
- (id)viewForKey:(id)arg1 state:(int)arg2;	// IMP=0x0000000000b73170
- (id)viewForKey:(id)arg1;	// IMP=0x0000000000b73082
- (void)updateFrameForKey:(id)arg1;	// IMP=0x0000000000b72e18
- (id)activeKeyViews;	// IMP=0x0000000000b72dfb
- (int)stateForKey:(id)arg1;	// IMP=0x0000000000b72de6
- (struct CGRect)_safeFrameForKeyViewFrame:(struct CGRect)arg1 inContainer:(id)arg2 forKey:(id)arg3;	// IMP=0x0000000000b7293d
- (void)setState:(int)arg1 forKey:(id)arg2 withReason:(id)arg3 force:(_Bool)arg4;	// IMP=0x0000000000b70bcf
- (void)setState:(int)arg1 forKey:(id)arg2;	// IMP=0x0000000000b70bb7
- (_Bool)_shouldAllowKey:(id)arg1;	// IMP=0x0000000000b70af2
- (id)containingViewForKey:(id)arg1 withState:(int)arg2 wantsActiveOut:(_Bool *)arg3;	// IMP=0x0000000000b7058b
- (unsigned long long)cornerMaskForKey:(id)arg1 recursive:(_Bool)arg2;	// IMP=0x0000000000b70043
- (id)cacheIdentifierForKey:(id)arg1 withState:(int)arg2;	// IMP=0x0000000000b6fe82
- (id)cacheIdentifierForKey:(id)arg1;	// IMP=0x0000000000b6fd3d
- (void)removeKeyFromDelayedDeactivationSet:(id)arg1;	// IMP=0x0000000000b6fcb4
- (void)addKeyToDelayedDeactivationSet:(id)arg1;	// IMP=0x0000000000b6fa89
- (void)cancelDelayedDeactivation;	// IMP=0x0000000000b6fa6c
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x0000000000b6fa1c
- (_Bool)_canDrawContent;	// IMP=0x0000000000b6fa07
- (_Bool)_shouldInheritScreenScaleAsContentScaleFactor;	// IMP=0x0000000000b6f9ff
- (void)setContentScaleFactor:(double)arg1;	// IMP=0x0000000000b6f978
- (void)drawContentsOfRenderers:(id)arg1;	// IMP=0x0000000000b6f1bf
@property(readonly, nonatomic) long long assetIdiom;
@property(readonly, nonatomic) _Bool keepNonPersistent;
@property(readonly, nonatomic) double cachedWidth;
@property(readonly, nonatomic) long long cacheDeferPriority;
@property(readonly, nonatomic) _Bool cacheDeferable;
- (void)displayLayer:(id)arg1;	// IMP=0x0000000000b6ea91
- (id)cacheKeysForRenderFlags:(id)arg1;	// IMP=0x0000000000b6e5bb
- (_Bool)useDefaultKeyplaneCacheTokenForRenderFlags:(long long)arg1;	// IMP=0x0000000000b6e543
@property(readonly, nonatomic) NSString *cacheKey;
- (void)layoutSubviews;	// IMP=0x0000000000b6e396
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000b6e2cb
- (void)_generateFactoryIfNeeded;	// IMP=0x0000000000b6e190
- (void)_generateRenderingContextIfNeeded;	// IMP=0x0000000000b6e074
- (void)prepareForDisplay;	// IMP=0x0000000000b6da25
- (_Bool)isPasscodeStyle;	// IMP=0x0000000000b6d525
- (_Bool)validForKeyplane:(id)arg1 withVisualStyle:(int)arg2;	// IMP=0x0000000000b6d4d5
- (void)dealloc;	// IMP=0x0000000000b6d460
- (void)removeFromSuperview;	// IMP=0x0000000000b6d3de
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2;	// IMP=0x0000000000b6d253

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

