//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

@class MRUGroupSlider, MRUStepper, MRUVisualStylingProvider, MRUVolumeController, MRUVolumeGroupCoordinator, NSString, UIWindowScene;
@protocol MPVolumeControllerDataSource, MRUNowPlayingVolumeControlsViewDelegate;

__attribute__((visibility("hidden")))
@interface MRUNowPlayingVolumeControlsView : UIView
{
    _Bool _onScreen;	// 8 = 0x8
    _Bool _dimmed;	// 9 = 0x9
    _Bool _ignoreAnimationForVolumeEvents;	// 10 = 0xa
    id <MRUNowPlayingVolumeControlsViewDelegate> _delegate;	// 16 = 0x10
    MRUVolumeController *_volumeController;	// 24 = 0x18
    MRUVolumeGroupCoordinator *_volumeGroupCoordinator;	// 32 = 0x20
    MRUVisualStylingProvider *_stylingProvider;	// 40 = 0x28
    long long _layout;	// 48 = 0x30
    MRUGroupSlider *_slider;	// 56 = 0x38
    MRUStepper *_stepper;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x000000000002ed56
@property(nonatomic) _Bool ignoreAnimationForVolumeEvents; // @synthesize ignoreAnimationForVolumeEvents=_ignoreAnimationForVolumeEvents;
@property(retain, nonatomic) MRUStepper *stepper; // @synthesize stepper=_stepper;
@property(retain, nonatomic) MRUGroupSlider *slider; // @synthesize slider=_slider;
@property(nonatomic, getter=isDimmed) _Bool dimmed; // @synthesize dimmed=_dimmed;
@property(nonatomic, getter=isOnScreen) _Bool onScreen; // @synthesize onScreen=_onScreen;
@property(nonatomic) long long layout; // @synthesize layout=_layout;
@property(retain, nonatomic) MRUVisualStylingProvider *stylingProvider; // @synthesize stylingProvider=_stylingProvider;
@property(retain, nonatomic) MRUVolumeGroupCoordinator *volumeGroupCoordinator; // @synthesize volumeGroupCoordinator=_volumeGroupCoordinator;
@property(retain, nonatomic) MRUVolumeController *volumeController; // @synthesize volumeController=_volumeController;
@property(nonatomic) __weak id <MRUNowPlayingVolumeControlsViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)updateVisualStyling;	// IMP=0x000000000002eba5
- (void)updateVisibility;	// IMP=0x000000000002eb07
- (void)updateVolumeAnimated:(_Bool)arg1;	// IMP=0x000000000002ea1d
- (void)visualStylingProviderDidChange:(id)arg1;	// IMP=0x000000000002ea0b
- (void)stepperIncrementHoldEnded:(id)arg1;	// IMP=0x000000000002e9ee
- (void)stepperIncrementHoldBegan:(id)arg1;	// IMP=0x000000000002e9d1
- (void)stepperDecrementHoldEnded:(id)arg1;	// IMP=0x000000000002e9b4
- (void)stepperDecrementHoldBegan:(id)arg1;	// IMP=0x000000000002e997
- (void)stepperDidIncrement:(id)arg1;	// IMP=0x000000000002e97a
- (void)stepperDidDecrement:(id)arg1;	// IMP=0x000000000002e95d
@property(readonly, nonatomic) NSString *volumeAudioCategory;
@property(readonly, nonatomic) UIWindowScene *windowSceneForVolumeDisplay;
@property(readonly, nonatomic, getter=isOnScreenForVolumeDisplay) _Bool onScreenForVolumeDisplay;
- (void)sliderLongPressActionDidFinish:(id)arg1;	// IMP=0x000000000002e869
- (void)sliderLongPressActionDidCancel:(id)arg1;	// IMP=0x000000000002e84c
- (void)sliderLongPressActionDidBegin:(id)arg1;	// IMP=0x000000000002e82f
- (_Bool)sliderShouldAllowLongPress:(id)arg1;	// IMP=0x000000000002e812
- (void)volumeController:(id)arg1 volumeControlCapabilitiesDidChange:(unsigned int)arg2;	// IMP=0x000000000002e800
- (void)volumeController:(id)arg1 volumeControlAvailableDidChange:(_Bool)arg2;	// IMP=0x000000000002e7cf
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;	// IMP=0x000000000002e6ea
- (void)sliderValueChanged:(id)arg1;	// IMP=0x000000000002e6a9
@property(retain, nonatomic) id <MPVolumeControllerDataSource> dataSource;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;	// IMP=0x000000000002e391
- (void)layoutSubviews;	// IMP=0x000000000002e07c
- (void)dealloc;	// IMP=0x000000000002e007
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000000000002dba8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

