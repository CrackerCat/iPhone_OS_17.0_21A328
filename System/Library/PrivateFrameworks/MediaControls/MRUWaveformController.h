//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MPAVEndpointRoute, MRNowPlayingController, MRUAudioAnalyzer, MRUNowPlayingController, MRUWaveformData, NSString, UIImage;
@protocol MRUWaveformControllerDelegate;

__attribute__((visibility("hidden")))
@interface MRUWaveformController : NSObject
{
    _Bool _playing;	// 8 = 0x8
    _Bool _remoteRoute;	// 9 = 0x9
    _Bool _visible;	// 10 = 0xa
    _Bool _isAnalyzingAudio;	// 11 = 0xb
    int _nowPlayingPID;	// 12 = 0xc
    MRUWaveformData *_waveform;	// 16 = 0x10
    NSString *_remoteRouteSymbolName;	// 24 = 0x18
    UIImage *_artworkImage;	// 32 = 0x20
    MRUNowPlayingController *_nowPlayingController;	// 40 = 0x28
    id <MRUWaveformControllerDelegate> _delegate;	// 48 = 0x30
    MRUAudioAnalyzer *_audioAnalyzer;	// 56 = 0x38
    MRNowPlayingController *_mrNowPlayingController;	// 64 = 0x40
    MPAVEndpointRoute *_endpointRoute;	// 72 = 0x48
    NSString *_trackIdentifier;	// 80 = 0x50
    struct CGSize _artworkFittingSize;	// 88 = 0x58
}

- (void).cxx_destruct;	// IMP=0x000000000006824d
@property(nonatomic) int nowPlayingPID; // @synthesize nowPlayingPID=_nowPlayingPID;
@property(retain, nonatomic) NSString *trackIdentifier; // @synthesize trackIdentifier=_trackIdentifier;
@property(nonatomic) struct CGSize artworkFittingSize; // @synthesize artworkFittingSize=_artworkFittingSize;
@property(nonatomic) _Bool isAnalyzingAudio; // @synthesize isAnalyzingAudio=_isAnalyzingAudio;
@property(retain, nonatomic) MPAVEndpointRoute *endpointRoute; // @synthesize endpointRoute=_endpointRoute;
@property(retain, nonatomic) MRNowPlayingController *mrNowPlayingController; // @synthesize mrNowPlayingController=_mrNowPlayingController;
@property(retain, nonatomic) MRUAudioAnalyzer *audioAnalyzer; // @synthesize audioAnalyzer=_audioAnalyzer;
@property(nonatomic) __weak id <MRUWaveformControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MRUNowPlayingController *nowPlayingController; // @synthesize nowPlayingController=_nowPlayingController;
@property(nonatomic, getter=isVisible) _Bool visible; // @synthesize visible=_visible;
@property(retain, nonatomic) UIImage *artworkImage; // @synthesize artworkImage=_artworkImage;
@property(readonly, nonatomic) NSString *remoteRouteSymbolName; // @synthesize remoteRouteSymbolName=_remoteRouteSymbolName;
@property(readonly, nonatomic, getter=isRemoteRoute) _Bool remoteRoute; // @synthesize remoteRoute=_remoteRoute;
@property(readonly, nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=_playing;
@property(readonly, nonatomic) MRUWaveformData *waveform; // @synthesize waveform=_waveform;
- (void)nowPlayingController:(id)arg1 endpointController:(id)arg2 didChangeRoute:(id)arg3;	// IMP=0x00000000000680a7
- (void)nowPlayingController:(id)arg1 metadataController:(id)arg2 didChangeNowPlayingInfo:(id)arg3;	// IMP=0x0000000000067f37
- (_Bool)nowPlayingControllerShouldAutomaticallyUpdateResponse:(id)arg1;	// IMP=0x0000000000067f2f
- (void)controller:(id)arg1 playerPathDidChange:(id)arg2;	// IMP=0x0000000000067e7f
- (void)audioAnalyzer:(id)arg1 didUpdateWaveform:(id)arg2;	// IMP=0x0000000000067e6a
- (void)artworkView:(id)arg1 didChangeArtworkImage:(id)arg2;	// IMP=0x0000000000067e55
- (void)updateImage:(id)arg1;	// IMP=0x0000000000067df8
- (void)updateRoute:(id)arg1;	// IMP=0x0000000000067b69
- (void)routeDidUpdateNotification:(id)arg1;	// IMP=0x0000000000067b04
- (void)setRemoteRouteSymbolName:(id)arg1;	// IMP=0x00000000000677ba
- (void)setRemoteRoute:(_Bool)arg1;	// IMP=0x0000000000067700
- (void)setWaveform:(id)arg1;	// IMP=0x0000000000067697
- (void)setPlaying:(_Bool)arg1;	// IMP=0x00000000000675dd
- (void)updateAnalyzer;	// IMP=0x0000000000067064
- (void)dealloc;	// IMP=0x000000000006701f
@property(readonly, copy) NSString *description;
- (id)init;	// IMP=0x0000000000066e09

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

