//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DADeviceResolver, DADiscovery, NSArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol MRUVendorSpecificDeviceManagerDelegate;

__attribute__((visibility("hidden")))
@interface MRUVendorSpecificDeviceManager : NSObject
{
    id <MRUVendorSpecificDeviceManagerDelegate> _delegate;	// 8 = 0x8
    NSString *_appBundleID;	// 16 = 0x10
    NSArray *_serviceIdentifiers;	// 24 = 0x18
    DADiscovery *_discovery;	// 32 = 0x20
    DADeviceResolver *_resolver;	// 40 = 0x28
    NSMutableDictionary *_deviceMap;	// 48 = 0x30
    NSMutableDictionary *_coalescedDeviceMap;	// 56 = 0x38
    NSMutableDictionary *_activatingDeviceMap;	// 64 = 0x40
    NSMutableDictionary *_activatedDeviceMap;	// 72 = 0x48
    NSMutableDictionary *_invalidatingDeviceMap;	// 80 = 0x50
    NSMutableSet *_mutableResolverManagedAirPlayRouteIDs;	// 88 = 0x58
    NSMutableDictionary *_groupableDeviceIDs;	// 96 = 0x60
}

- (void).cxx_destruct;	// IMP=0x0000000000034d92
@property(retain, nonatomic) NSMutableDictionary *groupableDeviceIDs; // @synthesize groupableDeviceIDs=_groupableDeviceIDs;
@property(retain, nonatomic) NSMutableSet *mutableResolverManagedAirPlayRouteIDs; // @synthesize mutableResolverManagedAirPlayRouteIDs=_mutableResolverManagedAirPlayRouteIDs;
@property(retain, nonatomic) NSMutableDictionary *invalidatingDeviceMap; // @synthesize invalidatingDeviceMap=_invalidatingDeviceMap;
@property(retain, nonatomic) NSMutableDictionary *activatedDeviceMap; // @synthesize activatedDeviceMap=_activatedDeviceMap;
@property(retain, nonatomic) NSMutableDictionary *activatingDeviceMap; // @synthesize activatingDeviceMap=_activatingDeviceMap;
@property(retain, nonatomic) NSMutableDictionary *coalescedDeviceMap; // @synthesize coalescedDeviceMap=_coalescedDeviceMap;
@property(retain, nonatomic) NSMutableDictionary *deviceMap; // @synthesize deviceMap=_deviceMap;
@property(retain, nonatomic) DADeviceResolver *resolver; // @synthesize resolver=_resolver;
@property(retain, nonatomic) DADiscovery *discovery; // @synthesize discovery=_discovery;
@property(copy, nonatomic) NSArray *serviceIdentifiers; // @synthesize serviceIdentifiers=_serviceIdentifiers;
@property(copy, nonatomic) NSString *appBundleID; // @synthesize appBundleID=_appBundleID;
@property(nonatomic) __weak id <MRUVendorSpecificDeviceManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dealloc;	// IMP=0x0000000000034beb
- (void)handleDiscoveryEvent:(id)arg1;	// IMP=0x000000000003415b
- (void)handleResolverEvent:(id)arg1;	// IMP=0x0000000000033aca
- (void)setDevice:(id)arg1 picked:(_Bool)arg2;	// IMP=0x00000000000337b0
- (void)stopDiscovery;	// IMP=0x000000000003376d
- (void)disconnectAllDevices;	// IMP=0x00000000000331e0
- (void)connectToDevice:(id)arg1;	// IMP=0x00000000000327b0
- (void)resolverRemoveNativeRouteforRouteUID:(id)arg1;	// IMP=0x0000000000032705
- (_Bool)resolverAddNativeRoute:(id)arg1 forRouteUID:(id)arg2;	// IMP=0x0000000000031ea9
- (void)resolverRemoveVendorSpecificRoute:(id)arg1;	// IMP=0x0000000000031dec
- (void)resolverAddVendorSpecificDevice:(id)arg1;	// IMP=0x0000000000031c1f
- (void)resolverRemoveNativeRoutes:(id)arg1;	// IMP=0x0000000000031a73
- (void)resolverAddNativeRoutes:(id)arg1;	// IMP=0x00000000000317b4
- (void)resolverSetLastSelectedRoute:(id)arg1;	// IMP=0x00000000000314f0
- (void)updateLocalMapWith:(id)arg1 deviceIsLost:(_Bool)arg2;	// IMP=0x0000000000030ef4
- (void)startDiscovery;	// IMP=0x0000000000030d62
- (_Bool)isGroupingAvailableFor:(id)arg1 activatedIDs:(id)arg2 forProtocolID:(id)arg3;	// IMP=0x0000000000030add
- (_Bool)isGroupingAvailableForDevice:(id)arg1;	// IMP=0x0000000000030853
- (long long)latestStateForDevice:(id)arg1;	// IMP=0x000000000003075f
@property(readonly, copy, nonatomic) NSArray *resolverManagedAirPlayRouteIDs;
@property(readonly, copy, nonatomic) NSArray *availableDeviceIDs;
@property(readonly, copy, nonatomic) NSArray *pendingDeviceIDs;
@property(readonly, copy, nonatomic) NSArray *invalidatingDeviceIDs;
@property(readonly, copy, nonatomic) NSArray *activatingDeviceIDs;
@property(readonly, copy, nonatomic) NSArray *activatedDeviceIDs;
@property(readonly, copy, nonatomic) NSArray *coalescedDevices;
@property(readonly, copy, nonatomic) NSArray *devices;
- (id)initWithAppBundleID:(id)arg1 serviceIdentifiers:(id)arg2;	// IMP=0x000000000003018a

@end

