//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AUAudioUnit, AVAudioSession, PHASEEngine, PHASEExternalOutputStream, PHASEExternalOutputStreamController, PHASEListener, PHASEMixerParameters, PHASESoundEvent, PHASESoundEventNodeDefinition, PHASESource, REPHASESoundPrepareState;

__attribute__((visibility("hidden")))
@interface REPHASESoundEvent : NSObject
{
    struct queue<REPHASESoundEventCommandState, std::deque<REPHASESoundEventCommandState>> _commandQueue;	// 8 = 0x8
    unsigned long long _state;	// 56 = 0x38
    struct atomic<bool> _isStopping;	// 64 = 0x40
    PHASEEngine *_engine;	// 72 = 0x48
    PHASESource *_source;	// 80 = 0x50
    PHASEListener *_listener;	// 88 = 0x58
    PHASEMixerParameters *_mixerParameters;	// 96 = 0x60
    PHASESoundEventNodeDefinition *_rootNode;	// 104 = 0x68
    struct recursive_mutex _stateChangeMutex;	// 112 = 0x70
    struct recursive_mutex _commandQueueMutex;	// 176 = 0xb0
    struct optional<double> _stationaryTime;	// 240 = 0xf0
    CDUnknownBlockType _soundEventFactory;	// 256 = 0x100
    float _cachedPlaybackSpeed;	// 264 = 0x108
    float _cachedReverbSendLevel;	// 268 = 0x10c
    float _cachedDirectSendLevel;	// 272 = 0x110
    REPHASESoundPrepareState *_prepareState;	// 280 = 0x118
    PHASESoundEvent *_soundEvent;	// 288 = 0x120
    PHASEExternalOutputStreamController *_externalStreamController;	// 296 = 0x128
    AVAudioSession *_audioSession;	// 304 = 0x130
    PHASEExternalOutputStream *_externalStream;	// 312 = 0x138
    AUAudioUnit *_audioUnit;	// 320 = 0x140
    CDUnknownBlockType _playbackStateChangeHandler;	// 328 = 0x148
}

+ (void)eventWithEngine:(id)arg1 streamUUID:(id)arg2 prepareState:(id)arg3 maximumFramesToRender:(unsigned int)arg4 audioSession:(id)arg5 callback:(CDUnknownBlockType)arg6;	// IMP=0x0010000000330b0d
+ (void)eventWithEngine:(id)arg1 streamUUID:(id)arg2 mixerDefinition:(id)arg3 source:(id)arg4 listener:(id)arg5 normalizationMode:(int)arg6 calibrationMode:(int)arg7 calibrationLevel:(double)arg8 audioSession:(id)arg9 callback:(CDUnknownBlockType)arg10;	// IMP=0x0010000000330821
+ (void)controllerWithEngine:(id)arg1 streamUUID:(id)arg2 mixerDefinition:(id)arg3 source:(id)arg4 listener:(id)arg5 normalizationMode:(int)arg6 calibrationMode:(int)arg7 calibrationLevel:(double)arg8 callback:(CDUnknownBlockType)arg9;	// IMP=0x001000000033067b
- (id).cxx_construct;	// IMP=0x0000000000333503
- (void).cxx_destruct;	// IMP=0x0000000000333386
@property(copy, nonatomic) CDUnknownBlockType playbackStateChangeHandler; // @synthesize playbackStateChangeHandler=_playbackStateChangeHandler;
@property(retain, nonatomic) AUAudioUnit *audioUnit; // @synthesize audioUnit=_audioUnit;
@property(retain, nonatomic) PHASEExternalOutputStream *externalStream; // @synthesize externalStream=_externalStream;
@property(nonatomic) float cachedDirectSendLevel; // @synthesize cachedDirectSendLevel=_cachedDirectSendLevel;
@property(nonatomic) float cachedReverbSendLevel; // @synthesize cachedReverbSendLevel=_cachedReverbSendLevel;
@property(nonatomic) float cachedPlaybackSpeed; // @synthesize cachedPlaybackSpeed=_cachedPlaybackSpeed;
@property(readonly) AVAudioSession *audioSession; // @synthesize audioSession=_audioSession;
@property(readonly, nonatomic) PHASEExternalOutputStreamController *externalStreamController; // @synthesize externalStreamController=_externalStreamController;
@property(readonly, nonatomic) PHASESoundEvent *soundEvent; // @synthesize soundEvent=_soundEvent;
@property(retain, nonatomic) REPHASESoundPrepareState *prepareState; // @synthesize prepareState=_prepareState;
- (id)description;	// IMP=0x00000000003330d2
- (id)paramForKey:(id)arg1;	// IMP=0x0000000000332f83
@property(readonly) unsigned long long state;
- (_Bool)seekToTime:(double)arg1;	// IMP=0x0000000000332e6e
- (void)stopAndDestroy;	// IMP=0x0000000000332e3c
- (void)resume;	// IMP=0x0000000000332e0a
- (void)pause;	// IMP=0x0000000000332dd8
- (void)prepareWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000003327ec
- (void)updateCommandQueue;	// IMP=0x00000000003326d4
- (_Bool)_seekToTime:(double)arg1;	// IMP=0x0000000000332183
- (_Bool)_stopAndDestroy;	// IMP=0x0000000000331fdb
- (_Bool)_pause;	// IMP=0x0000000000331ebf
- (_Bool)_resume;	// IMP=0x0000000000331cb0
- (_Bool)_startWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000003313bf
- (unsigned long long)changeToState:(unsigned long long)arg1;	// IMP=0x00000000003311cf
- (void)stream:(id)arg1 didInvalidateWithError:(id)arg2;	// IMP=0x0000000000331122
- (id)initWithEngine:(id)arg1 rootNode:(id)arg2 source:(id)arg3 listener:(id)arg4 mixerParameters:(id)arg5 audioSession:(id)arg6 outError:(id *)arg7;	// IMP=0x00000000003304a6
- (id)initWithAudioSession:(id)arg1;	// IMP=0x00000000003303c6
- (id)initWithSoundEventFactory:(CDUnknownBlockType)arg1;	// IMP=0x0000000000330317

@end

