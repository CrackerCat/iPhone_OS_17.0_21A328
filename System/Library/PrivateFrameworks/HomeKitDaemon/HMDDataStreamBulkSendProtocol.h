//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMapTable, NSMutableDictionary, NSString;
@protocol HMDDataStreamProtocolDelegate, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMDDataStreamBulkSendProtocol : NSObject
{
    _Bool _isConnected;	// 8 = 0x8
    unsigned int _nextSessionIdentifier;	// 12 = 0xc
    id <HMDDataStreamProtocolDelegate> _dataStream;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_queue;	// 24 = 0x18
    id _accessory;	// 32 = 0x20
    NSMapTable *_listeners;	// 40 = 0x28
    NSString *_logIdentifier;	// 48 = 0x30
    NSMapTable *_activeBulkSendSessions;	// 56 = 0x38
    NSMutableDictionary *_pendingBulkSendSessionContextBySessionIdentifier;	// 64 = 0x40
    CDUnknownBlockType _bulkSendSessionContextFactory;	// 72 = 0x48
}

+ (id)logCategory;	// IMP=0x00100000008aefd2
+ (id)protocolName;	// IMP=0x00100000008aefb3
- (void).cxx_destruct;	// IMP=0x00000000008ae4ca
@property(readonly) CDUnknownBlockType bulkSendSessionContextFactory; // @synthesize bulkSendSessionContextFactory=_bulkSendSessionContextFactory;
@property(readonly) NSMutableDictionary *pendingBulkSendSessionContextBySessionIdentifier; // @synthesize pendingBulkSendSessionContextBySessionIdentifier=_pendingBulkSendSessionContextBySessionIdentifier;
@property(readonly) NSMapTable *activeBulkSendSessions; // @synthesize activeBulkSendSessions=_activeBulkSendSessions;
@property unsigned int nextSessionIdentifier; // @synthesize nextSessionIdentifier=_nextSessionIdentifier;
@property(readonly, copy, nonatomic) NSString *logIdentifier; // @synthesize logIdentifier=_logIdentifier;
@property(nonatomic) _Bool isConnected; // @synthesize isConnected=_isConnected;
@property(retain, nonatomic) NSMapTable *listeners; // @synthesize listeners=_listeners;
@property(nonatomic) __weak id accessory; // @synthesize accessory=_accessory;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak id <HMDDataStreamProtocolDelegate> dataStream; // @synthesize dataStream=_dataStream;
- (void)timerDidFire:(id)arg1;	// IMP=0x00000000008add76
- (void)_openSessionForFileType:(id)arg1 reason:(id)arg2 metadata:(id)arg3 queue:(id)arg4 callback:(CDUnknownBlockType)arg5;	// IMP=0x00000000008ad7e2
- (void)openSessionForFileType:(id)arg1 reason:(id)arg2 metadata:(id)arg3 queue:(id)arg4 callback:(CDUnknownBlockType)arg5;	// IMP=0x00000000008ad66e
- (void)_sendAckMessageWithIdentifier:(id)arg1;	// IMP=0x00000000008ad4c8
- (void)_sendCloseMessageWithIdentifier:(id)arg1 reason:(unsigned short)arg2;	// IMP=0x00000000008ad2e3
- (void)_cancelSessionWithIdentifier:(id)arg1 reason:(unsigned short)arg2 hadReceivedEof:(_Bool)arg3;	// IMP=0x00000000008ad25d
- (void)_pumpReceiveFailure:(id)arg1 session:(id)arg2;	// IMP=0x00000000008ad1d8
- (void)_pumpMessage:(id)arg1 session:(id)arg2;	// IMP=0x00000000008acfa1
- (void)_handleDataMessage:(id)arg1;	// IMP=0x00000000008acd74
- (void)_handleCloseMessage:(id)arg1;	// IMP=0x00000000008ac9bd
- (void)_maybeSubmitMetricForDroppedOpenRequestOfType:(id)arg1;	// IMP=0x00000000008ac9b7
- (void)_handleOpenWithRequestHeader:(id)arg1 payload:(id)arg2;	// IMP=0x00000000008ac525
- (void)_removeBulkSendSessionForSessionIdentifier:(id)arg1;	// IMP=0x00000000008ac4bc
- (id)_getBulkSendSessionForSessionIdentifier:(id)arg1;	// IMP=0x00000000008ac442
- (void)_rejectSessionCandidate:(id)arg1 status:(unsigned short)arg2;	// IMP=0x00000000008ac3f0
- (void)_startSessionCandidate:(id)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;	// IMP=0x00000000008ac143
- (id)_createSessionIdentifier;	// IMP=0x00000000008ac0ef
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 status:(unsigned short)arg2;	// IMP=0x00000000008ac0d3
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 payload:(id)arg2 status:(unsigned short)arg3;	// IMP=0x00000000008abf06
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 bulkSendStatus:(unsigned short)arg2;	// IMP=0x00000000008abe19
- (void)_sendOpenResponseWithRequestHeader:(id)arg1 streamIdentifier:(id)arg2;	// IMP=0x00000000008abd42
- (id)_createSessionFromCandidate:(id)arg1 queue:(id)arg2;	// IMP=0x00000000008abb30
- (id)_createSessionCandidateWithRequestHeader:(id)arg1 metadata:(id)arg2;	// IMP=0x00000000008ab9fc
- (void)asyncBulkSendSessionDidCancelSessionWithIdentifier:(id)arg1 reason:(unsigned short)arg2 hadReceivedEof:(_Bool)arg3;	// IMP=0x00000000008ab93a
- (void)asyncBulkSendSessionCandidate:(id)arg1 didRejectWithStatus:(unsigned short)arg2;	// IMP=0x00000000008ab882
- (void)asyncBulkSendSessionCandidate:(id)arg1 didAcceptOnQueue:(id)arg2 callback:(CDUnknownBlockType)arg3;	// IMP=0x00000000008ab777
- (void)dataStream:(id)arg1 didReceiveResponse:(id)arg2 header:(id)arg3 payload:(id)arg4;	// IMP=0x00000000008ab771
- (void)dataStream:(id)arg1 didReceiveRequest:(id)arg2 header:(id)arg3 payload:(id)arg4;	// IMP=0x00000000008ab600
- (void)dataStream:(id)arg1 didReceiveEvent:(id)arg2 header:(id)arg3 payload:(id)arg4;	// IMP=0x00000000008ab404
- (void)dataStreamDidOpen:(id)arg1;	// IMP=0x00000000008ab1a4
- (void)dataStreamDidClose:(id)arg1;	// IMP=0x00000000008ab0cb
- (void)dataStreamInitiatedClose:(id)arg1;	// IMP=0x00000000008ab004
- (void)dataStream:(id)arg1 didFailWithError:(id)arg2;	// IMP=0x00000000008aaf02
@property(readonly, nonatomic, getter=isActive) _Bool active;
- (void)_closeAllSessionsWithError:(id)arg1;	// IMP=0x00000000008aa9da
- (void)_notifyActiveStatusChangedFromPreviousValue:(_Bool)arg1;	// IMP=0x00000000008aa87c
- (void)removeListener:(id)arg1;	// IMP=0x00000000008aa5d7
- (void)addListener:(id)arg1 fileType:(id)arg2;	// IMP=0x00000000008aa39f
- (id)initWithQueue:(id)arg1 accessory:(id)arg2 logIdentifier:(id)arg3 bulkSendSessionContextFactory:(CDUnknownBlockType)arg4;	// IMP=0x00000000008aa22b
- (id)initWithQueue:(id)arg1 accessory:(id)arg2 logIdentifier:(id)arg3;	// IMP=0x00000000008aa212

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

