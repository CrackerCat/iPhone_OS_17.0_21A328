//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface AKTSDBezierPath : NSObject
{
    long long sfr_elementCount;	// 8 = 0x8
    long long sfr_elementMax;	// 16 = 0x10
    struct PATHSEGMENT *sfr_head;	// 24 = 0x18
    double *sfr_elementLength;	// 32 = 0x20
    double sfr_totalLength;	// 40 = 0x28
    long long sfr_lastSubpathIndex;	// 48 = 0x30
    void *sfr_extraSegments;	// 56 = 0x38
    double sfr_lineWidth;	// 64 = 0x40
    struct CGRect sfr_controlPointBounds;	// 72 = 0x48
    double sfr_miterLimit;	// 104 = 0x68
    double sfr_flatness;	// 112 = 0x70
    double *sfr_dashedLinePattern;	// 120 = 0x78
    unsigned long long sfr_dashedLineCount;	// 128 = 0x80
    double sfr_dashedLinePhase;	// 136 = 0x88
    void *sfr_path;	// 144 = 0x90
    long long sfr_extraSegmentCount;	// 152 = 0x98
    long long sfr_extraSegmentMax;	// 160 = 0xa0
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;	// 168 = 0xa8
}

+ (double)defaultLineWidth;	// IMP=0x00100000000451fd
+ (void)setDefaultLineWidth:(double)arg1;	// IMP=0x00100000000451ef
+ (unsigned long long)defaultLineJoinStyle;	// IMP=0x00100000000451e2
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;	// IMP=0x00100000000451d5
+ (unsigned long long)defaultLineCapStyle;	// IMP=0x00100000000451c8
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;	// IMP=0x00100000000451bb
+ (unsigned long long)defaultWindingRule;	// IMP=0x00100000000451ae
+ (void)setDefaultWindingRule:(unsigned long long)arg1;	// IMP=0x00100000000451a1
+ (double)defaultFlatness;	// IMP=0x0010000000045193
+ (void)setDefaultFlatness:(double)arg1;	// IMP=0x0010000000045185
+ (double)defaultMiterLimit;	// IMP=0x0010000000045177
+ (void)setDefaultMiterLimit:(double)arg1;	// IMP=0x0010000000045169
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x00100000000450ce
+ (void)clipRect:(struct CGRect)arg1;	// IMP=0x00100000000450a8
+ (void)strokeRect:(struct CGRect)arg1;	// IMP=0x0010000000044eee
+ (void)fillRect:(struct CGRect)arg1;	// IMP=0x0010000000044ec8
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;	// IMP=0x0010000000044d40
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x0010000000044d38
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0010000000044ce3
+ (id)bezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0010000000044c8e
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;	// IMP=0x0010000000044c15
+ (id)bezierPath;	// IMP=0x0010000000044c03
+ (void)initialize;	// IMP=0x0010000000044bc3
+ (double)lineWidth;	// IMP=0x00100000000495be
+ (void)setLineWidth:(double)arg1;	// IMP=0x00100000000495ac
+ (unsigned long long)lineJoinStyle;	// IMP=0x001000000004959a
+ (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000049588
+ (unsigned long long)lineCapStyle;	// IMP=0x0010000000049576
+ (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x0010000000049564
+ (unsigned long long)windingRule;	// IMP=0x0010000000049552
+ (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x0010000000049540
+ (double)flatness;	// IMP=0x001000000004952e
+ (void)setFlatness:(double)arg1;	// IMP=0x001000000004951c
+ (double)miterLimit;	// IMP=0x001000000004950a
+ (void)setMiterLimit:(double)arg1;	// IMP=0x00100000000494f8
- (id)initWithCString:(const char *)arg1;	// IMP=0x0000000000048d40
- (const char *)cString;	// IMP=0x0000000000048b00
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000004826b
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000047c18
- (_Bool)containsPoint:(struct CGPoint)arg1;	// IMP=0x0000000000047b94
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;	// IMP=0x0000000000047775
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;	// IMP=0x000000000004775e
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x0000000000047464
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;	// IMP=0x0000000000047343
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0000000000047168
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;	// IMP=0x00000000000470b9
- (void)appendBezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0000000000046fa8
- (void)appendBezierPath:(id)arg1;	// IMP=0x0000000000046e14
- (void)_appendToPath:(id)arg1;	// IMP=0x0000000000046ce7
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;	// IMP=0x0000000000046bf7
- (unsigned long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000046b05
- (unsigned long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000046a2d
- (unsigned long long)elementAtIndex:(long long)arg1;	// IMP=0x0000000000046a19
- (long long)elementCount;	// IMP=0x0000000000046a0f
- (double)lengthToElement:(long long)arg1;	// IMP=0x00000000000469c2
- (double)lengthOfElement:(long long)arg1;	// IMP=0x000000000004698e
- (double)length;	// IMP=0x0000000000046960
- (void)calculateLengths;	// IMP=0x0000000000046894
- (double)calculateLengthOfElement:(long long)arg1;	// IMP=0x00000000000467e8
- (_Bool)isClockwise;	// IMP=0x00000000000465d1
- (_Bool)isFlat;	// IMP=0x0000000000046544
- (struct CGRect)bounds;	// IMP=0x00000000000464d7
- (struct CGRect)controlPointBounds;	// IMP=0x00000000000463ab
- (struct CGPoint)currentPoint;	// IMP=0x000000000004634b
- (_Bool)isEmpty;	// IMP=0x000000000004633d
- (struct CGPath *)CGPath;	// IMP=0x0000000000046319
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x0000000000046228
- (id)bezierPathByReversingPath;	// IMP=0x0000000000046053
- (id)_copyFlattenedPath;	// IMP=0x000000000004601e
- (id)bezierPathByFlatteningPath;	// IMP=0x0000000000045fc4
- (void)flattenIntoPath:(id)arg1;	// IMP=0x0000000000045e82
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;	// IMP=0x0000000000045ca6
- (void)addClip;	// IMP=0x0000000000045c43
- (void)fill;	// IMP=0x0000000000045be0
- (void)stroke;	// IMP=0x0000000000045a2c
- (void)_doPath;	// IMP=0x000000000004590d
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;	// IMP=0x00000000000458b8
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;	// IMP=0x00000000000457e4
- (void)setFlatness:(double)arg1;	// IMP=0x00000000000457d9
- (double)flatness;	// IMP=0x00000000000457ce
- (void)setMiterLimit:(double)arg1;	// IMP=0x00000000000457c3
- (double)miterLimit;	// IMP=0x00000000000457b8
- (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x000000000004579b
- (unsigned long long)windingRule;	// IMP=0x0000000000045789
- (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x000000000004576c
- (unsigned long long)lineJoinStyle;	// IMP=0x000000000004575a
- (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x000000000004573b
- (unsigned long long)lineCapStyle;	// IMP=0x0000000000045729
- (void)setLineWidth:(double)arg1;	// IMP=0x000000000004571e
- (double)lineWidth;	// IMP=0x0000000000045713
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000045691
- (void)relativeLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000045647
- (void)relativeMoveToPoint:(struct CGPoint)arg1;	// IMP=0x00000000000455fd
- (void)removeAllPoints;	// IMP=0x000000000004559c
- (void)closePath;	// IMP=0x000000000004558a
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x00000000000454f1
- (void)lineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000045483
- (void)moveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000045471
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000045361
- (void)dealloc;	// IMP=0x00000000000452f1
- (id)init;	// IMP=0x000000000004520b
- (void)_deviceClosePath;	// IMP=0x0000000000049459
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x00000000000492be
- (void)_deviceLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000049286
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;	// IMP=0x00000000000491f9
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;	// IMP=0x0000000000048ff2
- (id)description;	// IMP=0x00000000000495d0
- (id)chisel;	// IMP=0x00000000000e5336
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 inElementRange:(struct _NSRange)arg3 into:(id)arg4;	// IMP=0x00000000000e4b35
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 into:(id)arg3;	// IMP=0x00000000000e4a9e
- (void)recursiveSubdivideOntoPath:(id)arg1 into:(id)arg2;	// IMP=0x00000000000e4a13
- (double)curvatureAt:(double)arg1 fromElement:(int)arg2;	// IMP=0x00000000000e3223
- (float)curvatureAt:(float)arg1;	// IMP=0x00000000000e31a4
- (struct CGPoint)myGradientAt:(float)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e3132
- (struct CGPoint)myGradientAt:(float)arg1;	// IMP=0x00000000000e3098
- (struct CGPoint)rawGradientAt:(float)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e2ef5
- (float)elementPercentageFromElement:(int)arg1 forOverallPercentage:(float)arg2;	// IMP=0x00000000000e2e22
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 betweenElement:(long long)arg2 andElement:(long long)arg3 withPressure:(id)arg4 getElement:(long long *)arg5 getPercentage:(float *)arg6;	// IMP=0x00000000000e2c8b
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 inElement:(long long)arg2 withPressure:(id)arg3;	// IMP=0x00000000000e2b6d
- (struct CGPoint)transformedCoordinate:(struct CGPoint)arg1 withPressure:(id)arg2;	// IMP=0x00000000000e2a3f
- (struct CGPoint)gradientAt:(float)arg1;	// IMP=0x00000000000e29f0
- (struct CGPoint)gradientAt:(double)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e29a0
- (struct CGPoint)pointAt:(double)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e27cf
- (long long)elementPercentage:(float *)arg1 forOverallPercentage:(float)arg2;	// IMP=0x00000000000e264c
- (id)pressure;	// IMP=0x00000000000e2644
- (struct CGPoint)nearestAngleOnPathToLine:(struct CGPoint [2])arg1;	// IMP=0x00000000000e2032
- (struct CGPoint)nearestPointOnPathToLine:(struct CGPoint [2])arg1;	// IMP=0x00000000000e1ddf
- (id)copyFromSegment:(int)arg1 t:(float)arg2 toSegment:(int)arg3 t:(float)arg4;	// IMP=0x00000000000e1cfc
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 t:(double)arg3 toSegment:(long long)arg4 t:(double)arg5 withoutMove:(_Bool)arg6;	// IMP=0x00000000000e174c
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 toSegment:(long long)arg3;	// IMP=0x00000000000e1610
- (void)addIntersectionsWithLine:(struct CGPoint [2])arg1 to:(id)arg2;	// IMP=0x00000000000e14c5
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2;	// IMP=0x00000000000e14aa
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2 allIntersections:(_Bool)arg3 reversed:(_Bool)arg4;	// IMP=0x00000000000e0ac4
- (void)getStartPoint:(struct CGPoint *)arg1 andEndPoint:(struct CGPoint *)arg2;	// IMP=0x00000000000e0a22

@end

