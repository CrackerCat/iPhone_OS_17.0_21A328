//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class HAPAccessoryServerBrowser, HAPAccessoryServerBrowserBTLE, HAPAccessoryServerBrowserIP, HMDAccessoryServerBrowserDemo, HMDAuthServer, HMDHAP2Storage, HMDHomeManager, HMDMediaBrowser, HMDUnassociatedWACAccessory, HMDWACBrowser, HMFMessageDispatcher, HMFTimer, HMMTRAccessoryServerBrowser, NSArray, NSData, NSHashTable, NSMutableArray, NSMutableSet, NSObject, NSString, NSUUID;
@protocol HMDAccessoryBrowserManagerDelegate, HMDAccessoryBrowserUnpairedAccessoryManagerDelegate, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface HMDAccessoryBrowser : HMFObject
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSMutableSet *_unpairedHAPAccessories;	// 16 = 0x10
    NSMutableSet *_unassociatedMediaAccessories;	// 24 = 0x18
    NSMutableSet *_deviceSetupMediaAccessories;	// 32 = 0x20
    NSMutableSet *_unassociatedWACAccessories;	// 40 = 0x28
    NSMutableSet *_browsingConnections;	// 48 = 0x30
    NSHashTable *_activeAssertions;	// 56 = 0x38
    NSMutableSet *_discoveredAccessoryServerIdentifiers;	// 64 = 0x40
    _Bool _btlePowerState;	// 72 = 0x48
    _Bool _internalDiscoveryRequest;	// 73 = 0x49
    _Bool _active;	// 74 = 0x4a
    _Bool _hasActiveWACPairing;	// 75 = 0x4b
    HMMTRAccessoryServerBrowser *_chipAccessoryServerBrowser;	// 80 = 0x50
    HMDUnassociatedWACAccessory *_accessoryPerformingWAC;	// 88 = 0x58
    id <HMDAccessoryBrowserManagerDelegate> _managerDelegate;	// 96 = 0x60
    id <HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> _unpairedAccessoryManagerDelegate;	// 104 = 0x68
    unsigned long long _unitTestBTLEReachabilityInterval;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_workQueue;	// 120 = 0x78
    NSUUID *_uuid;	// 128 = 0x80
    HMFMessageDispatcher *_messageDispatcher;	// 136 = 0x88
    unsigned long long _generationCounter;	// 144 = 0x90
    HMDHomeManager *_homeManager;	// 152 = 0x98
    NSMutableArray *_accessoryServerBrowsers;	// 160 = 0xa0
    NSHashTable *_discoveringAccessoryServerBrowsers;	// 168 = 0xa8
    HAPAccessoryServerBrowserIP *_ipAccessoryServerBrowser;	// 176 = 0xb0
    HAPAccessoryServerBrowserBTLE *_btleAccessoryServerBrowser;	// 184 = 0xb8
    HAPAccessoryServerBrowser *_hap2AccessoryServerBrowser;	// 192 = 0xc0
    HMDHAP2Storage *_hap2Storage;	// 200 = 0xc8
    HMDMediaBrowser *_mediaBrowser;	// 208 = 0xd0
    HMDWACBrowser *_wacBrowser;	// 216 = 0xd8
    HMDAuthServer *_authServer;	// 224 = 0xe0
    HMDAccessoryServerBrowserDemo *_demoAccessoryServerBrowser;	// 232 = 0xe8
    HMFTimer *_stopReprovisioningTimer;	// 240 = 0xf0
    HMFTimer *_stopBrowsingAccessoriesNeedingReprovisioningTimer;	// 248 = 0xf8
    NSString *_identifierOfAccessoryBeingReprovisioned;	// 256 = 0x100
    NSData *_wiFiPSKForAccessoryReprovisioning;	// 264 = 0x108
    NSString *_countrycodeForAccessoryReprovisioning;	// 272 = 0x110
    NSMutableArray *_pairedAccessories;	// 280 = 0x118
    NSObject<OS_dispatch_source> *_reachabilityTimerForBTLE;	// 288 = 0x120
    NSMutableArray *_currentlyPairingAccessories;	// 296 = 0x128
    NSMutableArray *_currentlyPairingProgressHandlers;	// 304 = 0x130
    NSHashTable *_tombstonedHAPAccessoryServers;	// 312 = 0x138
    NSHashTable *_discoveringBLEAccessoryServerIdentifiers;	// 320 = 0x140
    NSArray *_browseableLinkTypes;	// 328 = 0x148
}

+ (id)logCategory;	// IMP=0x00100000008da4ed
- (void).cxx_destruct;	// IMP=0x00000000008d2631
@property(nonatomic) _Bool hasActiveWACPairing; // @synthesize hasActiveWACPairing=_hasActiveWACPairing;
@property(retain, nonatomic) NSArray *browseableLinkTypes; // @synthesize browseableLinkTypes=_browseableLinkTypes;
@property(retain, nonatomic) NSMutableSet *discoveredAccessoryServerIdentifiers; // @synthesize discoveredAccessoryServerIdentifiers=_discoveredAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *discoveringBLEAccessoryServerIdentifiers; // @synthesize discoveringBLEAccessoryServerIdentifiers=_discoveringBLEAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *tombstonedHAPAccessoryServers; // @synthesize tombstonedHAPAccessoryServers=_tombstonedHAPAccessoryServers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingProgressHandlers; // @synthesize currentlyPairingProgressHandlers=_currentlyPairingProgressHandlers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingAccessories; // @synthesize currentlyPairingAccessories=_currentlyPairingAccessories;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *reachabilityTimerForBTLE; // @synthesize reachabilityTimerForBTLE=_reachabilityTimerForBTLE;
@property(retain, nonatomic) NSMutableArray *pairedAccessories; // @synthesize pairedAccessories=_pairedAccessories;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(retain, nonatomic) NSString *countrycodeForAccessoryReprovisioning; // @synthesize countrycodeForAccessoryReprovisioning=_countrycodeForAccessoryReprovisioning;
@property(retain, nonatomic) NSData *wiFiPSKForAccessoryReprovisioning; // @synthesize wiFiPSKForAccessoryReprovisioning=_wiFiPSKForAccessoryReprovisioning;
@property(retain, nonatomic) NSString *identifierOfAccessoryBeingReprovisioned; // @synthesize identifierOfAccessoryBeingReprovisioned=_identifierOfAccessoryBeingReprovisioned;
@property(readonly, nonatomic) HMFTimer *stopBrowsingAccessoriesNeedingReprovisioningTimer; // @synthesize stopBrowsingAccessoriesNeedingReprovisioningTimer=_stopBrowsingAccessoriesNeedingReprovisioningTimer;
@property(readonly, nonatomic) HMFTimer *stopReprovisioningTimer; // @synthesize stopReprovisioningTimer=_stopReprovisioningTimer;
@property(retain, nonatomic) HMDAccessoryServerBrowserDemo *demoAccessoryServerBrowser; // @synthesize demoAccessoryServerBrowser=_demoAccessoryServerBrowser;
@property(retain, nonatomic) HMDAuthServer *authServer; // @synthesize authServer=_authServer;
@property(retain, nonatomic) HMDWACBrowser *wacBrowser; // @synthesize wacBrowser=_wacBrowser;
@property(retain, nonatomic) HMDMediaBrowser *mediaBrowser; // @synthesize mediaBrowser=_mediaBrowser;
@property(retain, nonatomic) HMDHAP2Storage *hap2Storage; // @synthesize hap2Storage=_hap2Storage;
@property(retain, nonatomic) HAPAccessoryServerBrowser *hap2AccessoryServerBrowser; // @synthesize hap2AccessoryServerBrowser=_hap2AccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser; // @synthesize btleAccessoryServerBrowser=_btleAccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser; // @synthesize ipAccessoryServerBrowser=_ipAccessoryServerBrowser;
@property(retain, nonatomic) NSHashTable *discoveringAccessoryServerBrowsers; // @synthesize discoveringAccessoryServerBrowsers=_discoveringAccessoryServerBrowsers;
@property(retain, nonatomic) NSMutableArray *accessoryServerBrowsers; // @synthesize accessoryServerBrowsers=_accessoryServerBrowsers;
@property(nonatomic) __weak HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property(nonatomic) unsigned long long generationCounter; // @synthesize generationCounter=_generationCounter;
@property(retain, nonatomic) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) unsigned long long unitTestBTLEReachabilityInterval; // @synthesize unitTestBTLEReachabilityInterval=_unitTestBTLEReachabilityInterval;
@property(nonatomic) __weak id <HMDAccessoryBrowserManagerDelegate> managerDelegate; // @synthesize managerDelegate=_managerDelegate;
@property(nonatomic) _Bool btlePowerState; // @synthesize btlePowerState=_btlePowerState;
@property(readonly) HMMTRAccessoryServerBrowser *chipAccessoryServerBrowser; // @synthesize chipAccessoryServerBrowser=_chipAccessoryServerBrowser;
- (id)dumpRegisteredPairedAccessories;	// IMP=0x00000000008d1f75
- (id)dumpUnassociatedAccessories;	// IMP=0x00000000008d1c94
- (void)vendorModel:(id *)arg1 vendorManufacturer:(id *)arg2 accessoryInfo:(id)arg3;	// IMP=0x00000000008d1a66
- (void)handlePPIDInfoResponse:(id)arg1 context:(id)arg2 error:(id)arg3;	// IMP=0x00000000008d1959
- (void)handleActivationResponse:(id)arg1 context:(id)arg2;	// IMP=0x00000000008d187b
- (void)didFinishActivation:(id)arg1 context:(id)arg2;	// IMP=0x00000000008d179d
- (void)browser:(id)arg1 didUpdateEndpoints:(id)arg2;	// IMP=0x00000000008d16e5
- (void)browser:(id)arg1 didRemoveSessions:(id)arg2;	// IMP=0x00000000008d163c
- (void)browser:(id)arg1 didRemoveAdvertisements:(id)arg2;	// IMP=0x00000000008d1584
- (void)browser:(id)arg1 didAddAdvertisements:(id)arg2;	// IMP=0x00000000008d14cc
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(_Bool)arg2 sessionInfo:(id)arg3 linkLayerType:(long long)arg4 withError:(id)arg5;	// IMP=0x00000000008d129a
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(_Bool)arg2 linkLayerType:(long long)arg3 withError:(id)arg4;	// IMP=0x00000000008d1272
- (void)accessoryServer:(id)arg1 confirmUUID:(id)arg2 token:(id)arg3;	// IMP=0x00000000008d0f81
- (void)accessoryServer:(id)arg1 authenticateUUID:(id)arg2 token:(id)arg3;	// IMP=0x00000000008d0c60
- (void)accessoryServer:(id)arg1 validateCert:(id)arg2 model:(id)arg3;	// IMP=0x00000000008d0b85
- (void)accessoryServer:(id)arg1 validateUUID:(id)arg2 token:(id)arg3 model:(id)arg4;	// IMP=0x00000000008d056c
- (void)accessoryServerNeedsOwnershipToken:(id)arg1;	// IMP=0x00000000008d0266
- (void)accessoryServer:(id)arg1 didFinishAuth:(id)arg2;	// IMP=0x00000000008cfe26
- (void)accessoryServer:(id)arg1 didUpdateName:(id)arg2;	// IMP=0x00000000008cfc40
- (void)accessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x00000000008cfb99
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x00000000008cf9d3
- (void)accessoryServerDidUpdateStateNumber:(id)arg1;	// IMP=0x00000000008cf8e4
- (void)accessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x00000000008cf602
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x00000000008cf423
- (void)accessoryServer:(id)arg1 didUpdateWakeNumber:(id)arg2;	// IMP=0x00000000008cf36f
- (void)accessoryServer:(id)arg1 didDisconnectWithError:(id)arg2;	// IMP=0x00000000008cf2db
- (void)accessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x00000000008cf22e
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x00000000008ceff8
- (void)continueAddingAccessoryToHomeAfterUserConfirmation:(id)arg1 withError:(id)arg2;	// IMP=0x00000000008cef1a
- (void)accessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x00000000008ce6cd
- (void)updateProgressForMappedErrors:(id)arg1 accessoryServer:(id)arg2 progressHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008ce60f
- (void)updateAlreadyPairingProgressForAccessoryServerIdentifier:(id)arg1 progressHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008ce345
- (void)updatePairingWithProgress:(long long)arg1 accessoryServer:(id)arg2;	// IMP=0x00000000008ce28d
- (void)_updateHasActiveWACPairing:(long long)arg1;	// IMP=0x00000000008ce1dd
- (void)accessoryServer:(id)arg1 updatePairingProgress:(long long)arg2;	// IMP=0x00000000008cde68
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x00000000008cdc63
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x00000000008cd2b3
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x00000000008cd0ed
- (void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;	// IMP=0x00000000008ccf67
- (void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;	// IMP=0x00000000008ccad8
- (void)accessoryServer:(id)arg1 requestUserPermission:(long long)arg2 accessoryInfo:(id)arg3 error:(id)arg4;	// IMP=0x00000000008cbb6e
- (void)accessoryServer:(id)arg1 promtDialog:(id)arg2 forNotCertifiedAccessory:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000000008cb95e
- (void)_callProgressOrErrorOut:(id)arg1 pairingInfo:(id)arg2 accessoryInfo:(id)arg3 unpairedAccessory:(id)arg4 progress:(long long)arg5 certStatus:(unsigned long long)arg6;	// IMP=0x00000000008cb50d
- (void)_continueAfterPPIDValidation:(_Bool)arg1 server:(id)arg2;	// IMP=0x00000000008cb4f8
- (id)_getHAPMetadataFromHMMetadata:(id)arg1;	// IMP=0x00000000008cb390
- (void)accessoryServerBrowser:(id)arg1 getThreadNetworkCredentialsForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000008caf7d
- (void)accessoryServerBrowser:(id)arg1 didFinishPairingForAccessoryServer:(id)arg2;	// IMP=0x00000000008caec0
- (void)accessoryServerBrowser:(id)arg1 getCommissioningCertificatesForNodeID:(id)arg2 fabricID:(id)arg3 publicKey:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00000000008caac1
- (void)removeAccessoryCacheForIdentifier:(id)arg1;	// IMP=0x00000000008caaaa
- (void)fetchAccessoryCacheForIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000008caa90
- (void)saveAccessoryCache:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x00000000008caa76
- (_Bool)isServerLinkTypeBrowseable:(long long)arg1;	// IMP=0x00000000008ca7b6
- (void)accessoryServerBrowser:(id)arg1 removeCacheForAccessoryWithIdentifier:(id)arg2;	// IMP=0x00000000008ca79a
- (void)accessoryServerBrowser:(id)arg1 getCacheForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000008ca727
- (void)accessoryServerBrowser:(id)arg1 saveCache:(id)arg2 serverIdentifier:(id)arg3;	// IMP=0x00000000008ca701
- (void)_notifyDelegateOfReachabilityChangeChange:(_Bool)arg1 forBTLEAccessories:(id)arg2;	// IMP=0x00000000008ca541
- (void)accessoryServerBrowser:(id)arg1 didChangeReachability:(_Bool)arg2 forAccessoryServerWithIdentifier:(id)arg3;	// IMP=0x00000000008ca52a
- (void)accessoryServerBrowser:(id)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(id)arg2;	// IMP=0x00000000008ca042
- (void)_notifyDelegateOfDiscoveryFailure:(id)arg1 accessoryServer:(id)arg2 linkType:(long long)arg3;	// IMP=0x00000000008c9ce1
- (void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2;	// IMP=0x00000000008c9a32
- (void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2;	// IMP=0x00000000008c990f
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3;	// IMP=0x00000000008c9358
- (void)_addReconfirmTimer:(id)arg1 accessoryServer:(id)arg2;	// IMP=0x00000000008c8ecd
- (void)_startPairingInterruptionTimer:(id)arg1;	// IMP=0x00000000008c8b46
- (void)_stopReconfirmTimer:(id)arg1;	// IMP=0x00000000008c893d
- (void)_handlePairingInterruptedTimeout:(id)arg1 error:(id)arg2;	// IMP=0x00000000008c8794
- (void)_notifyDelegateOfRemovedAccessoryServer:(id)arg1 error:(id)arg2;	// IMP=0x00000000008c85cc
- (void)accessoryServerBrowser:(id)arg1 didFinishWACForAccessoryWithIdentifier:(id)arg2 error:(id)arg3;	// IMP=0x00000000008c8513
- (void)_notifyDelegateOfAccessoryServerNeedingReprovisioning:(id)arg1 error:(id)arg2;	// IMP=0x00000000008c834b
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerNeedingReprovisioning:(id)arg2 error:(id)arg3;	// IMP=0x00000000008c8333
- (void)_notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:(id)arg1 error:(id)arg2;	// IMP=0x00000000008c81ab
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerForReprovisioning:(id)arg2;	// IMP=0x00000000008c7ec3
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2 stateChanged:(_Bool)arg3 stateNumber:(id)arg4;	// IMP=0x00000000008c7af1
- (void)_checkIfPairingWithPairedAccessoryServer:(id)arg1 errorCode:(long long)arg2;	// IMP=0x00000000008c7763
- (void)_removePairingInformation:(id)arg1 error:(id)arg2;	// IMP=0x00000000008c7556
- (void)accessoryServerBrowser:(id)arg1 accessoryServer:(id)arg2 didUpdateValuesForCharacteristics:(id)arg3 stateNumber:(id)arg4 broadcast:(_Bool)arg5;	// IMP=0x00000000008c731d
- (void)_notifyDelegateOfNewPairedAccessoryServer:(id)arg1 stateChanged:(_Bool)arg2 stateNumber:(id)arg3;	// IMP=0x00000000008c7041
- (void)_resurrectAccessoryServer:(id)arg1;	// IMP=0x00000000008c6e7b
- (void)_discoverAccessories:(id)arg1;	// IMP=0x00000000008c6aaa
- (id)_requiredCharacteristicsTypesToReadFromBTLEServer:(id)arg1;	// IMP=0x00000000008c6935
- (void)_tombstoneAccessoryServer:(id)arg1 forceNotify:(_Bool)arg2;	// IMP=0x00000000008c674d
- (void)_notifyDelegateOfTombstonedAccessoryServer:(id)arg1;	// IMP=0x00000000008c6582
- (_Bool)_shouldAccessoryServerBeTombstoned:(id)arg1;	// IMP=0x00000000008c64a2
- (id)_tombstonedAccessoryServerWithServerIdentifier:(id)arg1;	// IMP=0x00000000008c62cf
- (_Bool)_isAccessoryServerTombstoned:(id)arg1;	// IMP=0x00000000008c6261
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)messageDestination;	// IMP=0x00000000008c61d4
- (void)_sendPairingCompletionStatusForServer:(id)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008c5fe3
- (void)_updatePairingRetryTimerForAccessory:(id)arg1 delay:(long long)arg2;	// IMP=0x00000000008c5d42
- (void)_promptForPairingPasswordForServer:(id)arg1 reason:(id)arg2;	// IMP=0x00000000008c57a9
- (void)_pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008c45a0
- (_Bool)_isHomeHubMatterSharedAdminPairingCapableWithConfiguration:(id)arg1;	// IMP=0x00000000008c431c
- (_Bool)_isOwnerPairingAccessoryWithConfiguration:(id)arg1;	// IMP=0x00000000008c40eb
- (void)_pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000008c1c1e
- (void)_cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;	// IMP=0x00000000008c16f3
- (void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;	// IMP=0x00000000008c1615
- (id)currentControllerPairingIdentity;	// IMP=0x00000000008c160d
- (id)findAccessoryServerForAccessoryDescription:(id)arg1;	// IMP=0x00000000008c12b2
- (void)_cancelPairingWithAccessory:(id)arg1 error:(id)arg2;	// IMP=0x00000000008c0bd2
- (void)_handleSetupCodeAvailable:(id)arg1;	// IMP=0x00000000008c0845
- (void)_notifyManagerOfNewAccessory;	// IMP=0x00000000008c073a
- (id)unpairedAccessoryForServer:(id)arg1;	// IMP=0x00000000008c0697
- (id)unpairedAccessoryWithServerIdentifier:(id)arg1;	// IMP=0x00000000008c04c4
- (void)_setBTLEPowerChangeCompletionHandler;	// IMP=0x00000000008c03e3
- (void)handleXPCConnectionInvalidated:(id)arg1;	// IMP=0x00000000008c032b
- (void)_handleRequestSearchForNewAccessories:(id)arg1;	// IMP=0x00000000008bfc24
- (void)_handleRequestFetchNewAccessories:(id)arg1;	// IMP=0x00000000008bf676
- (void)_handleCurrentWiFiNetworkChangedNotification:(id)arg1;	// IMP=0x00000000008bf5f1
- (void)__handleProcessStateChange:(id)arg1;	// IMP=0x00000000008bf4a4
- (void)_cancelCurrentlyPairingAccessories:(long long)arg1 linkType:(id)arg2;	// IMP=0x00000000008bea84
- (void)_registerForNotifications;	// IMP=0x00000000008be98c
- (void)_registerForMessages;	// IMP=0x00000000008be728
@property(nonatomic) __weak id <HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> unpairedAccessoryManagerDelegate; // @synthesize unpairedAccessoryManagerDelegate=_unpairedAccessoryManagerDelegate;
- (void)resurrectAccessoryServer:(id)arg1;	// IMP=0x00000000008be578
- (void)tombstoneAccessoryServer:(id)arg1;	// IMP=0x00000000008be4c0
- (void)discoverAccessories:(id)arg1;	// IMP=0x00000000008be408
- (void)restartBrowsers;	// IMP=0x00000000008be397
- (void)_restartBrowsers;	// IMP=0x00000000008bdf30
- (void)_startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x00000000008bdb43
- (void)startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x00000000008bdad2
- (void)_stopDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x00000000008bd9ba
- (void)_stopDiscoveringAccessoriesWithError:(id)arg1;	// IMP=0x00000000008bd93c
- (void)_stopDiscoveringAccessoriesWithLinkType:(id)arg1 force:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000000008bd4f1
- (void)_stopDiscoveringMediaAccessories;	// IMP=0x00000000008bd339
- (void)_startDiscoveringMediaAccessories;	// IMP=0x00000000008bd29f
- (void)_startDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x00000000008bd187
- (void)_startDiscoveringAccessoriesWithLinkType:(id)arg1;	// IMP=0x00000000008bce57
- (void)_startDiscoveringPairedAccessories:(id)arg1;	// IMP=0x00000000008bcad0
- (void)currentlyFoundHAPAccessoryServerWithIdentifier:(id)arg1 linkType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000008bc8ba
- (void)_discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008bc485
- (void)timerDidFire:(id)arg1;	// IMP=0x00000000008bbd0d
- (void)_stopReprovisioningTimerHandler;	// IMP=0x00000000008bba4d
- (void)_startOrStopAccessoryDiscovery;	// IMP=0x00000000008bba47
- (void)evaluateAccessoryDiscoveryState;	// IMP=0x00000000008bb9ca
- (void)_stopBtleAccessoryReachabilityProbeTimer;	// IMP=0x00000000008bb86c
- (void)_btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x00000000008bb37a
- (void)cancelPairingWithAccessory:(id)arg1 error:(id)arg2;	// IMP=0x00000000008bb29c
- (void)handleSetupCodeAvailable:(id)arg1;	// IMP=0x00000000008bb1e4
- (void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)arg1 consent:(_Bool)arg2;	// IMP=0x00000000008bb12d
- (void)removePairingInformationForAccessoryServer:(id)arg1;	// IMP=0x00000000008bb075
- (id)unpairedHAPAccessoryWithAccessoryDescription:(id)arg1;	// IMP=0x00000000008bb016
- (void)pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00000000008baecf
- (void)pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008badc4
- (void)registerProgressHandler:(CDUnknownBlockType)arg1 unpairedAccessoryUUID:(id)arg2;	// IMP=0x00000000008bace6
- (void)_removeDiscoveredAccessoryServerIdentifier:(id)arg1;	// IMP=0x00000000008bac6b
- (void)_addDiscoveredAccessoryServerIdentifier:(id)arg1;	// IMP=0x00000000008babf0
- (id)discoveredAccessoryServers;	// IMP=0x00000000008bab90
- (void)addUnpairedAccessoryServer:(id)arg1 identifier:(id)arg2;	// IMP=0x00000000008baab2
- (void)deregisterPairedAccessory:(id)arg1;	// IMP=0x00000000008ba852
- (void)registerPairedAccessory:(id)arg1 transports:(unsigned long long)arg2 setupHash:(id)arg3 delegate:(id)arg4;	// IMP=0x00000000008ba3fb
- (void)_addUnpairedAccessoryForServer:(id)arg1;	// IMP=0x00000000008b9560
- (void)_handleWACAccessoryFound;	// IMP=0x00000000008b9344
- (void)_removePairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x00000000008b90e1
- (void)_handleRemovedUnpairedHAPAccessory:(id)arg1;	// IMP=0x00000000008b9067
- (void)removeUnpairedHAPAccessory:(id)arg1;	// IMP=0x00000000008b8f47
- (void)addUnpairedHAPAccessory:(id)arg1;	// IMP=0x00000000008b8e27
- (void)unassociatedWACAccessoryDidFinishAssociation:(id)arg1 withError:(id)arg2;	// IMP=0x00000000008b8c7a
- (void)unassociatedWACAccessoryDidStartAssociation:(id)arg1;	// IMP=0x00000000008b8b6d
- (void)requestPermissionToAssociateWACAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000008b899e
@property(retain, nonatomic, getter=getActiveWACSession, setter=setActiveWACSession:) HMDUnassociatedWACAccessory *accessoryPerformingWAC; // @synthesize accessoryPerformingWAC=_accessoryPerformingWAC;
- (void)updateUnassociatedWACAccessory:(id)arg1;	// IMP=0x00000000008b885d
- (void)removeUnassociatedWACAccessory:(id)arg1;	// IMP=0x00000000008b873d
- (void)addUnassociatedWACAccessory:(id)arg1;	// IMP=0x00000000008b865a
- (void)removeUnassociatedMediaAccessory:(id)arg1;	// IMP=0x00000000008b8501
- (void)_associateMediaAccessoryForServer:(id)arg1;	// IMP=0x00000000008b82ad
- (void)_associate:(_Bool)arg1 hapAccessoryWithAdvertisement:(id)arg2;	// IMP=0x00000000008b7e17
- (void)addUnassociatedMediaAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x00000000008b7a3e
- (id)_progressHandlerForUnpairedAccessory:(id)arg1;	// IMP=0x00000000008b7843
- (id)_pairingInformationForAccessoryIdentifier:(id)arg1;	// IMP=0x00000000008b75d7
- (id)_pairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x00000000008b7432
- (id)_unpairedAccessoryMatchingPairingInfo:(id)arg1;	// IMP=0x00000000008b72b5
- (id)unpairedAccessoryWithUUID:(id)arg1;	// IMP=0x00000000008b723b
@property(readonly, nonatomic) NSArray *unpairedHAPAccessories;
- (void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)arg1 forceScan:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00000000008b70ec
- (_Bool)isBrowsingAllowed;	// IMP=0x00000000008b70e4
- (id)accessoryBrowserHapProtocol;	// IMP=0x00000000008b70db
- (void)handleNewlyPairedAccessory:(id)arg1 linkType:(long long)arg2;	// IMP=0x00000000008b7023
- (void)homeLocationChangeNotification:(id)arg1;	// IMP=0x00000000008b6e84
- (void)handleConnectionDeactivation:(id)arg1;	// IMP=0x00000000008b6dcc
- (void)_reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x00000000008b68c7
- (void)reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x00000000008b6780
- (void)activate:(_Bool)arg1;	// IMP=0x00000000008b6706
- (void)discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000008b661c
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)arg1;	// IMP=0x00000000008b6564
- (void)btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x00000000008b64ea
- (void)stopDiscoveringMediaAccessories;	// IMP=0x00000000008b6479
- (void)stopDiscoveringForUnpairedAccessoriesWithLinkType:(long long)arg1;	// IMP=0x00000000008b63fd
- (void)stopDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x00000000008b6381
- (void)stopDiscoveringAccessories;	// IMP=0x00000000008b6310
- (void)startDiscoveringMediaAccessories;	// IMP=0x00000000008b629f
- (void)startDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x00000000008b6223
- (void)startDiscoveringAccessories;	// IMP=0x00000000008b61b2
- (void)startDiscoveringPairedAccessoriesWithLinkType:(long long)arg1;	// IMP=0x00000000008b6136
- (void)startDiscoveringPairedAccessories;	// IMP=0x00000000008b60c5
- (_Bool)isDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x00000000008b5f18
- (void)resetConfiguration;	// IMP=0x00000000008b5ea7
- (void)_handleRemovedAccessoryAdvertisements:(id)arg1;	// IMP=0x00000000008b593d
- (void)_handleAddedAccessoryAdvertisements:(id)arg1;	// IMP=0x00000000008b4c69
- (void)_notifyDelegateOfReachabilityChange:(_Bool)arg1 forAccessoryWithIdentifier:(id)arg2;	// IMP=0x00000000008b4ac1
- (void)__inactivate;	// IMP=0x00000000008b4a50
- (void)__activate;	// IMP=0x00000000008b49df
- (void)endActiveAssertion:(id)arg1;	// IMP=0x00000000008b47bc
- (id)beginActiveAssertionWithReason:(id)arg1;	// IMP=0x00000000008b464f
- (unsigned long long)numPairedIPAccessories;	// IMP=0x00000000008b4606
- (_Bool)areThereAnyAssociatedAirPlayAccessories;	// IMP=0x00000000008b45be
- (id)identifiersOfAssociatedMediaAccessories;	// IMP=0x00000000008b45a7
- (_Bool)areThereAnyPairedBTLEAccessories;	// IMP=0x00000000008b455f
- (id)identifiersOfPairedBTLEAccessories;	// IMP=0x00000000008b4548
- (_Bool)areThereAnyPairedAccessories;	// IMP=0x00000000008b4500
- (id)__identifiersOfPairedAccessoriesWithTransports:(unsigned long long)arg1;	// IMP=0x00000000008b42d6
- (id)pairedHMDHAPAccessoryWithAccessoryServer:(id)arg1;	// IMP=0x00000000008b41b6
- (id)pairedAccessoryInformationWithSetupID:(id)arg1;	// IMP=0x00000000008b3fb4
- (id)pairedAccessoryInformationWithIdentifier:(id)arg1;	// IMP=0x00000000008b3de1
- (void)removePairedAccessoryInfoWithIdentifier:(id)arg1;	// IMP=0x00000000008b3b98
- (void)resetPairedAccessories;	// IMP=0x00000000008b3b43
- (void)removePairedAccessory:(id)arg1;	// IMP=0x00000000008b3ac8
- (void)addPairedAccessory:(id)arg1;	// IMP=0x00000000008b3885
- (void)_removeBrowsingConnection:(id)arg1 error:(id)arg2;	// IMP=0x00000000008b3676
- (void)__addBrowsingConnection:(id)arg1;	// IMP=0x00000000008b2f42
- (void)__removeBrowsingObserver:(id)arg1 error:(id)arg2;	// IMP=0x00000000008b2a81
- (_Bool)__isMediaAccessoryBrowsingRequested;	// IMP=0x00000000008b2891
- (_Bool)__isAccessoryBrowsingRequested;	// IMP=0x00000000008b2849
- (void)__resetBrowsingConnections;	// IMP=0x00000000008b27f4
- (id)browsingConnections;	// IMP=0x00000000008b2794
@property _Bool internalDiscoveryRequest; // @synthesize internalDiscoveryRequest=_internalDiscoveryRequest;
- (id)dumpBrowsingConnections;	// IMP=0x00000000008b24a1
- (void)_sendNewAccessoryData:(id)arg1 messageName:(id)arg2;	// IMP=0x00000000008b1fe1
- (void)_handleRemovedAccessory:(id)arg1;	// IMP=0x00000000008b1eab
- (void)handleRemovedAccessory:(id)arg1;	// IMP=0x00000000008b1df3
- (void)_handleAddedAccessory:(id)arg1;	// IMP=0x00000000008b1cb0
- (void)handleAddedAccessory:(id)arg1;	// IMP=0x00000000008b1bf8
@property(readonly, nonatomic) NSArray *deviceSetupMediaAccessories;
@property(readonly, nonatomic) NSArray *unassociatedMediaAccessories;
- (id)_unassociatedMediaAccessoryWithIdentifier:(id)arg1;	// IMP=0x00000000008b1955
- (id)unassociatedAccessoriesForClientRequest:(id)arg1;	// IMP=0x00000000008b1633
@property(readonly, copy) NSArray *unassociatedAccessories;
- (void)removeUnassociatedAccessory:(id)arg1;	// IMP=0x00000000008b1232
- (void)removeUnassociatedAccessoryWithIdentifier:(id)arg1;	// IMP=0x00000000008b0fa7
- (void)addUnassociatedAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x00000000008b0df6
- (void)_handleTestModeConfigRequest:(id)arg1;	// IMP=0x00000000008b0850
- (void)configureDemoBrowserWithDemoAccessories:(id)arg1 finalized:(_Bool)arg2;	// IMP=0x00000000008b0695
- (void)validateLinkTypes:(id)arg1;	// IMP=0x00000000008b050e
- (void)dealloc;	// IMP=0x00000000008b0466
- (void)updateBroadcastKeyForIdentifier:(id)arg1 key:(id)arg2 keyUpdatedStateNumber:(id)arg3 keyUpdatedTime:(double)arg4;	// IMP=0x00000000008b034c
- (void)updateStateForIdentifier:(id)arg1 stateNumber:(id)arg2;	// IMP=0x00000000008b02c1
- (void)retrieveCurrentStateForIdentifier:(id)arg1 stateNumber:(id *)arg2 isReachable:(_Bool *)arg3 linkQuality:(unsigned long long *)arg4 lastSeen:(id *)arg5;	// IMP=0x00000000008b0232
- (void)setQOS:(long long)arg1;	// IMP=0x00000000008b01b6
- (void)configureAccessory:(id)arg1 trackState:(_Bool)arg2 connectionPriority:(_Bool)arg3;	// IMP=0x00000000008b00f5
- (void)configureWithHomeManager:(id)arg1 mediaBrowserFactory:(CDUnknownBlockType)arg2;	// IMP=0x00000000008b0017
- (void)configureWithHomeManager:(id)arg1;	// IMP=0x00000000008afffe
- (id)initWithMessageDispatcher:(id)arg1 injectedSettings:(id)arg2;	// IMP=0x00000000008af8ea
- (id)initWithMessageDispatcher:(id)arg1;	// IMP=0x00000000008af886

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

