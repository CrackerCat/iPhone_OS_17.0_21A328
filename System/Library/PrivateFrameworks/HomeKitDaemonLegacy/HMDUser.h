//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class AVOutputDeviceAuthorizedPeer, HAPPairingIdentity, HMBShareUserID, HMDAccountHandle, HMDAccountIdentifier, HMDAssistantAccessControl, HMDCloudShareMessenger, HMDCloudShareTrustManager, HMDHome, HMDPersonSettingsManager, HMDPhotosPersonManager, HMDSettingsControllerDependency, HMDSiriMultiUserNewLanguageNotificationManager, HMDUserDataController, HMDUserPhotosPersonDataManager, HMDUserSettingsBackingStoreController, HMFMessageDispatcher, HMPhotosPersonManagerSettings, HMUserHomeAccessSettings, HMUserPresenceAuthorization, NAFuture, NSData, NSNumber, NSObject, NSSet, NSString, NSUUID;
@protocol HMDUserDataSource, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMDUser : HMFObject
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSUUID *_uuid;	// 16 = 0x10
    _Bool _remoteAccessAllowed;	// 24 = 0x18
    HMDAccountHandle *_accountHandle;	// 32 = 0x20
    HMDAccountIdentifier *_accountIdentifier;	// 40 = 0x28
    _Bool _needsiTunesMultiUserRepair;	// 48 = 0x30
    unsigned long long _privilege;	// 56 = 0x38
    HMDHome *_home;	// 64 = 0x40
    NSString *_userID;	// 72 = 0x48
    HMUserPresenceAuthorization *_presenceAuthStatus;	// 80 = 0x50
    unsigned long long _camerasAccessLevel;	// 88 = 0x58
    HAPPairingIdentity *_pairingIdentity;	// 96 = 0x60
    NSString *_displayName;	// 104 = 0x68
    HMDAssistantAccessControl *_assistantAccessControl;	// 112 = 0x70
    unsigned long long _announceAccessLevel;	// 120 = 0x78
    unsigned long long _audioAnalysisUserDropInAccessLevel;	// 128 = 0x80
    long long _userCloudShareWithOwnerMessagingState;	// 136 = 0x88
    HMUserHomeAccessSettings *_homeAccessSettings;	// 144 = 0x90
    HMBShareUserID *_cloudShareID;	// 152 = 0x98
    NAFuture *_cloudShareIDFuture;	// 160 = 0xa0
    HMDUserPhotosPersonDataManager *_photosPersonDataManager;	// 168 = 0xa8
    HMDPersonSettingsManager *_personSettingsManager;	// 176 = 0xb0
    NSString *_accessCode;	// 184 = 0xb8
    NSUUID *_accessCodeChangedByUserUUID;	// 192 = 0xc0
    HMDUserDataController *_userDataController;	// 200 = 0xc8
    HMDSettingsControllerDependency *_sharedSettingsControllerDependency;	// 208 = 0xd0
    HMDSettingsControllerDependency *_privateSettingsControllerDependency;	// 216 = 0xd8
    HMDCloudShareMessenger *_shareMessenger;	// 224 = 0xe0
    HMDUserSettingsBackingStoreController *_privateBackingStoreController;	// 232 = 0xe8
    id <HMDUserDataSource> _dataSource;	// 240 = 0xf0
    HMDSiriMultiUserNewLanguageNotificationManager *_siriMultiUserNewLanguageNotificationManager;	// 248 = 0xf8
    NSObject<OS_dispatch_queue> *_queue;	// 256 = 0x100
    HMFMessageDispatcher *_messageDispatcher;	// 264 = 0x108
    unsigned long long _announceNotificationModeForCurrentDevice;	// 272 = 0x110
    HMDCloudShareTrustManager *_cloudShareTrustManager;	// 280 = 0x118
    HMDUserSettingsBackingStoreController *_sharedBackingStoreController;	// 288 = 0x120
}

+ (id)userDictionaryWithUserID:(id)arg1 privilege:(unsigned long long)arg2 remoteAccessAllowed:(_Bool)arg3 cameraAccessLevel:(unsigned long long)arg4 announceAccessAllowed:(id)arg5 announceAccessLevel:(unsigned long long)arg6 audioAnalysisUserDropInAccessLevel:(unsigned long long)arg7 homeAccessSettings:(id)arg8;	// IMP=0x00100000009c1cbb
+ (id)userWithDictionary:(id)arg1 home:(id)arg2;	// IMP=0x00100000009c176c
+ (id)userWithDictionary:(id)arg1;	// IMP=0x00100000009c1758
+ (unsigned long long)privilegeFromDictionary:(id)arg1;	// IMP=0x00100000009c1701
+ (_Bool)supportsSecureCoding;	// IMP=0x00100000009c16f9
+ (_Bool)hasMessageReceiverChildren;	// IMP=0x00100000009c16f1
+ (id)logCategory;	// IMP=0x00100000009c16c1
+ (id)sharedZoneNameForUserUUID:(id)arg1;	// IMP=0x00100000009c1667
+ (id)privateZoneNameForUserUUID:(id)arg1;	// IMP=0x00100000009c160d
+ (id)UUIDWithUserID:(id)arg1 forHomeIdentifier:(id)arg2 uuid:(id)arg3 pairingIdentity:(id)arg4;	// IMP=0x00100000009c1234
+ (id)userIDForAccountHandle:(id)arg1;	// IMP=0x00100000009c11e1
+ (id)ownerWithUserID:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 homeManager:(id)arg4;	// IMP=0x00100000009c0ed8
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2;	// IMP=0x00100000009c0ec3
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2 forceHH1Key:(_Bool)arg3;	// IMP=0x00100000009c0ce8
+ (id)av_authorizedPeerForPairingIdentity:(id)arg1 isOwner:(_Bool)arg2;	// IMP=0x00100000003b50f0
- (void).cxx_destruct;	// IMP=0x00000000009b9736
@property(retain) HMDUserSettingsBackingStoreController *sharedBackingStoreController; // @synthesize sharedBackingStoreController=_sharedBackingStoreController;
@property(retain) HMDCloudShareTrustManager *cloudShareTrustManager; // @synthesize cloudShareTrustManager=_cloudShareTrustManager;
@property unsigned long long announceNotificationModeForCurrentDevice; // @synthesize announceNotificationModeForCurrentDevice=_announceNotificationModeForCurrentDevice;
@property(retain) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(readonly) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) HMDSiriMultiUserNewLanguageNotificationManager *siriMultiUserNewLanguageNotificationManager; // @synthesize siriMultiUserNewLanguageNotificationManager=_siriMultiUserNewLanguageNotificationManager;
@property(readonly) id <HMDUserDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property _Bool needsiTunesMultiUserRepair; // @synthesize needsiTunesMultiUserRepair=_needsiTunesMultiUserRepair;
@property(retain) HMDUserSettingsBackingStoreController *privateBackingStoreController; // @synthesize privateBackingStoreController=_privateBackingStoreController;
@property(retain) HMDCloudShareMessenger *shareMessenger; // @synthesize shareMessenger=_shareMessenger;
@property(retain) HMDSettingsControllerDependency *privateSettingsControllerDependency; // @synthesize privateSettingsControllerDependency=_privateSettingsControllerDependency;
@property(retain) HMDSettingsControllerDependency *sharedSettingsControllerDependency; // @synthesize sharedSettingsControllerDependency=_sharedSettingsControllerDependency;
@property(retain) HMDUserDataController *userDataController; // @synthesize userDataController=_userDataController;
@property(retain) NSUUID *accessCodeChangedByUserUUID; // @synthesize accessCodeChangedByUserUUID=_accessCodeChangedByUserUUID;
@property(copy) NSString *accessCode; // @synthesize accessCode=_accessCode;
@property(retain) HMDPersonSettingsManager *personSettingsManager; // @synthesize personSettingsManager=_personSettingsManager;
@property(retain) HMDUserPhotosPersonDataManager *photosPersonDataManager; // @synthesize photosPersonDataManager=_photosPersonDataManager;
@property(readonly) NAFuture *cloudShareIDFuture; // @synthesize cloudShareIDFuture=_cloudShareIDFuture;
@property(retain) HMBShareUserID *cloudShareID; // @synthesize cloudShareID=_cloudShareID;
@property(copy, setter=setUUID:) NSUUID *uuid; // @synthesize uuid=_uuid;
- (id)allAccessoryUUID;	// IMP=0x00000000009b93e6
- (void)applyConditionalValueUpdateToModels:(id)arg1;	// IMP=0x00000000009b93e0
- (id)pushTokensForDevicesObservingSubjectDevice:(id)arg1 subActivity:(id)arg2;	// IMP=0x00000000009b9325
- (void)deregisterIDSActivityObserver:(id)arg1;	// IMP=0x00000000009b92bc
- (void)deregisterIDSActivityObserver:(id)arg1 subActivity:(id)arg2 subjectDevice:(id)arg3;	// IMP=0x00000000009b919c
- (void)updateIDSActivityObserver:(id)arg1;	// IMP=0x00000000009b90e8
- (void)registerIDSActivityObserver:(id)arg1 subActivity:(id)arg2 subjectDevice:(id)arg3;	// IMP=0x00000000009b8fc8
- (void)cloudShareTrustManager:(id)arg1 didRemoveUserWithUUID:(id)arg2;	// IMP=0x00000000009b8e40
- (void)didRemoveTrustZoneInCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009b8d67
- (void)didFinishConfiguringForCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009b8ca0
- (void)cloudShareTrustManager:(id)arg1 didFetchOwnerCloudShareID:(id)arg2;	// IMP=0x00000000009b8b88
- (_Bool)isOwnerCapableForTrustManager:(id)arg1;	// IMP=0x00000000009b8b44
- (id)homeForCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009b8b32
- (id)ownerForCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009b8b29
- (id)zoneNameForCloudShareTrustManager:(id)arg1;	// IMP=0x00000000009b8aa8
- (_Bool)cloudShareTrustManager:(id)arg1 shouldShareTrustWithUser:(id)arg2;	// IMP=0x00000000009b896a
- (void)configureCloudShareTrustManager;	// IMP=0x00000000009b8694
- (id)trustTargetUUID;	// IMP=0x00000000009b85a9
- (void)updateCloudShareID:(id)arg1;	// IMP=0x00000000009b82a4
- (void)removeCloudShareID;	// IMP=0x00000000009b8165
- (void)userDataControllerDidUpdateSupportsAutomaticHH2Migration:(id)arg1;	// IMP=0x00000000009b814c
- (void)updateSupportsHH2MigrationByOwnerManual:(_Bool)arg1 supportsHH2MigrationByOwnerAuto:(_Bool)arg2;	// IMP=0x00000000009b80b4
- (_Bool)userDataController:(id)arg1 isHAPAccessory:(id)arg2;	// IMP=0x00000000009b7eb2
- (_Bool)userDataController:(id)arg1 isAppleMediaAccessory:(id)arg2;	// IMP=0x00000000009b7cb0
- (id)privateZoneControllerForUserDataController:(id)arg1;	// IMP=0x00000000009b7c9e
- (id)sharedZoneControllerForUserDataController:(id)arg1;	// IMP=0x00000000009b7c8c
- (void)postUserSettingsUpdatedNotificationWithReason:(id)arg1;	// IMP=0x00000000009b7c05
- (void)userDataControllerDidUpdateMediaContentProfile:(id)arg1;	// IMP=0x00000000009b7bec
- (void)userDataControllerDidUpdateAssistantAccessControl:(id)arg1;	// IMP=0x00000000009b7bd3
- (_Bool)userDataController:(id)arg1 isMediaContentProfileCapableAccessoryID:(id)arg2;	// IMP=0x00000000009b78eb
- (_Bool)userDataController:(id)arg1 isPersonalRequestCapableAccessoryID:(id)arg2;	// IMP=0x00000000009b7603
- (void)backingStoreController:(id)arg1 didUpdatePhotosPersonManagerSettingsModel:(id)arg2 previousPhotosPersonManagerSettingsModel:(id)arg3;	// IMP=0x00000000009b7589
- (id)ownerForUserSettingsBackingStoreController:(id)arg1;	// IMP=0x00000000009b7580
- (id)backingStoreController:(id)arg1 createParticipantManagerForCloudZone:(id)arg2;	// IMP=0x00000000009b7484
- (void)didStopBackingStoreController:(id)arg1;	// IMP=0x00000000009b72b2
- (void)didStartLocalZoneForBackingStoreController:(id)arg1;	// IMP=0x00000000009b7145
- (void)didStartBackingStoreController:(id)arg1;	// IMP=0x00000000009b70dc
@property(readonly) NSUUID *userUUID;
@property(readonly) _Bool isRunningOnHomeOwnersDevice;
- (id)settingsControllerFollowerKeyPaths:(id)arg1;	// IMP=0x00000000009b6fbc
- (id)settingsController:(id)arg1 willUpdateSettingAtKeyPath:(id)arg2 withValue:(id)arg3;	// IMP=0x00000000009b6b9f
- (void)settingsController:(id)arg1 didUpdateWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000000009b6b50
- (id)dictionaryEncoding;	// IMP=0x00000000009b6a10
- (void)removeCloudData;	// IMP=0x00000000009b6908
- (id)modelObjectWithChangeType:(unsigned long long)arg1 version:(long long)arg2;	// IMP=0x00000000009b615d
- (id)modelObjectWithChangeType:(unsigned long long)arg1;	// IMP=0x00000000009b6146
- (id)backingStoreObjects:(long long)arg1;	// IMP=0x00000000009b5ed9
- (id)announceUserSettingsModelWithChangeType:(unsigned long long)arg1;	// IMP=0x00000000009b5e07
- (void)migrateCloudZone:(id)arg1 migrationQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000009b5997
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;	// IMP=0x00000000009b5545
- (void)_transactionUserUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;	// IMP=0x00000000009b4296
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;	// IMP=0x00000000009b3b54
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000009b28ba
@property(readonly, copy, nonatomic) NSString *encodingRemoteDisplayName;
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000009b1d0f
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
- (id)messageDestination;	// IMP=0x00000000009b1c91
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)logIdentifier;	// IMP=0x00000000009b1c2f
@property(readonly, copy) NSData *publicKey;
@property(readonly, copy) NSString *pairingUsername;
@property(copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly) NSNumber *uniqueIDForAccessories;
@property(copy) HMUserHomeAccessSettings *homeAccessSettings; // @synthesize homeAccessSettings=_homeAccessSettings;
@property(readonly) NSNumber *notificationContextNFCIdentifier;
@property(readonly) NSNumber *notificationContextHAPIdentifier;
- (void)configurePersonSettingsManager;	// IMP=0x00000000009b1606
- (void)configurePhotosPersonDataManager;	// IMP=0x00000000009b14ad
@property(readonly) HMDPhotosPersonManager *photosPersonManager;
@property(readonly, copy) HMPhotosPersonManagerSettings *photosPersonManagerSettings;
- (void)saveSyncDataToLocalDisk:(id)arg1;	// IMP=0x00000000009b0f35
- (id)syncDataFileNameWithHomeUUID:(id)arg1;	// IMP=0x00000000009b0e8a
- (id)announceNotificationFileName;	// IMP=0x00000000009b0e2b
- (id)announceNotificationFileNameForUserUUID:(id)arg1;	// IMP=0x00000000009b0daf
- (void)savePersonClassificationSettingsForCurrentUserToLocalDisk;	// IMP=0x00000000009b0c03
- (void)saveAnnounceNotificationModeForCurrentUserToLocalDisk;	// IMP=0x00000000009b07df
- (void)_updateAnnounceNotificationMode:(unsigned long long)arg1;	// IMP=0x00000000009b0536
- (void)updateAnnounceNotificationMode:(unsigned long long)arg1;	// IMP=0x00000000009b04ba
- (void)_handleAnnounceSettingsUpdate:(id)arg1;	// IMP=0x00000000009b0150
- (void)handleRemovedAccessory:(id)arg1;	// IMP=0x00000000009b005e
- (void)removeAccessoriesFromAssistantAccessControlList:(id)arg1;	// IMP=0x00000000009affe6
- (void)_handleMediaContentProfileAccessControlUpdate:(id)arg1;	// IMP=0x00000000009af827
- (void)handleMediaContentProfileAccessControlUpdate:(id)arg1;	// IMP=0x00000000009af793
- (void)_handleAssistantAccessControlUpdate:(id)arg1;	// IMP=0x00000000009ae79a
- (void)handleAssistantAccessControlUpdate:(id)arg1;	// IMP=0x00000000009ae706
- (_Bool)isCurrentUserAndOwner;	// IMP=0x00000000009ae5a0
@property(retain) HMDAssistantAccessControl *assistantAccessControl; // @synthesize assistantAccessControl=_assistantAccessControl;
@property(readonly) NSUUID *assistantAccessControlModelUUID;
@property(readonly, getter=isValid) _Bool valid;
@property(readonly, getter=isRemoteGateway) _Bool remoteGateway;
@property unsigned long long audioAnalysisUserDropInAccessLevel; // @synthesize audioAnalysisUserDropInAccessLevel=_audioAnalysisUserDropInAccessLevel;
@property unsigned long long announceAccessLevel; // @synthesize announceAccessLevel=_announceAccessLevel;
- (unsigned long long)defaultAnnounceUserAccessLevel;	// IMP=0x00000000009ae34d
@property(readonly, getter=isAnnounceAccessAllowed) _Bool announceAccessAllowed;
@property unsigned long long camerasAccessLevel; // @synthesize camerasAccessLevel=_camerasAccessLevel;
- (_Bool)_setRemoteAccessAllowed:(_Bool)arg1;	// IMP=0x00000000009ae21c
@property(getter=isRemoteAccessAllowed) _Bool remoteAccessAllowed; // @synthesize remoteAccessAllowed=_remoteAccessAllowed;
- (_Bool)refreshDisplayName;	// IMP=0x00000000009ae109
- (void)setDisplayName:(id)arg1;	// IMP=0x00000000009ae07e
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy) HMUserPresenceAuthorization *presenceAuthStatus; // @synthesize presenceAuthStatus=_presenceAuthStatus;
- (void)__handleRemovedAccount:(id)arg1;	// IMP=0x00000000009add6f
- (void)__handleAddedAccount:(id)arg1;	// IMP=0x00000000009adb72
- (_Bool)requiresMakoSupport;	// IMP=0x00000000009adb29
- (id)account;	// IMP=0x00000000009ada95
- (void)_handleNeedsiTunesMultiUserRepair:(id)arg1;	// IMP=0x00000000009ad67a
- (void)_handleShareClientRepairRequest:(id)arg1;	// IMP=0x00000000009acb77
- (void)_sendAccountMessage:(id)arg1 payload:(id)arg2 deviceCapabilities:(id)arg3 multicast:(_Bool)arg4 preferPrimary:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000000009ac859
- (void)_sendSecureShareClientPayloadToMostEligibleDevice:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000009ac455
- (void)_handleMultiUserSharePayloadRequest:(id)arg1;	// IMP=0x00000000009ab802
- (void)_handleShareLookupInfoRequest:(id)arg1;	// IMP=0x00000000009ab288
- (void)_handleLegacyPairingIdentityRequest:(id)arg1;	// IMP=0x00000000009aad03
- (void)_handlePairingIdentityRequest:(id)arg1;	// IMP=0x00000000009aa4b7
- (_Bool)matchingPairingIdentityIdentifier:(id)arg1;	// IMP=0x00000000009aa422
- (void)deregisterIdentity;	// IMP=0x00000000009aa3a7
- (void)registerIdentity;	// IMP=0x00000000009aa2fa
@property(copy) HAPPairingIdentity *pairingIdentity; // @synthesize pairingIdentity=_pairingIdentity;
- (id)spiClientIdentifier;	// IMP=0x00000000009aa211
@property(copy) HMDAccountIdentifier *accountIdentifier;
- (void)setAccountHandle:(id)arg1;	// IMP=0x00000000009a9fd9
- (id)accountHandle;	// IMP=0x00000000009a9f93
@property(readonly) _Bool isCurrentUser;
- (_Bool)updateAdministrator:(_Bool)arg1;	// IMP=0x00000000009a9ee2
@property unsigned long long privilege; // @synthesize privilege=_privilege;
- (_Bool)isPending;	// IMP=0x00000000009a9d64
@property(readonly, getter=isOwner) _Bool owner;
@property(readonly, getter=isAdministrator) _Bool administrator;
- (unsigned long long)_compatiblePrivilege;	// IMP=0x00000000009a9c94
@property __weak HMDHome *home; // @synthesize home=_home;
- (unsigned long long)allowedRemoteEventAccessUserTypes;	// IMP=0x00000000009a9bce
- (void)deregisterForMessages;	// IMP=0x00000000009a9ad4
- (void)registerForMessages;	// IMP=0x00000000009a9698
- (void)unconfigure;	// IMP=0x00000000009a960b
- (void)_recoverTrustManagerDueToUUIDChange;	// IMP=0x00000000009a94df
- (void)updateSharedBackingStoreControllerParticipants;	// IMP=0x00000000009a948d
- (void)_recoverUserSettingsDueToUUIDChange;	// IMP=0x00000000009a911d
- (void)recoverUserCloudDataDueToUUIDChangeFromOldUUID:(id)arg1;	// IMP=0x00000000009a9089
- (void)_handleCloudShareWithOwnerMessageError;	// IMP=0x00000000009a9049
@property long long userCloudShareWithOwnerMessagingState; // @synthesize userCloudShareWithOwnerMessagingState=_userCloudShareWithOwnerMessagingState;
- (long long)sharedUserSettingsLogEventBackingStoreControllerRunState;	// IMP=0x00000000009a8f8b
- (void)initializeUserSettingsWithHome:(id)arg1;	// IMP=0x00000000009a881a
- (id)sharedZoneName;	// IMP=0x00000000009a87b0
- (id)privateZoneName;	// IMP=0x00000000009a8746
- (void)handleUserDataControllerInitialized:(id)arg1;	// IMP=0x00000000009a86f4
- (void)configureWithHome:(id)arg1;	// IMP=0x00000000009a849d
- (_Bool)hasDeviceWithHomeKitVersionGreaterThanVersion:(id)arg1;	// IMP=0x00000000009a8272
- (id)dumpState;	// IMP=0x00000000009a7bcf
- (id)attributeDescriptions;	// IMP=0x00000000009a754b
- (id)shortDescription;	// IMP=0x00000000009a7489
- (_Bool)isAccountEqualWithUser:(id)arg1;	// IMP=0x00000000009a7314
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000009a7238
@property(readonly) unsigned long long hash;
- (void)dealloc;	// IMP=0x00000000009a7169
- (id)initWithAccountHandle:(id)arg1 homeUUID:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4 dataSource:(id)arg5;	// IMP=0x00000000009a6ee5
- (id)initWithAccountHandle:(id)arg1 homeUUID:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;	// IMP=0x00000000009a6e3a
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4 dataSource:(id)arg5;	// IMP=0x00000000009a6d49
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;	// IMP=0x00000000009a6c9e
- (id)initWithModelObject:(id)arg1;	// IMP=0x00000000009a6885
- (id)privateSettingValuesByKeyPath;	// IMP=0x00000000009a6835
- (id)sharedSettingValuesByKeyPath;	// IMP=0x00000000009a67e5
- (void)_setUuidUnsafely:(id)arg1;	// IMP=0x00000000009a67d1
@property(readonly, copy) AVOutputDeviceAuthorizedPeer *av_authorizedPeer;
@property(readonly) _Bool hasCameraClipsAccess;
@property(readonly, copy) NSData *nfcIssuerKeyIdentifier;

// Remaining properties
@property(readonly, getter=isCurrentUser) _Bool currentUser;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSSet *messageReceiverChildren;
@property(readonly) Class superclass;

@end

