//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSDate, NSDateComponents, NSString, NSTimeZone;

__attribute__((visibility("hidden")))
@interface HMDTimerTrigger
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSDate *currentFireDate;	// 16 = 0x10
    NSDate *_currentFireDate;	// 24 = 0x18
    NSDate *_fireDate;	// 32 = 0x20
    NSTimeZone *_fireDateTimeZone;	// 40 = 0x28
    NSString *_significantEvent;	// 48 = 0x30
    NSDateComponents *_significantEventOffset;	// 56 = 0x38
    NSDateComponents *_fireRepeatInterval;	// 64 = 0x40
    NSArray *_recurrences;	// 72 = 0x48
    NSString *_timerID;	// 80 = 0x50
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00600000002a74a1
+ (id)getCalendar:(id)arg1;	// IMP=0x00600000002a741d
+ (id)validateWholeMinuteDate:(id)arg1 onCalendar:(id)arg2;	// IMP=0x00600000002a72ec
+ (id)validateTriggerModel:(id)arg1 message:(id)arg2 currentFireDate:(id)arg3;	// IMP=0x00600000002a67dd
+ (id)validateRecurrences:(id)arg1;	// IMP=0x00600000002a6207
+ (id)validateSignificantOffset:(id)arg1;	// IMP=0x00600000002a61ff
+ (id)validateRecurrence:(id)arg1 calendar:(id)arg2 fireDate:(id)arg3;	// IMP=0x00600000002a6060
+ (id)logCategory;	// IMP=0x00600000002a6030
- (void).cxx_destruct;	// IMP=0x00000000002a5323
@property(retain, nonatomic) NSString *timerID; // @synthesize timerID=_timerID;
@property(copy, nonatomic) NSArray *recurrences; // @synthesize recurrences=_recurrences;
@property(copy, nonatomic) NSDateComponents *fireRepeatInterval; // @synthesize fireRepeatInterval=_fireRepeatInterval;
@property(copy, nonatomic) NSDateComponents *significantEventOffset; // @synthesize significantEventOffset=_significantEventOffset;
@property(copy, nonatomic) NSString *significantEvent; // @synthesize significantEvent=_significantEvent;
@property(copy, nonatomic) NSTimeZone *fireDateTimeZone; // @synthesize fireDateTimeZone=_fireDateTimeZone;
@property(copy, nonatomic) NSDate *fireDate; // @synthesize fireDate=_fireDate;
- (void)handleTimerFiredNotification:(id)arg1;	// IMP=0x00000000002a508d
- (void)_transactionObjectRemoved:(id)arg1 message:(id)arg2;	// IMP=0x00000000002a5087
- (void)_transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;	// IMP=0x00000000002a4f48
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000002a4d66
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000002a4a74
- (id)getFireInterval;	// IMP=0x00000000002a4981
- (id)getCalendar;	// IMP=0x00000000002a491e
- (void)_closestDatesForStartDate:(id)arg1 earliestDate:(id)arg2 timeZone:(id)arg3 deliveryRepeatInterval:(id)arg4 returnDateBefore:(id *)arg5 returnDateAfter:(id *)arg6;	// IMP=0x00000000002a3ded
- (void)_reactiveTriggerAfterDelay;	// IMP=0x00000000002a3d07
- (void)_timerTriggered;	// IMP=0x00000000002a3b5a
- (_Bool)_shouldExecuteActionSet;	// IMP=0x00000000002a371f
- (id)_nextSignificantEventFireDate;	// IMP=0x00000000002a3620
- (id)_nextFireDate;	// IMP=0x00000000002a3475
- (void)_activateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000000002a335c
- (_Bool)shouldActivateOnLocalDevice;	// IMP=0x00000000002a31be
- (void)_disableTimerOffReactivationFailure;	// IMP=0x00000000002a318c
- (_Bool)_reactivateSignificantEventTrigger;	// IMP=0x00000000002a2fca
- (_Bool)_reactivateFireDateTrigger;	// IMP=0x00000000002a2ea9
- (_Bool)_reactivateTrigger;	// IMP=0x00000000002a2e4d
- (id)_serializeForAdd;	// IMP=0x00000000002a2a3a
- (id)backingStoreObjects:(long long)arg1;	// IMP=0x00000000002a29ac
- (id)emptyModelObject;	// IMP=0x00000000002a28f4
- (id)modelObjectWithChangeType:(unsigned long long)arg1;	// IMP=0x00000000002a260f
- (void)_handleTimerTriggerUpdate:(id)arg1 message:(id)arg2;	// IMP=0x00000000002a258f
- (void)_handleUpdateTimerTriggerPropertiesModel:(id)arg1 message:(id)arg2;	// IMP=0x00000000002a2142
- (void)_handleUpdateTimerTriggerPropertiesRequest:(id)arg1;	// IMP=0x00000000002a1f65
- (void)_registerForMessages;	// IMP=0x00000000002a1de2
- (void)_stopTimer;	// IMP=0x00000000002a1d51
- (void)_startTimer:(id)arg1;	// IMP=0x00000000002a191a
- (void)_startTimerWithSignificantEventDate:(id)arg1;	// IMP=0x00000000002a1908
- (void)_startTimerWithFireDate:(id)arg1;	// IMP=0x00000000002a1689
- (void)invalidate;	// IMP=0x00000000002a1542
- (void)timerTriggered;	// IMP=0x00000000002a13de
- (void)dealloc;	// IMP=0x00000000002a1318
- (void)completeConfiguration;	// IMP=0x00000000002a12a7
- (void)configure:(id)arg1 messageDispatcher:(id)arg2 queue:(id)arg3;	// IMP=0x00000000002a0f83
- (void)setCurrentFireDate:(id)arg1;	// IMP=0x00000000002a0f2f
@property(readonly) NSDate *currentFireDate; // @synthesize currentFireDate=_currentFireDate;
- (unsigned long long)triggerType;	// IMP=0x00000000002a0ede
- (id)dumpState;	// IMP=0x00000000002a0c13
- (id)description;	// IMP=0x00000000002a0a1e
- (id)initWithModel:(id)arg1 home:(id)arg2;	// IMP=0x00000000002a083a
- (id)initWithName:(id)arg1 uuid:(id)arg2;	// IMP=0x00000000002a0768

@end

