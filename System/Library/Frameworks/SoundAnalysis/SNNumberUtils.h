//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface SNNumberUtils : NSObject
{
}

+ (long long)gcdOfInt64:(long long)arg1 andOther:(long long)arg2;	// IMP=0x006000000007fd76
+ (_Bool)validateNumberIsNegative:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007fcaf
+ (_Bool)validateNumberIsPositive:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007fb0a
+ (_Bool)validateNumberIsUInt8:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007fad9
+ (_Bool)validateNumberIsInt8:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007faa8
+ (_Bool)validateNumberIsUInt16:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007f970
+ (_Bool)validateNumberIsInt16:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007f93f
+ (_Bool)validateNumberIsUInt32:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007f92e
+ (_Bool)validateNumberIsInt32:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007f91d
+ (_Bool)validateNumberIsUInt64:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007f90c
+ (_Bool)validateNumberIsInt64:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007f753
+ (_Bool)validateNumberIsUnsignedInteger:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007f55e
+ (_Bool)validateNumberIsInteger:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007f52d
+ (_Bool)validateNumberIsDouble:(id)arg1 error:(id *)arg2;	// IMP=0x006000000007f4fc
+ (_Bool)numberIsNegative:(id)arg1;	// IMP=0x006000000007f49e
+ (_Bool)numberIsPositive:(id)arg1;	// IMP=0x006000000007f417
+ (_Bool)numberIsUInt8:(id)arg1;	// IMP=0x006000000007f36f
+ (_Bool)numberIsInt8:(id)arg1;	// IMP=0x006000000007f30d
+ (_Bool)numberIsUInt16:(id)arg1;	// IMP=0x006000000007f2ab
+ (_Bool)numberIsInt16:(id)arg1;	// IMP=0x006000000007f249
+ (_Bool)numberIsUInt32:(id)arg1;	// IMP=0x006000000007f1e0
+ (_Bool)numberIsInt32:(id)arg1;	// IMP=0x006000000007f119
+ (_Bool)numberIsUInt64:(id)arg1;	// IMP=0x006000000007f086
+ (_Bool)numberIsInt64:(id)arg1;	// IMP=0x006000000007eff9
+ (_Bool)numberIsUnsignedInteger:(id)arg1;	// IMP=0x006000000007efe8
+ (_Bool)numberIsInteger:(id)arg1;	// IMP=0x006000000007ef74
+ (_Bool)numberIsDouble:(id)arg1;	// IMP=0x006000000007eed5
+ (_Bool)thoroughlyCheckNumber:(id)arg1 isEqualToNumber:(id)arg2;	// IMP=0x006000000007ee1a
+ (id)numberClampedToSaturatedUInt8:(id)arg1;	// IMP=0x006000000007ed3f
+ (id)numberClampedToSaturatedInt8:(id)arg1;	// IMP=0x006000000007ecfd
+ (id)numberClampedToSaturatedUInt16:(id)arg1;	// IMP=0x006000000007ecbb
+ (id)numberClampedToSaturatedInt16:(id)arg1;	// IMP=0x006000000007ec79
+ (id)numberClampedToSaturatedUInt32:(id)arg1;	// IMP=0x006000000007ec30
+ (id)numberClampedToSaturatedInt32:(id)arg1;	// IMP=0x006000000007eb90
+ (id)numberClampedToSaturatedUInt64:(id)arg1;	// IMP=0x006000000007eaf5
+ (id)numberClampedToSaturatedInt64:(id)arg1;	// IMP=0x006000000007ea92
+ (id)numberClampedToSaturatedUnsignedInteger:(id)arg1;	// IMP=0x006000000007ea81
+ (id)numberClampedToSaturatedInteger:(id)arg1;	// IMP=0x006000000007ea2b
+ (unsigned char)saturatedUInt8FromNumber:(id)arg1;	// IMP=0x006000000007e99b
+ (BOOL)saturatedInt8FromNumber:(id)arg1;	// IMP=0x006000000007e94f
+ (unsigned short)saturatedUInt16FromNumber:(id)arg1;	// IMP=0x006000000007e903
+ (short)saturatedInt16FromNumber:(id)arg1;	// IMP=0x006000000007e8b7
+ (unsigned int)saturatedUInt32FromNumber:(id)arg1;	// IMP=0x006000000007e85c
+ (int)saturatedInt32FromNumber:(id)arg1;	// IMP=0x006000000007e84b
+ (unsigned long long)saturatedUInt64FromNumber:(id)arg1;	// IMP=0x006000000007e7f8
+ (long long)saturatedInt64FromNumber:(id)arg1;	// IMP=0x006000000007e7e7
+ (unsigned long long)saturatedUnsignedIntegerFromNumber:(id)arg1;	// IMP=0x006000000007e265
+ (long long)saturatedIntegerFromNumber:(id)arg1;	// IMP=0x006000000007e20e
- (id)init;	// IMP=0x000000000007fdb1

@end

