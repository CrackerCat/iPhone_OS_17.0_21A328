//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

__attribute__((visibility("hidden")))
@interface CPChunk
{
    struct CGRect bounds;	// 48 = 0x30
    _Bool shrinksWithChildren;	// 80 = 0x50
    _Bool dirtyBounds;	// 81 = 0x51
    unsigned int position;	// 84 = 0x54
    long long insertionOrder;	// 88 = 0x58
}

+ (float)chooseReferenceFontSizeFrom:(float)arg1 and:(float)arg2;	// IMP=0x00600000003aa0ea
- (double)rotationAngle;	// IMP=0x00000000003aa09f
- (void)setChunkPosition:(unsigned int)arg1;	// IMP=0x00000000003aa08f
- (unsigned int)chunkPosition;	// IMP=0x00000000003aa07f
- (void)translateObjectYBy:(double)arg1;	// IMP=0x00000000003aa066
- (_Bool)intersectsChild:(struct CGRect)arg1;	// IMP=0x00000000003a9f90
- (void)setShrinksWithChildren:(_Bool)arg1;	// IMP=0x00000000003a9f80
- (_Bool)shrinksWithChildren;	// IMP=0x00000000003a9f70
- (_Bool)boundsEqualsRect:(struct CGRect)arg1 accuracy:(double)arg2;	// IMP=0x00000000003a9ed5
- (_Bool)geometricallyContains:(id)arg1;	// IMP=0x00000000003a9e18
- (_Bool)overlapsVerticallyWith:(id)arg1;	// IMP=0x00000000003a9bdd
- (_Bool)overlapsHorizontallyWith:(id)arg1;	// IMP=0x00000000003a9b53
- (void)orderedInsert:(id)arg1 usingSelector:(SEL)arg2;	// IMP=0x00000000003a9ab6
- (int)clusterLevelHint;	// IMP=0x00000000003a9aae
- (struct CGSize)advance;	// IMP=0x00000000003a9a95
- (float)fontSize;	// IMP=0x00000000003a9a8c
- (double)bottom;	// IMP=0x00000000003a99a7
- (double)top;	// IMP=0x00000000003a98b5
- (double)center;	// IMP=0x00000000003a9865
- (double)right;	// IMP=0x00000000003a9790
- (double)left;	// IMP=0x00000000003a96d9
- (long long)compareChunkPosition:(id)arg1;	// IMP=0x00000000003a968f
- (long long)compareYDescendingX:(id)arg1;	// IMP=0x00000000003a95f9
- (long long)compareYDescending:(id)arg1;	// IMP=0x00000000003a95a1
- (long long)compareTopDescending:(id)arg1;	// IMP=0x00000000003a9549
- (long long)compareYBounds:(id)arg1;	// IMP=0x00000000003a949c
- (long long)compareY:(id)arg1;	// IMP=0x00000000003a942d
- (long long)compareLinearBounds:(id)arg1;	// IMP=0x00000000003a934f
- (long long)compareXBounds:(id)arg1;	// IMP=0x00000000003a92e1
- (long long)compareZDescending:(id)arg1;	// IMP=0x00000000003a9293
- (long long)compareZ:(id)arg1;	// IMP=0x00000000003a9249
- (long long)compareInsertionOrder:(id)arg1;	// IMP=0x00000000003a91ff
- (long long)compareX:(id)arg1;	// IMP=0x00000000003a91ed
- (long long)compareAnchorYDescending:(id)arg1;	// IMP=0x00000000003a9195
- (long long)compareAnchorX:(id)arg1;	// IMP=0x00000000003a9183
- (long long)compareCommonAnchorX:(id)arg1;	// IMP=0x00000000003a9124
- (long long)compareAnchorY:(id)arg1;	// IMP=0x00000000003a90c5
- (void)sortUsingSelector:(SEL)arg1;	// IMP=0x00000000003a90af
- (long long)insertionOrder;	// IMP=0x00000000003a909e
- (void)setInsertionOrder:(long long)arg1;	// IMP=0x00000000003a9083
- (void)resizeWith:(id)arg1;	// IMP=0x00000000003a8f78
- (void)fitBoundsToChildren;	// IMP=0x00000000003a8e1a
- (float)referenceAdvanceWidth;	// IMP=0x00000000003a8de6
- (float)absoluteGapTo:(id)arg1;	// IMP=0x00000000003a8d43
- (float)advanceDeltaAfterSpace;	// IMP=0x00000000003a8d3a
- (float)clusterGapTo:(id)arg1;	// IMP=0x00000000003a8cc3
- (struct CGPoint)anchor;	// IMP=0x00000000003a8cab
- (void)setAnchor:(struct CGPoint)arg1;	// IMP=0x00000000003a8ca5
- (id)describeBounds;	// IMP=0x00000000003a8c62
- (struct CGRect)renderedBounds;	// IMP=0x00000000003a8b2c
- (struct CGRect)adjustToPointBoundary:(struct CGRect)arg1;	// IMP=0x00000000003a898e
- (struct CGRect)bounds;	// IMP=0x00000000003a8943
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x00000000003a891a
- (void)setChildren:(id)arg1;	// IMP=0x00000000003a8877
- (id)newTakeChildrenAmong:(id)arg1;	// IMP=0x00000000003a880f
- (id)newTakeChildren;	// IMP=0x00000000003a87b0
- (void)removeAll;	// IMP=0x00000000003a8751
- (void)remove:(id)arg1;	// IMP=0x00000000003a8708
- (void)addChildrenOf:(id)arg1;	// IMP=0x00000000003a86c7
- (void)add:(id)arg1 atIndex:(unsigned int)arg2;	// IMP=0x00000000003a8657
- (void)add:(id)arg1;	// IMP=0x00000000003a85e7
- (float)opticalLeading;	// IMP=0x00000000003a85de
- (void)accept:(id)arg1;	// IMP=0x00000000003a85c3
- (id)copyAndSplitChildrenAtIndex:(unsigned int)arg1;	// IMP=0x00000000003a8529
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000003a84fa
- (id)init;	// IMP=0x00000000003a849d

@end

