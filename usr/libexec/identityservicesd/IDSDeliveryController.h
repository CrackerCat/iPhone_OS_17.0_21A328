//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class FTMessageDelivery, IDSCoalesceMessageQueueManager, IDSRateLimiter, NSMutableArray, NSMutableDictionary, NSString;

@interface IDSDeliveryController : NSObject
{
    FTMessageDelivery *_messageDelivery;	// 8 = 0x8
    NSMutableDictionary *_messageQueue;	// 16 = 0x10
    NSMutableArray *_pendingOfflineMessages;	// 24 = 0x18
    IDSRateLimiter *_tokenURINegativeCache;	// 32 = 0x20
    IDSCoalesceMessageQueueManager *_coalesceMessageQueueManager;	// 40 = 0x28
}

+ (id)tokenURINegativeCacheItemForTokenURI:(id)arg1 service:(id)arg2;	// IMP=0x00200000001a5b2e
+ (id)sharedInstance;	// IMP=0x00100000001a5491
- (void).cxx_destruct;	// IMP=0x00200000001b4f89
- (void)queueManager:(id)arg1 receivedMessagesToSend:(id)arg2 forTopic:(id)arg3 sendMode:(id)arg4;	// IMP=0x00100000001b4379
- (void)sendRTCMetricWithStartDate:(id)arg1 endDate:(id)arg2 endpointCount:(long long)arg3 usedPipeline:(_Bool)arg4 usedMMCS:(_Bool)arg5 responseCode:(long long)arg6;	// IMP=0x00100000001b4180
- (id)_constructDeliveryPipeline;	// IMP=0x00100000001b3e18
- (void)_pipelineHandleMessage:(id)arg1 forURIs:(id)arg2 service:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x00100000001b2f60
- (void)_pipelineHandleMessage:(id)arg1 forURIs:(id)arg2 service:(id)arg3;	// IMP=0x00100000001b2c3f
- (void)_pipelinesHandleMessagesToCoalesce:(id)arg1 forService:(id)arg2 sendMode:(id)arg3;	// IMP=0x00100000001b22cd
- (void)sendMessageDictionary:(id)arg1 messageID:(id)arg2 dataToEncrypt:(id)arg3 withEncryptedAttributes:(id)arg4 onService:(id)arg5 wantsResponse:(_Bool)arg6 expirationDate:(id)arg7 enforceRemoteTimeouts:(_Bool)arg8 canUseLargePayload:(_Bool)arg9 sendOnePerToken:(_Bool)arg10 allowPartialSendsToSucceed:(_Bool)arg11 priority:(long long)arg12 fireAndForget:(_Bool)arg13 fromID:(id)arg14 fromIdentity:(id)arg15 toURIs:(id)arg16 accessToken:(id)arg17 topic:(id)arg18 registrationProperties:(id)arg19 fakeMessage:(_Bool)arg20 alwaysSkipSelf:(_Bool)arg21 alwaysIncludeSelf:(_Bool)arg22 pushPriority:(id)arg23 ignoreMaxRetryCount:(_Bool)arg24 disallowRefresh:(_Bool)arg25 originalTimestamp:(id)arg26 prioritizedTokenList:(id)arg27 wantsFirewallDonation:(_Bool)arg28 destinationObject:(id)arg29 deliveryMinimumTimeDelay:(id)arg30 sendMode:(id)arg31 ackBlock:(CDUnknownBlockType)arg32 willSendBlock:(CDUnknownBlockType)arg33 sendCompletionBlock:(CDUnknownBlockType)arg34;	// IMP=0x00100000001b1f03
- (void)_sendErrorDictionary:(id)arg1 onService:(id)arg2 fromID:(id)arg3 fromIdentity:(id)arg4 toID:(id)arg5 toToken:(id)arg6 topic:(id)arg7 sendCompletionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00100000001b1b73
- (void)_sendMessageDictionary:(id)arg1 lastRetryInterval:(double)arg2 dataToEncrypt:(id)arg3 withEncryptedAttributes:(id)arg4 onService:(id)arg5 wantsResponse:(_Bool)arg6 canUseLargePayload:(_Bool)arg7 sendOnePerToken:(_Bool)arg8 allowPartialSendsToSucceed:(_Bool)arg9 highPriority:(_Bool)arg10 fireAndForget:(_Bool)arg11 expirationDate:(id)arg12 enforceRemoteTimeouts:(_Bool)arg13 messageID:(id)arg14 fromID:(id)arg15 fromIdentity:(id)arg16 toID:(id)arg17 toURIs:(id)arg18 accessToken:(id)arg19 topic:(id)arg20 registrationProperties:(id)arg21 fakeMessage:(_Bool)arg22 alwaysSkipSelf:(_Bool)arg23 alwaysIncludeSelf:(_Bool)arg24 pushPriority:(id)arg25 ignoreMaxRetryCount:(_Bool)arg26 disallowRefresh:(_Bool)arg27 originalTimestamp:(id)arg28 prioritizedTokenList:(id)arg29 wantsFirewallDonation:(_Bool)arg30 destinationObject:(id)arg31 deliveryMinimumTimeDelay:(id)arg32 sendMode:(id)arg33 ackBlock:(CDUnknownBlockType)arg34 willSendBlock:(CDUnknownBlockType)arg35 sendCompletionBlock:(CDUnknownBlockType)arg36;	// IMP=0x00100000001b0e36
- (void)sendIDSMessage:(id)arg1 service:(id)arg2 topic:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x00100000001b0c0b
- (void)_sendMessage:(id)arg1 dataToEncrypt:(id)arg2 withEncryptedAttributes:(id)arg3 onService:(id)arg4 fromID:(id)arg5 fromIdentity:(id)arg6 toID:(id)arg7 toURIs:(id)arg8 canUseLargePayload:(_Bool)arg9 sendOnePerToken:(_Bool)arg10 allowPartialSendsToSucceed:(_Bool)arg11 registrationProperties:(id)arg12 fakeMessage:(_Bool)arg13 alwaysSkipSelf:(_Bool)arg14 alwaysIncludeSelf:(_Bool)arg15 disallowRefresh:(_Bool)arg16 prioritizedTokenList:(id)arg17 wantsFirewallDonation:(_Bool)arg18 destinationObject:(id)arg19 willSendBlock:(CDUnknownBlockType)arg20 completionBlock:(CDUnknownBlockType)arg21 firstAttemptDate:(id)arg22 fromCoalesceQueue:(_Bool)arg23 withQueryCompletion:(CDUnknownBlockType)arg24;	// IMP=0x00100000001adc28
- (id)_tokenURIForToken:(id)arg1 uri:(id)arg2;	// IMP=0x00100000001adbd9
- (void)_sendAttachmentWithGuid:(id)arg1 service:(id)arg2 topic:(id)arg3 originalCommand:(id)arg4 additionalDictionary:(id)arg5 encryptedData:(id)arg6 toToken:(id)arg7 toID:(id)arg8 fromID:(id)arg9 fromIdentity:(id)arg10 canUseLargePayload:(_Bool)arg11 expirationDate:(id)arg12 destinationObject:(id)arg13 ackBlock:(CDUnknownBlockType)arg14 completionBlock:(CDUnknownBlockType)arg15;	// IMP=0x00100000001ac2f3
- (void)_sendFTFanoutMessage:(id)arg1 service:(id)arg2 fromID:(id)arg3 toURIs:(id)arg4 fromIdentity:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00100000001aaafc
- (void)_sendFTMessage:(id)arg1 service:(id)arg2 fromID:(id)arg3 toID:(id)arg4 toToken:(id)arg5 toSessionToken:(id)arg6 toURIs:(id)arg7 fromIdentity:(id)arg8 completionBlock:(CDUnknownBlockType)arg9;	// IMP=0x00100000001a9552
- (void)_queueMessage:(id)arg1 service:(id)arg2 dataToEncrypt:(id)arg3 withEncryptedAttributes:(id)arg4 fromID:(id)arg5 fromIdentity:(id)arg6 toID:(id)arg7 toURIs:(id)arg8 originallyToURIs:(id)arg9 canUseLargePayload:(_Bool)arg10 sendOnePerToken:(_Bool)arg11 registrationProperties:(id)arg12 fakeMessage:(_Bool)arg13 alwaysSkipSelf:(_Bool)arg14 alwaysIncludeSelf:(_Bool)arg15 disallowRefresh:(_Bool)arg16 prioritizedTokenList:(id)arg17 wantsFirewallDonation:(_Bool)arg18 destinationObject:(id)arg19 willSendBlock:(CDUnknownBlockType)arg20 completionBlock:(CDUnknownBlockType)arg21 fromCoalesceQueue:(_Bool)arg22;	// IMP=0x00100000001a8cb1
- (void)_discardMessage:(id)arg1 forURIs:(id)arg2 service:(id)arg3;	// IMP=0x00100000001a8952
- (void)_emptyMessagesForURIs:(id)arg1 service:(id)arg2;	// IMP=0x00100000001a8658
- (unsigned long long)_destinationCountForURIsAndTokens:(id)arg1;	// IMP=0x00100000001a835f
- (id)encryptionController;	// IMP=0x00100000001a8346
- (id)keyTransparencyVerifier;	// IMP=0x00100000001a832d
- (id)peerIDManager;	// IMP=0x00100000001a8314
- (long long)_maxPayloadSizeForMessage:(id)arg1;	// IMP=0x00100000001a82a6
- (_Bool)_forceAttachmentForMessage:(id)arg1;	// IMP=0x00100000001a8270
- (_Bool)_sendAsAttachmentForMessage:(id)arg1 payloadData:(id)arg2;	// IMP=0x00100000001a7e74
- (void)_handleMessagesForURIs:(id)arg1 originalURIs:(id)arg2 service:(id)arg3 fromID:(id)arg4 fromCoalesceQueue:(_Bool)arg5 withQueryCompletion:(CDUnknownBlockType)arg6;	// IMP=0x00100000001a7636
- (void)_handleAccessoryMessageForID:(id)arg1 msg:(id)arg2 service:(id)arg3 fromID:(id)arg4 fromIdentity:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00100000001a6fc5
- (void)_checkFastDormancy;	// IMP=0x00100000001a6fbf
- (id)_keyForURIs:(id)arg1 service:(id)arg2;	// IMP=0x00100000001a6f47
- (void)_processMessageResponse:(id)arg1 error:(id)arg2 resultCode:(long long)arg3 toURI:(id)arg4 fromURI:(id)arg5 service:(id)arg6 fromIdentity:(id)arg7;	// IMP=0x00100000001a649f
- (long long)effectiveMaxPayloadSizeIfCanUseLargePayload:(_Bool)arg1;	// IMP=0x00100000001a62e4
- (void)handler:(id)arg1 isConnectedChanged:(_Bool)arg2;	// IMP=0x00100000001a5bd0
- (void)addTokenURINegativeCacheClearBlock;	// IMP=0x00100000001a590c
- (_Bool)isSupportedEngramVersionNumber:(long long)arg1;	// IMP=0x00100000001a58e9
- (long long)groupCryptoMinVersionNumber;	// IMP=0x00100000001a57f3
- (_Bool)shouldMinimizeBagCacheTime;	// IMP=0x00100000001a57eb
- (id)awdLogger;	// IMP=0x00100000001a57d2
- (void)dealloc;	// IMP=0x00100000001a5756
- (id)init;	// IMP=0x00100000001a54e6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

