//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSBaseSocketPairConnection, IDSClientChannel, IDSConnectionContext, IDSDAccountController, IDSDGroupStatusNotificationController, IDSDSessionInvitationManager, IDSDSessionKeyValueDelivery, IDSDSessionMessenger, IDSDSessionSharedState, IDSGFTMetricsCollector, IDSGroupEncryptionKeyManager, IDSGroupSessionDataCryptor, IDSGroupStatusNotificationParameters, IDSMultiplexerGroupSessionTransport, IDSQuickRelayAllocator, IDSUTunController, MISSING_TYPE, NSArray, NSData, NSDate, NSMutableArray, NSMutableData, NSMutableDictionary, NSNumber, NSSet, NSString, NSUUID;
@protocol IDSDSessionAvailabilityCheck;

@interface IDSDSession : NSObject
{
    _Bool _assertedRealTimeMode;	// 8 = 0x8
    id <IDSDSessionAvailabilityCheck> _availabilityCheck;	// 16 = 0x10
    NSDate *_awdStartTimestamp;	// 24 = 0x18
    NSString *_awdUniqueId;	// 32 = 0x20
    IDSBaseSocketPairConnection *_baseSocketPairConnection;	// 40 = 0x28
    _Bool _bypassUTun;	// 48 = 0x30
    NSMutableArray *_cachedClientData;	// 56 = 0x38
    long long _cachedNumberOfActiveParticipants;	// 64 = 0x40
    IDSClientChannel *_clientChannel;	// 72 = 0x48
    NSUUID *_clientChannelUUID;	// 80 = 0x50
    unsigned long long _connectionClaimed;	// 88 = 0x58
    IDSConnectionContext *_connectionContext;	// 96 = 0x60
    unsigned int _currentGenerationCounter;	// 104 = 0x68
    _Bool _disallowCellularInterface;	// 108 = 0x6c
    _Bool _disallowWifiInterface;	// 109 = 0x6d
    _Bool _callScreeningMode;	// 110 = 0x6e
    NSDate *_endDate;	// 112 = 0x70
    NSMutableDictionary *_extraConnections;	// 120 = 0x78
    unsigned long long _extraConnectionCount;	// 128 = 0x80
    unsigned int _groupSessionState;	// 136 = 0x88
    IDSGroupStatusNotificationParameters *_groupStatusNotificationParams;	// 144 = 0x90
    int _idsDataChannelClientPID;	// 152 = 0x98
    unsigned long long _initialLinkType;	// 160 = 0xa0
    NSString *_instanceID;	// 168 = 0xa8
    double _inviteRecvTime;	// 176 = 0xb0
    _Bool _joinGroupSessionPending;	// 184 = 0xb8
    CDUnknownBlockType _joinNotificationDeliveryTimeoutBlock;	// 192 = 0xc0
    unsigned char _keyMaterial[60];	// 200 = 0xc8
    long long _linkProtocol;	// 264 = 0x108
    double _membershipChangeEventTime;	// 272 = 0x110
    double _newKeyEventTime;	// 280 = 0x118
    double _summaryReportBaseTime;	// 288 = 0x120
    double _joinSendStartTime;	// 296 = 0x128
    double _joinSendEndTime;	// 304 = 0x130
    double _joinRecvTime;	// 312 = 0x138
    double _joinStartTime;	// 320 = 0x140
    double _clientChannelConnectTime;	// 328 = 0x148
    double _firstMKMReceivedTime;	// 336 = 0x150
    double _firstMKMSentTime;	// 344 = 0x158
    double _firstPacketReceivedTime;	// 352 = 0x160
    struct *_packetBufferArray[8];	// 360 = 0x168
    unsigned long long _preferredAddressFamily;	// 424 = 0x1a8
    _Bool _preferCellularForCallSetup;	// 432 = 0x1b0
    NSNumber *_qrError;	// 440 = 0x1b8
    NSMutableArray *_qrEventsForRTCReports;	// 448 = 0x1c0
    NSNumber *_qrReason;	// 456 = 0x1c8
    unsigned int _reason;	// 464 = 0x1d0
    unsigned short _relayPort;	// 468 = 0x1d4
    _Bool _sessionStartedCalled;	// 470 = 0x1d6
    NSMutableData *_sessionInfoMetaData;	// 472 = 0x1d8
    _Bool _shouldAssertRealTimeMode;	// 480 = 0x1e0
    _Bool _sharedSessionHasJoined;	// 481 = 0x1e1
    _Bool _shouldConnectToQRServer;	// 482 = 0x1e2
    NSData *_skeData;	// 488 = 0x1e8
    int _socketDescriptor;	// 496 = 0x1f0
    NSDate *_startDate;	// 504 = 0x1f8
    _Bool _supressClientNotifications;	// 512 = 0x200
    _Bool _verboseFunctionalLogging;	// 513 = 0x201
    _Bool _verbosePerformanceLogging;	// 514 = 0x202
    _Bool _multiplexerEnabled;	// 515 = 0x203
    IDSMultiplexerGroupSessionTransport *_multiplexerTransport;	// 520 = 0x208
    double _channelDataCachedTime;	// 528 = 0x210
    _Bool _startedAsUPlusOneSession;	// 536 = 0x218
    _Bool _switchedToUPlusMany;	// 537 = 0x219
    _Bool _supportUnauthenticatedUser;	// 538 = 0x21a
    _Bool _isAutoDisconnectSupportedForGFTService;	// 539 = 0x21b
    unsigned int _currentSessionStateCounter;	// 540 = 0x21c
    _Bool _isLightweightParticipant;	// 544 = 0x220
    _Bool _hasReportedReceivedMKM;	// 545 = 0x221
    IDSGroupEncryptionKeyManager *_dataBlobEncryptionManager;	// 552 = 0x228
    IDSGroupSessionDataCryptor *_cryptorForBlobs;	// 560 = 0x230
    NSString *_serviceIdentifier;	// 568 = 0x238
    NSMutableDictionary *_typeToKeyIDToEncryptedData;	// 576 = 0x240
    NSMutableDictionary *_typeToParticipantIDToDecryptedDataBlob;	// 584 = 0x248
    NSMutableDictionary *_keyIDToParticipantID;	// 592 = 0x250
    NSMutableDictionary *_linkIDToLocalRemoteEndpointPair;	// 600 = 0x258
    NSMutableDictionary *_virtualLinkSignatureToDelegatedLinkIDKey;	// 608 = 0x260
    NSMutableDictionary *_virtualLinkSignatureToVirtualConnectionID;	// 616 = 0x268
    NSMutableDictionary *_virtualLinkSignatureToLocalConnectionID;	// 624 = 0x270
    NSMutableDictionary *_virtualLinkSignatureToRemoteConnectionID;	// 632 = 0x278
    _Bool _isServerMaterialExchangeEnabled;	// 640 = 0x280
    NSSet *_serverDesiredKeyMaterialsFromGroupEncryptionController;	// 648 = 0x288
    CDUnknownBlockType _serverDesiredKeyMaterialsSigner;	// 656 = 0x290
    NSData *_encryptedDataBlob;	// 664 = 0x298
    NSData *_encryptedMirageHandshakeBlob;	// 672 = 0x2a0
    _Bool _reportedMKMOverQRArrivalTime;	// 680 = 0x2a8
    double _MKMOverQRQUICTime;	// 688 = 0x2b0
    double _MKMOverPushTime;	// 696 = 0x2b8
    double _MKMOverQRTime;	// 704 = 0x2c0
    NSMutableDictionary *_pendingMaterialInfoByFromID;	// 712 = 0x2c8
    NSMutableDictionary *_participantIDToPushToken;	// 720 = 0x2d0
    NSMutableDictionary *_participantIDToURI;	// 728 = 0x2d8
    double _timeBase;	// 736 = 0x2e0
    struct os_unfair_lock_s _lock;	// 744 = 0x2e8
    CDUnknownBlockType _reliableUnicastRegistrationCompletionBlock;	// 752 = 0x2f0
    CDUnknownBlockType _reliableUnicastLinkUpdateBlock;	// 760 = 0x2f8
    NSString *_clientID;	// 768 = 0x300
    IDSDSessionInvitationManager *_invitationManager;	// 776 = 0x308
    IDSDSessionMessenger *_messenger;	// 784 = 0x310
    IDSGFTMetricsCollector *_metricsCollector;	// 792 = 0x318
    IDSDSessionKeyValueDelivery *_keyValueDelivery;	// 800 = 0x320
    IDSDSessionSharedState *_sharedState;	// 808 = 0x328
    IDSDGroupStatusNotificationController *_groupStatusNotificationController;	// 816 = 0x330
    NSSet *_serverDesiredMaterials;	// 824 = 0x338
    IDSDAccountController *_accountController;	// 832 = 0x340
    IDSUTunController *_utunController;	// 840 = 0x348
    IDSQuickRelayAllocator *_qrAllocator;	// 848 = 0x350
}

- (void).cxx_destruct;	// IMP=0x00100000000bc619
@property(retain, nonatomic) IDSQuickRelayAllocator *qrAllocator; // @synthesize qrAllocator=_qrAllocator;
@property(retain, nonatomic) IDSUTunController *utunController; // @synthesize utunController=_utunController;
@property(retain, nonatomic) IDSDAccountController *accountController; // @synthesize accountController=_accountController;
@property(readonly) NSSet *serverDesiredMaterials; // @synthesize serverDesiredMaterials=_serverDesiredMaterials;
@property(retain, nonatomic) IDSDGroupStatusNotificationController *groupStatusNotificationController; // @synthesize groupStatusNotificationController=_groupStatusNotificationController;
@property(retain, nonatomic) IDSDSessionSharedState *sharedState; // @synthesize sharedState=_sharedState;
@property(readonly, nonatomic) IDSDSessionKeyValueDelivery *keyValueDelivery; // @synthesize keyValueDelivery=_keyValueDelivery;
@property(readonly, nonatomic) IDSGFTMetricsCollector *metricsCollector; // @synthesize metricsCollector=_metricsCollector;
@property(readonly, nonatomic) NSData *encryptedMirageHandshakeBlob; // @synthesize encryptedMirageHandshakeBlob=_encryptedMirageHandshakeBlob;
@property(readonly, nonatomic) NSData *encryptedDataBlob; // @synthesize encryptedDataBlob=_encryptedDataBlob;
@property(nonatomic) _Bool sharedSessionHasJoined; // @synthesize sharedSessionHasJoined=_sharedSessionHasJoined;
@property(nonatomic) _Bool shouldConnectToQRServer; // @synthesize shouldConnectToQRServer=_shouldConnectToQRServer;
@property(retain, nonatomic) NSNumber *qrReason; // @synthesize qrReason=_qrReason;
@property(retain, nonatomic) NSNumber *qrError; // @synthesize qrError=_qrError;
@property(retain, nonatomic) IDSDSessionMessenger *messenger; // @synthesize messenger=_messenger;
@property(retain, nonatomic) IDSDSessionInvitationManager *invitationManager; // @synthesize invitationManager=_invitationManager;
@property(readonly, nonatomic) NSString *instanceID; // @synthesize instanceID=_instanceID;
@property(readonly, nonatomic) unsigned int groupSessionState; // @synthesize groupSessionState=_groupSessionState;
@property(readonly, nonatomic) _Bool disallowWifiInterface; // @synthesize disallowWifiInterface=_disallowWifiInterface;
@property(readonly, nonatomic) _Bool disallowCellularInterface; // @synthesize disallowCellularInterface=_disallowCellularInterface;
@property(retain, nonatomic) NSString *serviceIdentifier; // @synthesize serviceIdentifier=_serviceIdentifier;
@property(retain, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(readonly, nonatomic) NSArray *requiredLackOfCapabilities;
@property(readonly, nonatomic) NSArray *requiredCapabilities;
- (unsigned long long)connectionCountHint;	// IMP=0x00100000000bc348
- (_Bool)_useBTDatagramPipe;	// IMP=0x00100000000bc304
- (void)_setClientType:(long long)arg1;	// IMP=0x00100000000bc2b8
- (_Bool)isLightweightParticipant;	// IMP=0x00100000000bc2ac
- (_Bool)isScreenSharingSession;	// IMP=0x00100000000bc268
- (unsigned int)state;	// IMP=0x00100000000bc224
- (id)clientChannelUUID;	// IMP=0x00100000000bc216
- (id)fromURI;	// IMP=0x00100000000bc1c6
- (id)groupID;	// IMP=0x00100000000bc176
- (id)accountID;	// IMP=0x00100000000bc126
- (id)participantID;	// IMP=0x00100000000bc0d6
- (long long)clientType;	// IMP=0x00100000000bc092
- (_Bool)enableQuickRelay;	// IMP=0x00100000000bc04e
- (_Bool)isInitiator;	// IMP=0x00100000000bc00a
- (id)uniqueID;	// IMP=0x00100000000bbfba
- (id)destinationsLightweightStatus;	// IMP=0x00100000000bbf6a
- (id)destinations;	// IMP=0x00100000000bbf1a
- (void)setReliableUnicastLinkUpdateBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000bbc20
- (void)setSeqRecvStart:(unsigned int)arg1;	// IMP=0x00100000000bbbd6
- (void)setSSRCRecv:(unsigned int)arg1;	// IMP=0x00100000000bbb8c
- (void)setRemoteUsePhoneContinuityLocalMessage:(id)arg1;	// IMP=0x00100000000bbb23
- (void)setRemoteUseCloudPairedControlChannel:(id)arg1;	// IMP=0x00100000000bbaba
- (void)setQuickRelaySessionToken:(id)arg1;	// IMP=0x00100000000bba51
- (void)setInviteTimeout:(long long)arg1;	// IMP=0x00100000000bb9fd
- (void)setRemoteBlob:(id)arg1;	// IMP=0x00100000000bb994
- (void)receivedEndMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000bb909
- (void)receivedSessionMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000bb87e
- (void)receivedCancelMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000bb7f3
- (void)receivedDeclineMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000bb768
- (void)receivedAcceptMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000bb6dd
- (void)sendSessionMessage:(id)arg1 toDestinations:(id)arg2;	// IMP=0x00100000000bb551
- (void)declineInvitationWithData:(id)arg1 forceFromURI:(id)arg2 additionalMessageAttributes:(id)arg3;	// IMP=0x00100000000bb4b4
- (void)declineInvitationWithData:(id)arg1;	// IMP=0x00100000000bb44b
- (void)declineInvitation;	// IMP=0x00100000000bb40e
- (void)acceptInvitationWithData:(id)arg1;	// IMP=0x00100000000bb3a5
- (void)acceptInvitation;	// IMP=0x00100000000bb368
- (void)cancelInvitationWithRemoteEndedReasonOverride:(unsigned int)arg1;	// IMP=0x00100000000bb31e
- (void)cancelInvitationWithData:(id)arg1;	// IMP=0x00100000000bb2b5
- (void)cancelInvitation;	// IMP=0x00100000000bb278
- (void)sendInvitationWithData:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x00100000000bb203
- (void)sendInvitationWithOptions:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x00100000000bb18e
- (void)sendCancelInvitationMessage;	// IMP=0x00100000000bb14a
- (void)invitationDeclined;	// IMP=0x00100000000bb103
- (_Bool)isWithDefaultPairedDevice;	// IMP=0x00100000000bb020
- (void)didSessionReinitiated;	// IMP=0x00100000000bb01a
- (void)_receivedReinitiateBringupAckMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000ba713
- (void)_receivedReinitiateBringupMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000b9f47
- (void)_receivedReinitiateTeardownAckMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000b92a4
- (void)_receivedReinitiateTeardownMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000b8638
- (void)_receivedReinitiateRequestMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000b83c8
- (void)receivedReinitiateMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000b7fba
- (void)reinitiate;	// IMP=0x00100000000b6d59
- (void)registerMultiplexerTransport;	// IMP=0x00100000000b694d
- (void)getActiveParticipants:(id)arg1 pushTokenForParticipants:(id)arg2 isLightweightParticipant:(_Bool)arg3;	// IMP=0x00100000000b62ba
- (id)_createGroupSessionActiveParticipantsFromParticipants:(id)arg1 pushTokenForParticipants:(id)arg2;	// IMP=0x00100000000b5e41
- (void)_updateActiveLightweightParticipants:(id)arg1;	// IMP=0x00100000000b595b
- (void)_updateActiveParticipants:(id)arg1;	// IMP=0x00100000000b5062
- (void)processAllocationErrorStatus:(int)arg1 errorCode:(int)arg2;	// IMP=0x00100000000b4e08
- (void)qrAllocatorDidReceiveAllocateResponse:(id)arg1;	// IMP=0x00100000000b48c1
- (void)onURI2ParticipantIDMappingChange:(id)arg1 allocateResponse:(id)arg2;	// IMP=0x00100000000b44fa
- (void)onParticipantID2PushTokenMappingChange:(id)arg1;	// IMP=0x00100000000b3e5d
- (unsigned long long)participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x00100000000b3a82
- (void)getParticipantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x00100000000b35cc
- (void)createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x00100000000b3116
- (void)requestMaterialsForParticipantIDs:(id)arg1 materialType:(int)arg2;	// IMP=0x00100000000b2ccc
- (MISSING_TYPE *)requestEncryptionKeyForParticipantIDs: /* Error: Ran out of types for this method. */;	// IMP=0x00100000000b28a6
- (void)hasOutdatedSKI:(id)arg1;	// IMP=0x00100000000b2746
- (void)sendAllocationRequest:(id)arg1;	// IMP=0x00100000000b2105
- (void)recvMembershipChangeEventWithReason:(unsigned char)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000b1f55
- (void)InvalidateStableKeyMaterialInFrameworkCache:(id)arg1;	// IMP=0x00100000000b1d46
- (void)recvStableKeyMaterialForFrameworkCache:(id)arg1;	// IMP=0x00100000000b1660
- (void)rejectedKeyRecoveryRequestFromURI:(id)arg1 reason:(unsigned int)arg2;	// IMP=0x00100000000b121a
- (void)_decryptReceivedDataBlobsUsingSKMs;	// IMP=0x00100000000b01e9
- (void)receiveAndDecryptEncryptedDataBlobs:(id)arg1;	// IMP=0x00100000000afaa2
- (void)_sendClientDecryptedDatabBlobs:(id)arg1 type:(int)arg2 forParticipant:(id)arg3;	// IMP=0x00100000000af697
- (void)invalidateKeyMaterialByKeyIndexes:(id)arg1;	// IMP=0x00100000000af618
- (void)didSendKeyMaterial:(id)arg1 duration:(double)arg2;	// IMP=0x00100000000af594
- (void)recvKeyMaterial:(id)arg1;	// IMP=0x00100000000af185
- (void)didCreateMKM:(id)arg1;	// IMP=0x00100000000af132
- (void)updateServerDesiredKeyMaterials;	// IMP=0x00100000000aeec2
- (id)serverDesiredKeyMaterials;	// IMP=0x00100000000aee7a
- (id)getDataByKey:(unsigned int)arg1;	// IMP=0x00100000000aee2b
- (void)requestKeyValueDeliveryDataForKey:(unsigned int)arg1 participantID:(unsigned long long)arg2;	// IMP=0x00100000000aeb79
- (void)updateServerDesiredKeyValueDeliveryMaterialsNeeded;	// IMP=0x00100000000ae9bb
- (id)getDesiredMaterialSetForEncryptedData;	// IMP=0x00100000000ae937
- (void)setServerDesiredKeyMaterials:(id)arg1 signer:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ae7ac
- (void)sendKeyMaterialMessageDataOverQR:(id)arg1 toDestination:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000000ae382
- (void)sendKeyMaterialMessage:(id)arg1 toDestination:(id)arg2;	// IMP=0x00100000000ad89b
- (void)leaveGroupSession:(id)arg1 options:(id)arg2;	// IMP=0x00100000000acd2c
- (void)receiveJoinNotificationFromAParticipant;	// IMP=0x00100000000acbe7
- (void)joinWithOptions:(id)arg1 messageContext:(id)arg2;	// IMP=0x00100000000aaa4c
- (void)joinWithOptions:(id)arg1;	// IMP=0x00100000000aaa38
- (id)_checkIfPushMessageSizeGreaterThanMaxLimit:(id)arg1 maxLimit:(unsigned long long)arg2;	// IMP=0x00100000000aa705
- (void)setGroupStreamInfo:(id)arg1 sessionInfo:(id)arg2;	// IMP=0x00100000000a9d8a
- (void)_sendConnectedLinkInfoToAVC;	// IMP=0x00100000000a9cb1
- (void)updateParticipantType:(unsigned short)arg1 members:(id)arg2 triggeredLocally:(_Bool)arg3 withContext:(id)arg4 lightweightStatusDict:(id)arg5;	// IMP=0x00100000000a8bef
- (void)updateParticipantData:(id)arg1 withContext:(id)arg2;	// IMP=0x00100000000a889e
- (void)removeParticipantIDs:(id)arg1;	// IMP=0x00100000000a8231
- (void)manageDesignatedMembers:(id)arg1 withType:(unsigned short)arg2;	// IMP=0x00100000000a7b70
- (void)updateMembers:(id)arg1 withContext:(id)arg2 messagingCapabilities:(id)arg3 triggeredLocally:(_Bool)arg4 lightweightStatusDict:(id)arg5;	// IMP=0x00100000000a4e55
- (_Bool)destinationsContainFromURI:(id)arg1;	// IMP=0x00100000000a4a1f
- (void)link:(id)arg1 didReceiveSessionStats:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 success:(_Bool)arg5;	// IMP=0x00100000000a4a19
- (void)link:(id)arg1 didReceiveSessionInfo:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 status:(unsigned int)arg5;	// IMP=0x00100000000a4a13
- (void)_sendSessionInfoResponseErrorToClient:(unsigned int)arg1;	// IMP=0x00100000000a4986
- (void)terminateCallDueToIdleClientForLink:(id)arg1;	// IMP=0x00100000000a4980
- (void)link:(id)arg1 didReceiveDebugDataForClient:(id)arg2 dataType:(unsigned char)arg3;	// IMP=0x00100000000a497a
- (void)link:(id)arg1 didReceiveMembershipChangedInformation:(unsigned char)arg2;	// IMP=0x00100000000a4974
- (void)link:(id)arg1 didReceiveEncryptionInformation:(id)arg2;	// IMP=0x00100000000a496e
- (void)link:(id)arg1 didReceiveErrorIndicationWithCode:(unsigned int)arg2;	// IMP=0x00100000000a46da
- (void)link:(id)arg1 didReceiveEncryptedDataBlobs:(id)arg2;	// IMP=0x00100000000a4545
- (void)didReceiveBlockedIndicationForLink:(id)arg1 reason:(unsigned int)arg2;	// IMP=0x00100000000a453f
- (void)link:(id)arg1 didReceiveMappedParticipantsDict:(id)arg2 forLinkID:(BOOL)arg3;	// IMP=0x00100000000a4197
- (void)_sendParticipantMappingUpdateToClient:(id)arg1 forLinkID:(BOOL)arg2 shouldReplace:(_Bool)arg3;	// IMP=0x00100000000a4089
- (id)_breakDictionaryIntoMultipleChunks:(id)arg1 chunkSize:(int)arg2;	// IMP=0x00100000000a3d41
- (id)_createOneWayParticipantDictionaryFromMappedParticipantsDict:(id)arg1;	// IMP=0x00100000000a3bf2
- (void)link:(id)arg1 didReceivePluginDisconnect:(id)arg2;	// IMP=0x00100000000a3aec
- (void)link:(id)arg1 didReceiveRequestToPurgeRegistration:(id)arg2;	// IMP=0x00100000000a3936
- (void)link:(id)arg1 didReceivePluginUnregistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x00100000000a3930
- (void)link:(id)arg1 didReceivePluginRegistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x00100000000a392a
- (void)link:(id)arg1 didReceiveSessionStateCounter:(unsigned int)arg2;	// IMP=0x00100000000a3924
- (void)link:(id)arg1 didReceiveParticipantUpdate:(id)arg2 status:(unsigned short)arg3;	// IMP=0x00100000000a391e
- (void)link:(id)arg1 didAddQREvent:(id)arg2;	// IMP=0x00100000000a3918
- (void)link:(id)arg1 didDefaultUnderlyingLinkChangeSucceeded:(_Bool)arg2 currentDefaultLinkID:(BOOL)arg3;	// IMP=0x00100000000a3912
- (void)link:(id)arg1 didDisconnectUnderlyingLinkID:(BOOL)arg2 linkUUID:(id)arg3 reason:(unsigned char)arg4;	// IMP=0x00100000000a390c
- (void)link:(id)arg1 didGetLinkProbingStatus:(id)arg2;	// IMP=0x00100000000a3906
- (void)link:(id)arg1 didSoMaskChange:(unsigned int)arg2;	// IMP=0x00100000000a3900
- (void)link:(id)arg1 didCellularMTUChange:(unsigned short)arg2;	// IMP=0x00100000000a38fa
- (void)link:(id)arg1 didRATChange:(unsigned char)arg2;	// IMP=0x00100000000a38f4
- (void)link:(id)arg1 didCellularNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x00100000000a38ee
- (void)link:(id)arg1 didWiFiNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x00100000000a38e8
- (void)link:(id)arg1 didReceiveChildConnections:(id)arg2 forLinkID:(BOOL)arg3;	// IMP=0x00100000000a3163
- (id)getLinkIDToLocalRemoteEndpointPairDictionary;	// IMP=0x00100000000a3101
- (void)link:(id)arg1 didReceiveReliableUnicastServerMaterial:(id)arg2;	// IMP=0x00100000000a2b4f
- (void)link:(id)arg1 didConnectUnderlyingLink:(BOOL)arg2 linkUUID:(id)arg3 localAttributes:(id)arg4 remoteAttributes:(id)arg5;	// IMP=0x00100000000a0dfa
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_a8d8a807 *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x00100000000a0df2
- (void)link:(id)arg1 didReceiveReportEvent:(id)arg2;	// IMP=0x00100000000a0dec
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00100000000a0b5a
- (void)link:(id)arg1 didReceiveMaterialInfo:(id)arg2 material:(id)arg3;	// IMP=0x001000000009c191
- (void)materialInfoError:(id)arg1;	// IMP=0x001000000009c11d
- (_Bool)shouldVerifySignatureForMaterialType:(int)arg1;	// IMP=0x001000000009c109
- (void)link:(id)arg1 didReceiveKeyMaterialMessageData:(id)arg2 fromParticipantIDs:(id)arg3 toParticipantID:(id)arg4;	// IMP=0x001000000009c103
- (void)link:(id)arg1 didReceiveSKEData:(id)arg2;	// IMP=0x001000000009c0fd
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x001000000009bf98
- (void)_sendQREventToAVC:(id)arg1;	// IMP=0x001000000009bc9b
- (void)addQREventForRTCReport:(id)arg1;	// IMP=0x001000000009b981
- (void)_setLinkProtocol:(id)arg1;	// IMP=0x001000000009b549
- (void)connection:(id)arg1 didReceiveData:(id)arg2;	// IMP=0x001000000009aece
- (void)connection:(id)arg1 receivedData:(id)arg2;	// IMP=0x001000000009a71d
- (void)handleAVConferenceError:(id)arg1;	// IMP=0x001000000009a3bf
- (void)connectionDidStop:(id)arg1 error:(id)arg2;	// IMP=0x001000000009a119
- (void)connection:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x0010000000099cb7
- (void)setCallScreeningModeDisabled;	// IMP=0x0010000000099ab0
- (void)setRequiredCapabilities:(id)arg1 requiredLackOfCapabilities:(id)arg2;	// IMP=0x0010000000098189
- (void)setPreferences:(id)arg1;	// IMP=0x0010000000097e38
- (void)setMuted:(_Bool)arg1;	// IMP=0x0010000000097af1
- (void)setAudioEnabled:(_Bool)arg1;	// IMP=0x00100000000977aa
- (id)connectDuration;	// IMP=0x001000000009766f
- (id)sessionDuration;	// IMP=0x00100000000975dc
- (void)endSessionWithReason:(unsigned int)arg1;	// IMP=0x001000000009750a
- (void)_notifyClientsSessionStopped;	// IMP=0x0010000000096e05
- (void)_cleanupSocketPairConnection;	// IMP=0x0010000000096dd3
- (void)_checkAndUnassertRealTimeMode;	// IMP=0x0010000000096da4
- (id)_acceptedDeviceToken;	// IMP=0x0010000000096ae2
- (id)_acceptedDeviceUniqueID;	// IMP=0x00100000000966bb
- (id)_socketOptionsForDevice:(id)arg1 uniqueID:(id)arg2 pushToken:(id)arg3 connectionSuffix:(id)arg4;	// IMP=0x0010000000095b65
- (void)_closeSocketToDevice:(id)arg1;	// IMP=0x00100000000953e3
- (void)_resetPreferences:(id)arg1;	// IMP=0x00100000000950fc
- (void)_endSession;	// IMP=0x0010000000093b6f
- (void)endSessionWithData:(id)arg1;	// IMP=0x0010000000093982
- (void)_sendSessionEndWithData:(id)arg1;	// IMP=0x0010000000093447
- (void)endSession;	// IMP=0x00100000000933e1
- (void)reconnectSession;	// IMP=0x0010000000093269
- (void)_cleanupQuickRelaySession;	// IMP=0x0010000000092feb
- (void)cleanupSessionWithCleanStatus:(_Bool)arg1;	// IMP=0x0010000000091e4d
- (void)startListeningOnClientSocket:(int)arg1 isRawSocket:(_Bool)arg2;	// IMP=0x0010000000091b1d
- (void)runConnectivityCheckWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000919fb
- (void)networkingIsAvailable:(CDUnknownBlockType)arg1;	// IMP=0x00100000000919df
- (unsigned int)globalLinkErrorToSessionEndReason:(long long)arg1;	// IMP=0x00100000000919c4
- (_Bool)shouldReportUPlusOneKey;	// IMP=0x00100000000919a7
- (id)getAppID;	// IMP=0x0010000000091957
- (id)getFromService;	// IMP=0x0010000000091875
- (id)getCallerCert;	// IMP=0x0010000000091765
- (void)setHasPendingAllocation:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000000915dc
- (void)setAcceptedRelaySession:(id)arg1;	// IMP=0x00100000000910ab
- (void)_setInitialLinkType:(unsigned long long)arg1;	// IMP=0x0010000000090c63
- (void)checkAndCallSessionStart;	// IMP=0x0010000000090b86
- (void)_sessionStartWithSocketDescriptor:(int)arg1;	// IMP=0x001000000009061d
- (_Bool)_shouldUseIPsecLink;	// IMP=0x00100000000905bd
- (void)_broadcastSessionStartWithSocket:(int)arg1;	// IMP=0x0010000000090389
- (void)startQRSession;	// IMP=0x0010000000090372
- (void)openSocketToDevice:(id)arg1;	// IMP=0x001000000008efa9
- (_Bool)shouldAllocateForInvitee;	// IMP=0x001000000008eef2
- (double)_serverSpecifiedJoinNotificationDeliveryTimeout;	// IMP=0x001000000008ee45
- (void)_noteJoinNotificationDidDeliverWithSuccess:(_Bool)arg1;	// IMP=0x001000000008e90d
- (void)_noteJoinNotificationWillSend;	// IMP=0x001000000008deb1
- (void)connectQRServer:(id)arg1 withPreferredLocalInterface:(int)arg2;	// IMP=0x0010000000089748
- (id)formAndEncryptDataBlob:(id)arg1 type:(int)arg2;	// IMP=0x001000000008947d
- (void)updateRelevantEncryptedDataBlob;	// IMP=0x0010000000089346
- (void)_sendLinkSelectionPreference:(id)arg1 linkScore:(id)arg2 ipPreference:(id)arg3 uplinkNackDisabled:(id)arg4;	// IMP=0x0010000000089321
- (void)didReceiveCurrentCellularSignalRaw:(int)arg1 signalStrength:(int)arg2 signalGrade:(int)arg3;	// IMP=0x001000000008931b
- (id)_getNewLinkOptionsForActiveParticipantInfoRequest;	// IMP=0x0010000000088d7f
- (void)_sendingOfflineActiveParticipantInfoRequest:(id)arg1;	// IMP=0x001000000008862c
- (void)unregisterPluginWithOptions:(id)arg1 messageContext:(id)arg2;	// IMP=0x00100000000881cd
- (void)registerPluginWithOptions:(id)arg1 messageContext:(id)arg2;	// IMP=0x0010000000087d6e
- (void)requestURIsForParticipantIDs:(id)arg1 withRequestID:(id)arg2;	// IMP=0x001000000008786e
- (void)requestSessionInfoWithOptions:(id)arg1;	// IMP=0x0010000000085b21
- (void)_connectQRDirectlyToClientChannel:(id)arg1;	// IMP=0x00100000000847f5
- (id)_extractFieldBytesFromMetadata:(const void *)arg1 ofSize:(unsigned int)arg2 packetBuffer:(CDStruct_a8d8a807 *)arg3;	// IMP=0x001000000007ae38
- (void)_connectSocketDescriptor:(int)arg1 toClientChannel:(id)arg2;	// IMP=0x0010000000079343
- (void)_checkAndRunClientChannelTests:(id)arg1;	// IMP=0x0010000000078b18
- (_Bool)_checkAndSendCachedDataForClient:(id)arg1;	// IMP=0x0010000000078636
- (void)writeToClientChannel:(id)arg1 packetBuffer:(CDStruct_a8d8a807 *)arg2 metaData:(const char *)arg3 metadataSize:(unsigned int)arg4;	// IMP=0x0010000000077369
- (void)_invalidateClientChannel:(id)arg1;	// IMP=0x00100000000771cb
- (void)unregisterClientChannel;	// IMP=0x0010000000077102
- (void)registerClientChannel;	// IMP=0x00100000000763b9
- (id)_getURIFromParticipantIDNumber:(id)arg1;	// IMP=0x00100000000761d7
- (id)_getPushTokenFromParticipantIDNumber:(id)arg1;	// IMP=0x0010000000076009
- (id)_getPushTokenFromParticipantID:(unsigned long long)arg1;	// IMP=0x0010000000075fa3
- (id)_getPushTokensFromParticipantIDArray:(id)arg1 useNullPlaceholder:(_Bool)arg2;	// IMP=0x0010000000075d5d
- (void)_lightweightParticipantSync:(unsigned char)arg1;	// IMP=0x0010000000075b87
- (void)mapMKIFromMaterial:(id)arg1 token:(id)arg2;	// IMP=0x0010000000075af2
- (void)reportSendRatchetedMKMToAVCForParticipantID:(unsigned long long)arg1 mki:(id)arg2;	// IMP=0x0010000000075a1c
- (void)reportMKMReceivedOverQRFromToken:(id)arg1 material:(id)arg2;	// IMP=0x001000000007592e
- (void)reportMKMReceivedOverPushViaCacheForParticipantID:(unsigned long long)arg1 material:(id)arg2;	// IMP=0x0010000000075809
- (void)reportMKMReceivedOverPushFromToken:(id)arg1 material:(id)arg2;	// IMP=0x001000000007571b
- (void)reportPreKeyReceivedOverPushFromToken:(id)arg1;	// IMP=0x00100000000756d7
- (void)reportJoinReceivedOverPushFromToken:(id)arg1;	// IMP=0x00100000000756be
- (void)reportFirstMKMReceivedFromQR:(double)arg1;	// IMP=0x00100000000756b0
- (void)reportFirstMKMReceivedFromPush:(double)arg1;	// IMP=0x00100000000751d9
- (void)_cleanupSessionConnection;	// IMP=0x0010000000074dfc
- (void)_reportRTC;	// IMP=0x0010000000074459
- (id)buildRTCSummaryReport;	// IMP=0x001000000007414e
- (id)rtcNormalizeTime:(double)arg1;	// IMP=0x0010000000074115
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) char *keyMaterial;
- (void)dealloc;	// IMP=0x0000000000073793
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3 availabilityCheck:(id)arg4 accountController:(id)arg5 utunController:(id)arg6;	// IMP=0x00100000000701a0
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3 availabilityCheck:(id)arg4;	// IMP=0x001000000007009a
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3;	// IMP=0x001000000006fffb
- (void)_generateKeys:(id)arg1;	// IMP=0x001000000006f785
- (long long)_loggingFlags;	// IMP=0x001000000006f736
- (void)_selectDefaultMic;	// IMP=0x001000000006f730
- (void)submitAWDMetricsForIDSSessionWithEndReason:(unsigned int)arg1;	// IMP=0x001000000029523a
- (void)submitAWDMetricsForIDSSessionCompleted;	// IMP=0x0010000000294df7
- (void)submitAWDMetricsForIDSSessionReinitiateConnected;	// IMP=0x0010000000294d0c
- (void)submitAWDMetricsForIDSSessionReinitiateStarted;	// IMP=0x0010000000294c21
- (void)submitAWDMetricsForIDSSessionReinitiateRequested;	// IMP=0x0010000000294b36
- (void)submitAWDMetricsForIDSSessionConnected;	// IMP=0x0010000000294a4b
- (void)submitAWDMetricsForIDSSessionAcceptReceived;	// IMP=0x0010000000294960
- (void)submitAWDMetricsForIDSSessionAcceptSent;	// IMP=0x0010000000294875
- (void)submitAWDMetricsForIDSSessionDeclineReceived;	// IMP=0x001000000029478a
- (void)submitAWDMetricsForIDSSessionDeclineSent;	// IMP=0x001000000029469f
- (void)submitAWDMetricsForIDSSessionCancelReceived;	// IMP=0x00100000002945b4
- (void)submitAWDMetricsForIDSSessionCancelSentWithRemoteEndReason:(unsigned int)arg1 numberOfRecipients:(id)arg2;	// IMP=0x001000000029449e
- (void)submitAWDMetricsForIDSSessionInvitationReceived;	// IMP=0x00100000002943b3
- (void)submitAWDMetricsForIDSSessionInvitationSentWithNumberOfRecipients:(id)arg1;	// IMP=0x00100000002942ae
- (void)submitAWDMetricsForIDSSessionStarted;	// IMP=0x0010000000293ffc
- (_Bool)_shouldSubmitMetricsBasedOnDate:(id)arg1 isInitiator:(_Bool)arg2;	// IMP=0x0010000000293eb6
- (_Bool)_shouldSubmitMetricsForThisSession;	// IMP=0x0010000000293e12

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

