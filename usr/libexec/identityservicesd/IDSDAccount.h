//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CUTDeferredTaskQueue, IDSGameCenterData, IDSRegistration, IDSRegistrationPushHandler, IDSServiceProperties, MISSING_TYPE, NSArray, NSDate, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;

@interface IDSDAccount : NSObject
{
    NSMutableDictionary *_accountInfo;	// 8 = 0x8
    IDSRegistration *_registrationInfo;	// 16 = 0x10
    IDSServiceProperties *_service;	// 24 = 0x18
    NSString *_uniqueID;	// 32 = 0x20
    NSMutableArray *_setupHandlers;	// 40 = 0x28
    NSHashTable *_registrationListeners;	// 48 = 0x30
    IDSRegistrationPushHandler *_pushHandler;	// 56 = 0x38
    NSDate *_dateOfLastHandlesCheck;	// 64 = 0x40
    NSMutableSet *_localServices;	// 72 = 0x48
    unsigned int _disabledAutomatically:1;	// 80 = 0x50
    unsigned int _duringInit:1;	// 80 = 0x50
    unsigned int _shouldRequeryHandles:1;	// 80 = 0x50
    unsigned int _issuingDependentCheck:1;	// 80 = 0x50
    unsigned int _issuingHandlesCheck:1;	// 80 = 0x50
    unsigned int _pendingDependentCheck:1;	// 80 = 0x50
    unsigned int _pendingHandlesCheck:1;	// 80 = 0x50
    unsigned int _pendingReIdentify:1;	// 80 = 0x50
    unsigned int _pendingReRegister:1;	// 81 = 0x51
    unsigned int _isRegistrationActive:1;	// 81 = 0x51
    unsigned int _pendingAccountInfoBroadcast:1;	// 81 = 0x51
    unsigned int _isBeingRemoved:1;	// 81 = 0x51
    CUTDeferredTaskQueue *_broadcastAccountInfoChangedTask;	// 88 = 0x58
}

+ (_Bool)dependentRegistration:(id)arg1 hasDependentRegistrationWithURI:(id)arg2 token:(id)arg3;	// IMP=0x00200000001729fc
+ (void)dependentRegistration:(id)arg1 findDeviceUniqueID:(id *)arg2 btID:(id *)arg3 forURI:(id)arg4 token:(id)arg5 supportsLiveDelivery:(_Bool *)arg6;	// IMP=0x001000000017201c
+ (void)sendMessageWithSendParameters:(id)arg1 service:(id)arg2 threadContext:(id)arg3 willSendBlock:(CDUnknownBlockType)arg4 progressBlock:(CDUnknownBlockType)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00100000002ea29c
+ (void)_sendLocallyWithSendParameters:(id)arg1 service:(id)arg2 uriToLocalDestination:(id)arg3 data:(id)arg4 protobuf:(id)arg5 threadContext:(id)arg6 progressBlock:(CDUnknownBlockType)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00100000002e71ff
+ (void)_splitDestinations:(id)arg1 intoLocalDestinations:(id *)arg2 remoteDestinations:(id *)arg3 threadContext:(id)arg4 sendParameters:(id)arg5;	// IMP=0x00100000002e4643
- (void).cxx_destruct;	// IMP=0x001000000017bb2a
@property(readonly, nonatomic) CUTDeferredTaskQueue *broadcastAccountInfoChangedTask; // @synthesize broadcastAccountInfoChangedTask=_broadcastAccountInfoChangedTask;
@property(nonatomic) _Bool isBeingRemoved; // @synthesize isBeingRemoved=_isBeingRemoved;
@property(readonly, nonatomic) _Bool issuingDependentCheck; // @synthesize issuingDependentCheck=_issuingDependentCheck;
@property(nonatomic) _Bool pendingDependentCheck; // @synthesize pendingDependentCheck=_pendingDependentCheck;
@property(nonatomic) _Bool wasDisabledAutomatically; // @synthesize wasDisabledAutomatically=_disabledAutomatically;
@property(readonly, nonatomic) NSDictionary *accountInfo; // @synthesize accountInfo=_accountInfo;
@property(readonly, nonatomic) IDSRegistration *registration; // @synthesize registration=_registrationInfo;
- (void)didUpdateProtocolForPairedDevice:(id)arg1;	// IMP=0x001000000017b7be
- (void)didUpdatePairedDevice:(id)arg1;	// IMP=0x001000000017b48b
- (void)didRemovePairedDevice:(id)arg1;	// IMP=0x001000000017b135
- (void)didAddPairedDevice:(id)arg1;	// IMP=0x001000000017b0b0
- (void)_notifyDelegatesAddedLocalDevice:(id)arg1;	// IMP=0x001000000017ad13
- (void)_notifyClientDelegatesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000017abf1
@property(readonly, retain, nonatomic) NSDictionary *accountSetupInfo;
- (id)smallDescription;	// IMP=0x001000000017a945
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSArray *linkedAccounts;
- (id)adHocAccounts;	// IMP=0x0010000000179cee
- (_Bool)forEachAdhocAccount:(CDUnknownBlockType)arg1;	// IMP=0x0010000000179393
- (id)accountAndAdHocAccounts;	// IMP=0x001000000017931d
- (void)_updateAccountWithAccountInfo:(id)arg1;	// IMP=0x0010000000178add
- (void)writeAccountDefaults:(id)arg1;	// IMP=0x0010000000178ac9
- (void)_writeAccountDefaults:(id)arg1 force:(_Bool)arg2 interestedSubservices:(id)arg3;	// IMP=0x0010000000177fb9
- (void)_writeAccountDefaults:(id)arg1 force:(_Bool)arg2;	// IMP=0x0010000000177fa4
- (void)_broadcastAccountInfoChanged;	// IMP=0x0010000000177e0f
- (void)_notifyListenersWithChanges:(id)arg1;	// IMP=0x0010000000176dc6
- (void)_broadcastAccountMessageBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000176c88
- (_Bool)isAdHocAccount;	// IMP=0x0010000000176c0c
- (id)primaryServiceName;	// IMP=0x0010000000176b6c
@property(readonly, nonatomic) IDSRegistration *primaryRegistration;
- (id)primaryAccountUniqueID;	// IMP=0x0010000000176a32
- (id)primaryAccount;	// IMP=0x0010000000176996
@property(readonly, nonatomic) long long lastRegistrationFailureError;
- (id)lastRegistrationFailureDate;	// IMP=0x0010000000176917
@property(readonly, nonatomic) NSDate *lastRegistrationSuccessDate;
@property(readonly, nonatomic) NSDate *lastGDRDate;
- (id)dependentRegistrationMatchingUUID:(id)arg1;	// IMP=0x00100000001768c3
- (id)dependentRegistrationMatchingUUID:(id)arg1 includingTinker:(_Bool)arg2;	// IMP=0x00100000001765f4
@property(readonly, nonatomic) NSArray *registeredDevices;
@property(readonly, nonatomic) NSArray *dependentRegistrationsIncludingCurrentDevice;
- (id)dependentRegistrationsIncludingTinker:(_Bool)arg1;	// IMP=0x0010000000176404
@property(readonly, nonatomic) NSArray *dependentRegistrations;
- (id)_dependentRegistrationsForDefaultPairedDevice:(_Bool)arg1 includingCurrentDevice:(_Bool)arg2 includingTinker:(_Bool)arg3;	// IMP=0x00100000001749eb
- (id)_dependentRegistrationsForDefaultPairedDevice:(_Bool)arg1 includingTinker:(_Bool)arg2;	// IMP=0x0010000000174995
@property(readonly, nonatomic) IDSDAccount *superAccount;
@property(readonly, nonatomic) NSDictionary *defaultPairedDependentRegistration;
- (id)defaultPairedDependentRegistrationIncludingTinker:(_Bool)arg1;	// IMP=0x0010000000174332
- (id)_fromIDFromDevice:(id)arg1 withCBUUID:(id)arg2 uniqueID:(id)arg3;	// IMP=0x0010000000173f1e
- (id)fromIDForCBUUID:(id)arg1 deviceID:(id)arg2;	// IMP=0x00100000001731c1
- (_Bool)hasDependentRegistrationWithURI:(id)arg1 token:(id)arg2;	// IMP=0x001000000017304f
- (void)findDeviceUniqueID:(id *)arg1 btID:(id *)arg2 forURI:(id)arg3 token:(id)arg4 supportsLiveDelivery:(_Bool *)arg5;	// IMP=0x0010000000172721
@property(readonly, nonatomic) _Bool isUsableForSending;
@property(readonly, nonatomic) _Bool hasEverRegistered;
- (id)_certForFromURI:(id)arg1;	// IMP=0x0010000000171db7
- (_Bool)hasVettedAliasURI:(id)arg1;	// IMP=0x0010000000171d41
- (_Bool)hasAliasURI:(id)arg1;	// IMP=0x0010000000171ca0
@property(readonly, nonatomic) NSArray *uris;
@property(readonly, nonatomic) NSArray *aliasStrings;
- (void)setupAccountWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000171645
@property(readonly, nonatomic) _Bool isEnabled;
@property(readonly, nonatomic) _Bool shouldRegisterUsingDSHandle;
@property(readonly, nonatomic) _Bool shouldAutoRegisterAllHandles;
@property(readonly, nonatomic) _Bool isRegistered;
- (void)authenticationChanged;	// IMP=0x00100000001714f4
@property(retain, nonatomic) NSDate *expirationDate;
@property(nonatomic) _Bool isTemporary;
@property(readonly, nonatomic) int manateeRetryCount;
@property(readonly, nonatomic) _Bool shouldRegisterOnManateeAvailability;
@property(readonly, nonatomic) long long registrationError;
@property(readonly, nonatomic) int registrationErrorReason;
@property(readonly, nonatomic) int registrationStatus;
@property(retain, nonatomic) NSString *loginID;
@property(readonly, nonatomic) NSString *dsID;
@property(readonly, nonatomic) NSString *dsHandle;
@property(readonly, nonatomic) int accountType;
@property(nonatomic) _Bool isUserDisabled;
- (void)clearDisplayName;	// IMP=0x0010000000170856
@property(retain, nonatomic) NSString *displayName;
@property(retain, nonatomic) IDSGameCenterData *gameCenterData;
@property(retain, nonatomic) NSString *userUniqueIdentifier;
@property(readonly, nonatomic) NSString *uniqueID;
@property(readonly, nonatomic) IDSServiceProperties *service;
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00100000001700bc
- (void)dealloc;	// IMP=0x001000000016fd6f
- (void)cleanupAccount;	// IMP=0x001000000016fd59
- (id)initWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5;	// IMP=0x001000000016fd37
- (id)initAdHocAccountWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5 primaryAccount:(id)arg6;	// IMP=0x001000000016fd0c
- (id)_initWithLoginID:(id)arg1 service:(id)arg2 uniqueID:(id)arg3 accountType:(int)arg4 accountConfig:(id)arg5 primaryAccount:(id)arg6 isAdHocAccount:(_Bool)arg7;	// IMP=0x001000000016f702
- (id)initWithDictionary:(id)arg1 service:(id)arg2 uniqueID:(id)arg3;	// IMP=0x001000000016f08f
- (void)_setupAccount;	// IMP=0x001000000016e53f
- (void)_resetVariables;	// IMP=0x001000000016e531
- (void)_cleanupAccount;	// IMP=0x001000000016cecc
- (void)_notifyRegistrationListenersAccountDidUpdateRegisteredDevices;	// IMP=0x00100000001fa71a
- (void)removeRegistrationListener:(id)arg1;	// IMP=0x00100000001fa6b4
- (void)addRegistrationListener:(id)arg1;	// IMP=0x00100000001fa637
- (void)systemDidLeaveFirstDataProtectionLock;	// IMP=0x00100000001fa382
- (id)pushHandler;	// IMP=0x00100000001fa36a
- (id)serviceType;	// IMP=0x00100000001fa323
- (void)reportSpamMessage:(id)arg1 toURI:(id)arg2;	// IMP=0x00100000001fa273
- (void)reportAction:(long long)arg1 ofTempURI:(id)arg2 fromURI:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x00100000001fa1bc
- (void)reportiMessageUnknownSender:(id)arg1 messageID:(id)arg2 isBlackholed:(_Bool)arg3 isJunked:(_Bool)arg4 messageServerTimestamp:(id)arg5 toURI:(id)arg6;	// IMP=0x00100000001fa0c2
- (void)reportSpamWithMessages:(id)arg1 toURI:(id)arg2;	// IMP=0x00100000001fa025
- (long long)validationStatusForAlias:(id)arg1;	// IMP=0x00100000001fa013
- (id)aliases;	// IMP=0x00100000001fa001
- (double)_maxSelectedButVettedGracePeriod;	// IMP=0x00100000001f9e58
- (id)_allUserIntentWithDefaultReason:(_Bool)arg1;	// IMP=0x00100000001f9713
- (void)_stopTrackingUserIntentOfAlias:(id)arg1;	// IMP=0x00100000001f94ef
- (void)_setUserIntentState:(unsigned char)arg1 forAlias:(id)arg2 withReason:(unsigned char)arg3;	// IMP=0x00100000001f901e
- (id)_userIntentDictForAlias:(id)arg1;	// IMP=0x00100000001f8d06
- (unsigned char)unselectReasonForAlias:(id)arg1;	// IMP=0x00100000001f8c42
- (void)loadAliasUserIntentMetadataIfNeeded;	// IMP=0x00100000001f8c22
- (unsigned char)currentAliasState:(id)arg1;	// IMP=0x00100000001f8ba9
- (_Bool)wasRecentlySelectedAlias:(id)arg1;	// IMP=0x00100000001f8b91
- (void)markAsWasSelectedAlias:(id)arg1;	// IMP=0x00100000001f8b71
- (void)markAsVettedAlias:(id)arg1;	// IMP=0x00100000001f8b0a
- (void)markAsUnvettedAlias:(id)arg1;	// IMP=0x00100000001f8a91
- (void)markAsUnselectedAlias:(id)arg1 withReason:(unsigned char)arg2;	// IMP=0x00100000001f8a74
- (MISSING_TYPE *)markAsSelectedAlias: /* Error: Ran out of types for this method. */;	// IMP=0x00100000001f8a54
- (id)invisibleAliases;	// IMP=0x00100000001f89fa
- (id)vettedAliases;	// IMP=0x00100000001f89a0
- (void)reIdentify;	// IMP=0x00100000001f8989
- (void)reregister;	// IMP=0x00100000001f8975
- (void)_refreshRegistration;	// IMP=0x00100000001f86b4
- (void)validateProfile;	// IMP=0x00100000001f82a7
- (void)askPeersToClearCacheWithURIs:(id)arg1 fromURI:(id)arg2 forService:(id)arg3;	// IMP=0x00100000001f7ed3
- (void)_handleKTOptInStatusUpdateError:(long long)arg1;	// IMP=0x00100000001f7e7c
- (_Bool)updateKTOptInStatusWithRequest:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001f700d
- (_Bool)updateKTOptInStatus:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001f61e4
@property(readonly, nonatomic) NSDictionary *pseudonymURIMap;
@property(readonly, nonatomic) NSArray *pseudonyms;
- (id)pseudonymForPseudonymURIString:(id)arg1;	// IMP=0x00100000001f539e
- (void)_removePseudonyms:(id)arg1;	// IMP=0x00100000001f4dd9
- (void)_removePseudonym:(id)arg1;	// IMP=0x00100000001f4d31
- (void)_addPseudonym:(id)arg1;	// IMP=0x00100000001f474b
- (void)_removeAllPseudonyms;	// IMP=0x00100000001f4683
- (_Bool)revokePseudonym:(id)arg1 requestProperties:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000001f4285
- (_Bool)renewPseudonym:(id)arg1 forUpdatedExpiryEpoch:(double)arg2 requestProperties:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x00100000001f3ebc
- (_Bool)provisionPseudonymForURI:(id)arg1 properties:(id)arg2 requestProperties:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;	// IMP=0x00100000001f38c0
- (void)_handlePseudonymProvisionError:(long long)arg1;	// IMP=0x00100000001f37e2
- (void)refreshVettedAliases;	// IMP=0x00100000001f36b4
- (void)validateCredentialsWithDeliveryCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000001f362a
- (void)deactivateAndPurgeIdentify;	// IMP=0x00100000001f3414
- (void)unvalidateAliases:(id)arg1;	// IMP=0x00100000001f3204
- (void)_unvalidateAliases:(id)arg1;	// IMP=0x00100000001f2c6a
- (void)validateAliases:(id)arg1;	// IMP=0x00100000001f2a5a
- (void)_validateAliases:(id)arg1;	// IMP=0x00100000001f281c
- (void)_validateAliases:(id)arg1 validateAlreadyValid:(_Bool)arg2;	// IMP=0x00100000001f1ce3
- (void)addAliases:(id)arg1;	// IMP=0x00100000001f1be6
- (void)_addAliases:(id)arg1;	// IMP=0x00100000001f13e5
- (void)removeAliases:(id)arg1;	// IMP=0x00100000001f1312
- (void)_removeAliases:(id)arg1 withReason:(unsigned char)arg2;	// IMP=0x00100000001f097e
- (void)_setValidationStatus:(long long)arg1 error:(int)arg2 forAlias:(id)arg3 info:(id)arg4 addToCurrentHandlesIfNeeded:(_Bool)arg5 forceAdd:(_Bool)arg6;	// IMP=0x00100000001f0953
- (void)_setValidationStatus:(long long)arg1 error:(int)arg2 forAlias:(id)arg3 info:(id)arg4 addToCurrentHandlesIfNeeded:(_Bool)arg5 forceAdd:(_Bool)arg6 aliasProperties:(id)arg7;	// IMP=0x00100000001f0485
- (long long)_validationStatusForAlias:(id)arg1;	// IMP=0x00100000001f01dd
- (id)_aliases;	// IMP=0x00100000001f00e6
- (id)_aliasStrings;	// IMP=0x00100000001efec5
- (void)_ignoreIncomingPushes;	// IMP=0x00100000001efea3
- (void)_acceptIncomingPushes;	// IMP=0x00100000001efe7e
- (void)center:(id)arg1 failedRegionValidation:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x00100000001efab0
- (void)center:(id)arg1 succeededRegionValidation:(id)arg2 regionID:(id)arg3 phoneNumber:(id)arg4 extraContext:(id)arg5 verified:(_Bool)arg6;	// IMP=0x00100000001ef607
- (void)center:(id)arg1 succeededCurrentEmailsRequest:(id)arg2 emailInfo:(id)arg3;	// IMP=0x00100000001ef36c
- (void)center:(id)arg1 failedAuthentication:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x00100000001eef9d
- (void)center:(id)arg1 succeededAuthentication:(id)arg2;	// IMP=0x00100000001eec3b
- (void)center:(id)arg1 startedAuthenticating:(id)arg2;	// IMP=0x00100000001eea44
- (void)registrationControllerNeedsNewRegistration:(id)arg1;	// IMP=0x00100000001ee868
- (void)registrationController:(id)arg1 deregistrationSucceeded:(id)arg2;	// IMP=0x00100000001ee65d
- (void)registrationController:(id)arg1 deregistrationWillStart:(id)arg2;	// IMP=0x00100000001ee518
- (void)registrationController:(id)arg1 registrationFailed:(id)arg2 error:(long long)arg3 info:(id)arg4;	// IMP=0x00100000001ed228
- (void)registrationController:(id)arg1 registrationSucceeded:(id)arg2;	// IMP=0x00100000001ebffd
- (void)registrationController:(id)arg1 registrationUpdated:(id)arg2;	// IMP=0x00100000001ebe0d
- (void)registrationController:(id)arg1 registrationWillStart:(id)arg2;	// IMP=0x00100000001ebbf2
- (void)centerNeedsNewIdentification:(id)arg1;	// IMP=0x00100000001ebbec
- (void)center:(id)arg1 failedIdentification:(id)arg2 error:(long long)arg3;	// IMP=0x00100000001ebbe6
- (void)center:(id)arg1 succeededIdentification:(id)arg2 phoneNumber:(id)arg3 token:(id)arg4;	// IMP=0x00100000001eb989
- (unsigned long long)_unregistered130RetryInterval;	// IMP=0x00100000001eb973
- (void)_updateSessionsWithRegisteredURIs:(id)arg1 retryIfNotRegistered:(_Bool)arg2;	// IMP=0x00100000001eb051
- (void)_updateSessionsWithRegisteredURIs:(id)arg1;	// IMP=0x00100000001eb03a
- (void)_updateSessionsForAllRegisteredURIs;	// IMP=0x00100000001eafcc
- (void)_flushTokensForRegisteredURIs:(id)arg1;	// IMP=0x00100000001ea8d9
- (void)_processReceivedDependentRegistration:(id)arg1 oldDependentRegistrations:(id)arg2;	// IMP=0x00100000001e9b23
- (void)_issueDependentCheck;	// IMP=0x00100000001e8cf3
- (void)_issueCriticalDependentCheck;	// IMP=0x00100000001e8cc5
- (_Bool)_issueForcedDependentCheckIfPossible;	// IMP=0x00100000001e8c7d
- (void)_saveAndNotifyGDRUpdate;	// IMP=0x00100000001e876f
- (void)_notifyListenersAndSetDependentRegistrations:(id)arg1 onRegistrationInfo:(id)arg2;	// IMP=0x00100000001e84e0
- (void)gdrReAuthenticateIfNecessary;	// IMP=0x00100000001e804f
- (void)_clearGDRState;	// IMP=0x00100000001e7f55
- (void)handler:(id)arg1 flushCacheForURIs:(id)arg2;	// IMP=0x00100000001e7b52
- (void)handler:(id)arg1 profileHandlesUpdated:(id)arg2 status:(id)arg3 allowGDR:(id)arg4;	// IMP=0x00100000001e7336
- (void)handler:(id)arg1 profile:(id)arg2 deviceUpdated:(id)arg3 service:(id)arg4;	// IMP=0x00100000001e6a4b
- (void)_updateHandles:(_Bool)arg1;	// IMP=0x00100000001e61fc
- (void)_parseHandlesInfo:(id)arg1 currentAliases:(id)arg2 currentVettedAliases:(id)arg3;	// IMP=0x00100000001e46c5
- (void)handler:(id)arg1 reloadBag:(id)arg2;	// IMP=0x00100000001e4146
- (void)handler:(id)arg1 pushTokenChanged:(id)arg2;	// IMP=0x00100000001e3d1e
- (void)updateAuthorizationCredentials:(id)arg1 token:(id)arg2;	// IMP=0x00100000001e39b4
- (void)passwordUpdated;	// IMP=0x00100000001e36fd
- (void)unregisterAccount;	// IMP=0x00100000001e34e5
- (void)_unregisterAccount;	// IMP=0x00100000001e30ea
- (void)registerAccount;	// IMP=0x00100000001e2f00
- (void)_registerAccount;	// IMP=0x00100000001e2337
- (_Bool)_migrateRegistrationIfNeeded;	// IMP=0x00100000001e1bdd
- (void)_retryRegister;	// IMP=0x00100000001e1a43
- (void)authenticateAccount;	// IMP=0x00100000001e182b
- (_Bool)_isPasswordPromptPermissibleDuringAuthentication;	// IMP=0x00100000001e1739
- (void)_authenticateAccount;	// IMP=0x00100000001e12f0
- (void)deactivateRegistration;	// IMP=0x00100000001e0b3d
- (void)activateRegistration;	// IMP=0x00100000001dfe12
- (void)systemRestoreStateDidChange;	// IMP=0x00100000001dfc96
- (void)systemDidStartBackup;	// IMP=0x00100000001dfbf9
- (void)systemDidFinishMigration;	// IMP=0x00100000001dfb5e
- (void)_reregister;	// IMP=0x00100000001dfb4a
- (void)_reregisterAndReidentify:(_Bool)arg1;	// IMP=0x00100000001df728
- (void)_removeAuthenticationCredentialsIncludingAuthToken:(_Bool)arg1;	// IMP=0x00100000001df3b0
- (void)_removeAuthenticationCredentials;	// IMP=0x00100000001df399
- (void)_reregisterAndReProvision;	// IMP=0x00100000001df130
- (void)_reAuthenticate;	// IMP=0x00100000001df0cb
- (_Bool)_stopRegistrationAgent;	// IMP=0x00100000001deec2
- (void)_updateRegistrationStatusWithError:(long long)arg1 info:(id)arg2;	// IMP=0x00100000001ddec2
- (void)setRegistrationStatus:(int)arg1 error:(long long)arg2 alertInfo:(id)arg3;	// IMP=0x00100000001dd9ed
- (void)_checkRegistration;	// IMP=0x00100000001dcd37
- (void)_updateVettedAliases:(id)arg1 emailInfo:(id)arg2 addToCurrentHandlesIfNeeded:(_Bool)arg3;	// IMP=0x00100000001dc428
- (void)_updatePseudonymsFromEmailInfo:(id)arg1;	// IMP=0x00100000001dbb0b
- (void)_keychainMigrationComplete:(id)arg1;	// IMP=0x00100000001db6fc
- (void)_needsEncryptionIdentityRoll:(id)arg1;	// IMP=0x00100000001db697
- (void)_identityGenerated:(id)arg1;	// IMP=0x00100000001db5ea
- (void)_identityRebuilt:(id)arg1;	// IMP=0x00100000001db585
- (void)_deregisterDeviceCenterNotifications;	// IMP=0x00100000001db428
- (void)_registerForDeviceCenterNotifications;	// IMP=0x00100000001db28f
- (void)_registrationAbilityChanged:(id)arg1;	// IMP=0x00100000001db102
- (_Bool)isRegistrationActive;	// IMP=0x00100000001db0eb
- (_Bool)isDeviceAuthenticated;	// IMP=0x00100000001db0a2
- (_Bool)isDeviceRegistered;	// IMP=0x00100000001db005
- (void)refreshAdHocServiceNames;	// IMP=0x00100000001daac3
- (_Bool)_rebuildRegistrationInfo:(_Bool)arg1;	// IMP=0x00100000001d8092
- (int)_neededRegistrationType;	// IMP=0x00100000001d8055
- (void)_updateCallerIDToTemporaryPhone;	// IMP=0x00100000001d7d93
- (void)_updatePhoneNumberCallerID;	// IMP=0x00100000001d78f1
- (_Bool)_hasBudgetForForcedGDR;	// IMP=0x00100000001d74fa
- (void)_updatePerformedForcedGDRDate;	// IMP=0x00100000001d73d7
- (id)_performedForcedGDRDatePeriod;	// IMP=0x00100000001d72dc
- (void)_clearForcedGDRDate;	// IMP=0x00100000001d7298
- (void)_clearForcedGDRCount;	// IMP=0x00100000001d7254
- (void)_incrementForcedGDRCount;	// IMP=0x00100000001d71c5
- (int)_currentForcedGDRCount;	// IMP=0x00100000001d7150
- (_Bool)_isBuddyShowing;	// IMP=0x00100000001d7137
- (id)userDefaults;	// IMP=0x00100000001d711e
- (id)systemMonitor;	// IMP=0x00100000001d7105
- (id)peerIDManager;	// IMP=0x00100000001d70ec
- (id)serviceController;	// IMP=0x00100000001d70d3
- (id)accountController;	// IMP=0x00100000001d70ba
- (id)appleIDNotificationCenter;	// IMP=0x00100000001d70a1
- (id)registrationCenter;	// IMP=0x00100000001d7088
- (_Bool)shouldIncludeDefaultDeviceAsDestinationForMessageForFromID:(id)arg1;	// IMP=0x00100000002ff98a
- (id)pairingManager;	// IMP=0x00100000002ff971
- (void)decryptMessageData:(id)arg1 guid:(id)arg2 localURI:(id)arg3 remoteURI:(id)arg4 pushToken:(id)arg5 groupID:(id)arg6 encryptionType:(long long)arg7 isLiveRetry:(_Bool)arg8 replayKey:(id)arg9 completionBlock:(CDUnknownBlockType)arg10;	// IMP=0x00100000002ff23c
- (void)sendMessage:(id)arg1 params:(id)arg2 bulkedPayload:(id)arg3 fromID:(id)arg4 toDestinations:(id)arg5 useDictAsTopLevel:(_Bool)arg6 dataToEncrypt:(id)arg7 encryptPayload:(_Bool)arg8 wantsResponse:(_Bool)arg9 expirationDate:(id)arg10 command:(id)arg11 wantsDeliveryStatus:(_Bool)arg12 wantsCertifiedDelivery:(_Bool)arg13 deliveryStatusContext:(id)arg14 messageUUID:(id)arg15 priority:(long long)arg16 localDelivery:(_Bool)arg17 disallowRefresh:(_Bool)arg18 willSendBlock:(CDUnknownBlockType)arg19 completionBlock:(CDUnknownBlockType)arg20;	// IMP=0x00100000002fed6f
- (void)sendMessageWithSendParameters:(id)arg1 willSendBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000002fb67a
- (void)_rapportSendWithSendParameters:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fb32b
- (void)_sendRemotelyWithSendParameters:(id)arg1 data:(id)arg2 protobuf:(id)arg3 willSendBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x00100000002f69ef
- (void)_sendLocallyWithSendParameters:(id)arg1 uriToLocalDestination:(id)arg2 data:(id)arg3 protobuf:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x00100000002f3dd4
- (id)utunDeliveryController;	// IMP=0x00100000002f3dbb
- (void)_splitDestinations:(id)arg1 intoLocalDestinations:(id *)arg2 remoteDestinations:(id *)arg3 rapportDestinations:(id *)arg4 sendParameters:(id)arg5;	// IMP=0x00100000002f0edd
- (void)sendServerMessage:(id)arg1 command:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000002f095d
- (void)_sendMessageWithSendParametersOnMainThread:(id)arg1 filteredDestinations:(id)arg2 data:(id)arg3 compressedData:(id)arg4 protobufToSend:(id)arg5 willSendBlock:(CDUnknownBlockType)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x00100000002ef2e5
- (id)newSendMessageContext;	// IMP=0x00100000002eedad
- (long long)maxRemoteMessagingPayloadSize;	// IMP=0x00100000002eed25

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

