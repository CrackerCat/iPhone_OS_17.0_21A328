//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSDAccountController, IDSDServiceController, IDSEncryptionQueueManager, IDSOTRController, IDSPeerIDManager, IDSPublicKeyStorage, IDSRateLimiter, IDSRegistrationKeyManager;

@interface IDSEncryptionController : NSObject
{
    IDSRateLimiter *_failedTokenCache;	// 8 = 0x8
    IDSEncryptionQueueManager *_queueManager;	// 16 = 0x10
    IDSPeerIDManager *_peerIDManager;	// 24 = 0x18
    IDSRegistrationKeyManager *_registrationKeyManager;	// 32 = 0x20
    IDSOTRController *_OTRController;	// 40 = 0x28
    IDSPublicKeyStorage *_publicKeyStorage;	// 48 = 0x30
    IDSDAccountController *_accountController;	// 56 = 0x38
    IDSDServiceController *_serviceController;	// 64 = 0x40
}

+ (id)sharedInstance;	// IMP=0x00400000002c9750
- (void).cxx_destruct;	// IMP=0x00200000002cc42a
@property(retain, nonatomic) IDSDServiceController *serviceController; // @synthesize serviceController=_serviceController;
@property(retain, nonatomic) IDSDAccountController *accountController; // @synthesize accountController=_accountController;
@property(retain, nonatomic) IDSPublicKeyStorage *publicKeyStorage; // @synthesize publicKeyStorage=_publicKeyStorage;
@property(retain, nonatomic) IDSOTRController *OTRController; // @synthesize OTRController=_OTRController;
@property(retain, nonatomic) IDSRegistrationKeyManager *registrationKeyManager; // @synthesize registrationKeyManager=_registrationKeyManager;
@property(retain, nonatomic) IDSPeerIDManager *peerIDManager; // @synthesize peerIDManager=_peerIDManager;
@property(retain, nonatomic) IDSEncryptionQueueManager *queueManager; // @synthesize queueManager=_queueManager;
- (void);	// IMP=0x00100000002cc35c
@property(retain, nonatomic) IDSRateLimiter *failedTokenCache; // @synthesize failedTokenCache=_failedTokenCache;
- (void)logRemoteDecryptionErrorForToken:(id)arg1 deviceID:(id)arg2 forURI:(id)arg3 fromURI:(id)arg4 forService:(id)arg5 messageData:(id)arg6 type:(long long)arg7;	// IMP=0x00100000002cc178
- (void)logEncryptionErrorForToken:(id)arg1 deviceID:(id)arg2 forURI:(id)arg3 fromURI:(id)arg4 forService:(id)arg5 messageData:(id)arg6 type:(long long)arg7;	// IMP=0x00100000002cbf9c
- (void)performSyncBlock:(CDUnknownBlockType)arg1 priority:(long long)arg2;	// IMP=0x00100000002cbf23
- (void)performAsyncBlock:(CDUnknownBlockType)arg1 priority:(long long)arg2;	// IMP=0x00100000002cbeaa
- (id)_builderAvoidMainQueue:(_Bool)arg1 forceLegacy:(_Bool)arg2;	// IMP=0x00100000002cbe61
- (void)_decryptData:(id)arg1 guid:(id)arg2 encrypter:(id)arg3 pkType:(long long)arg4 isRetry:(_Bool)arg5 priority:(long long)arg6 replayKey:(id)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x00100000002cbb95
- (void)_decryptData:(id)arg1 encrypter:(id)arg2 pkType:(long long)arg3 isRetry:(_Bool)arg4 priority:(long long)arg5 replayKey:(id)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00100000002cb8f6
- (void)_encryptData:(id)arg1 withEncryptedAttributes:(id)arg2 encrypter:(id)arg3 priority:(long long)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00100000002cb7b3
- (id)OTRDecryptData:(id)arg1 OTRToken:(id)arg2 priority:(long long)arg3 error:(long long *)arg4;	// IMP=0x00100000002cb6b3
- (id)OTREncryptData:(id)arg1 OTRToken:(id)arg2 priority:(long long)arg3 error:(long long *)arg4;	// IMP=0x00100000002cb5b3
- (_Bool)publicKeyVerifySignedData:(id)arg1 matchesData:(id)arg2 forSignatureType:(long long)arg3 endpoint:(id)arg4 withKeyType:(unsigned int)arg5 keyDiversifier:(id)arg6 priority:(long long)arg7 error:(id *)arg8;	// IMP=0x00100000002cb45c
- (_Bool)publicKeyVerifySignedData:(id)arg1 matchesData:(id)arg2 forSignatureType:(long long)arg3 endpoint:(id)arg4 priority:(long long)arg5 error:(id *)arg6;	// IMP=0x00100000002cb428
- (void)publicKeyVerifySignedData:(id)arg1 matchesData:(id)arg2 forSignatureType:(long long)arg3 identity:(id)arg4 toURI:(id)arg5 pushToken:(id)arg6 service:(id)arg7 localURI:(id)arg8 withKeyType:(unsigned int)arg9 keyDiversifier:(id)arg10 priority:(long long)arg11 completion:(CDUnknownBlockType)arg12 avoidMainQueue:(_Bool)arg13;	// IMP=0x00100000002cb22b
- (void)publicKeyVerifySignedData:(id)arg1 matchesData:(id)arg2 forSignatureType:(long long)arg3 identity:(id)arg4 forURI:(id)arg5 pushToken:(id)arg6 service:(id)arg7 localURI:(id)arg8 priority:(long long)arg9 completion:(CDUnknownBlockType)arg10 avoidMainQueue:(_Bool)arg11;	// IMP=0x00100000002cb1dd
- (id)publicKeyBatchSignDatas:(id)arg1 withSignatureType:(long long)arg2 keyType:(unsigned int)arg3 keyDiversifier:(id)arg4 service:(id)arg5 priority:(long long)arg6 error:(id *)arg7;	// IMP=0x00100000002cb08a
- (id)publicKeyBatchSignDatas:(id)arg1 withSignatureType:(long long)arg2 service:(id)arg3 priority:(long long)arg4 error:(id *)arg5;	// IMP=0x00100000002cb05d
- (id)publicKeySignData:(id)arg1 withSignatureType:(long long)arg2 keyType:(unsigned int)arg3 keyDiversifier:(id)arg4 service:(id)arg5 priority:(long long)arg6 error:(id *)arg7;	// IMP=0x00100000002caf0a
- (id)publicKeySignData:(id)arg1 withSignatureType:(long long)arg2 service:(id)arg3 priority:(long long)arg4 error:(id *)arg5;	// IMP=0x00100000002caedd
- (id)publicKeyDecryptData:(id)arg1 toDeviceID:(id)arg2 publicKeyType:(long long)arg3 priority:(long long)arg4 error:(id *)arg5;	// IMP=0x00100000002cada2
- (void)publicKeyDecryptData:(id)arg1 toDeviceID:(id)arg2 priority:(long long)arg3 publicKeyType:(long long)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x00100000002cac32
- (id)publicKeyEncryptData:(id)arg1 withEncryptedAttributes:(id)arg2 toDeviceID:(id)arg3 publicKeyType:(long long)arg4 priority:(long long)arg5 error:(id *)arg6;	// IMP=0x00100000002caaf3
- (void)publicKeyEncryptData:(id)arg1 withEncryptedAttributes:(id)arg2 toDeviceID:(id)arg3 priority:(long long)arg4 publicKeyType:(long long)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00100000002ca984
- (void)publicKeyDecryptData:(id)arg1 guid:(id)arg2 fromURI:(id)arg3 identity:(id)arg4 toURI:(id)arg5 pushToken:(id)arg6 service:(id)arg7 priority:(long long)arg8 isRetry:(_Bool)arg9 replayKey:(id)arg10 publicKeyType:(long long)arg11 completionBlock:(CDUnknownBlockType)arg12 avoidMainQueue:(_Bool)arg13;	// IMP=0x00100000002ca763
- (void)publicKeyDecryptData:(id)arg1 fromURI:(id)arg2 identity:(id)arg3 toURI:(id)arg4 pushToken:(id)arg5 service:(id)arg6 priority:(long long)arg7 isRetry:(_Bool)arg8 replayKey:(id)arg9 publicKeyType:(long long)arg10 completionBlock:(CDUnknownBlockType)arg11 avoidMainQueue:(_Bool)arg12;	// IMP=0x00100000002ca547
- (void)publicKeyEncryptData:(id)arg1 withEncryptedAttributes:(id)arg2 fromURI:(id)arg3 identity:(id)arg4 toURI:(id)arg5 pushToken:(id)arg6 service:(id)arg7 priority:(long long)arg8 completionBlock:(CDUnknownBlockType)arg9 forceLegacy:(_Bool)arg10 avoidMainQueue:(_Bool)arg11;	// IMP=0x00100000002ca349
- (void)publicKeyDecryptData:(id)arg1 fromEndpoint:(id)arg2 pkType:(long long)arg3 priority:(long long)arg4 replayKey:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00100000002ca116
- (id)publicKeyDecryptData:(id)arg1 fromEndpoint:(id)arg2 pkType:(long long)arg3 priority:(long long)arg4 error:(id *)arg5;	// IMP=0x00100000002c9fba
- (id)legacyPublicKeyEncryptData:(id)arg1 withEncryptedAttributes:(id)arg2 toEndpoint:(id)arg3 priority:(long long)arg4 error:(id *)arg5;	// IMP=0x00100000002c9e7c
- (id)publicKeyEncryptData:(id)arg1 forceSizeOptimizations:(_Bool)arg2 resetState:(_Bool)arg3 withEncryptedAttributes:(id)arg4 toEndpoint:(id)arg5 usedEncryptionType:(long long *)arg6 priority:(long long)arg7 metadata:(id *)arg8 error:(id *)arg9;	// IMP=0x00100000002c9ce4
- (id)publicKeyEncryptData:(id)arg1 withEncryptedAttributes:(id)arg2 toEndpoint:(id)arg3 usedEncryptionType:(long long *)arg4 priority:(long long)arg5 error:(id *)arg6;	// IMP=0x00100000002c9b63
- (id)initWithPeerIDManager:(id)arg1 registrationKeyManager:(id)arg2 OTRController:(id)arg3 publicKeyStorage:(id)arg4 accountController:(id)arg5 serviceController:(id)arg6 queueManager:(id)arg7 failedTokenCache:(id)arg8;	// IMP=0x00100000002c9a04
- (id)init;	// IMP=0x00100000002c97a5

@end

