//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <LocationSupport/CLIntersiloService.h>

@class CLPedestrianFenceAnalyticsManager, CLTimer, NSMutableSet, NSString;

@interface CLPedestrianFenceService : CLIntersiloService
{
    struct unique_ptr<CLMotionNotifier::Dispatcher, std::default_delete<CLMotionNotifier::Dispatcher>> _fenceExitDispatcher;	// 8 = 0x8
    struct unique_ptr<CLMotionNotifier::Dispatcher, std::default_delete<CLMotionNotifier::Dispatcher>> _inertialOdometryAnalyticsDispatcher;	// 16 = 0x10
    struct map<unsigned long long, double, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, double>>> _packetStartTimes;	// 24 = 0x18
    struct map<unsigned long long, double, std::less<unsigned long long>, std::allocator<std::pair<const unsigned long long, double>>> _packetStopTriggerTimes;	// 48 = 0x30
    unsigned long long _sequenceNumber;	// 72 = 0x48
    NSMutableSet *_clientsInSession;	// 80 = 0x50
    CLPedestrianFenceAnalyticsManager *_analyticsManager;	// 88 = 0x58
    CLTimer *_intervalTimer;	// 96 = 0x60
}

+ (id)getSilo;	// IMP=0x0020000000dc414e
+ (void)performSyncOnSilo:(id)arg1 invoker:(CDUnknownBlockType)arg2;	// IMP=0x0010000000dc4135
+ (void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x0010000000dc40d8
+ (_Bool)isAvailable;	// IMP=0x0010000000dc3e3b
- (id).cxx_construct;	// IMP=0x0020000000dc897c
- (void).cxx_destruct;	// IMP=0x0010000000dc8901
@property(retain, nonatomic) CLTimer *intervalTimer; // @synthesize intervalTimer=_intervalTimer;
@property(retain, nonatomic) CLPedestrianFenceAnalyticsManager *analyticsManager; // @synthesize analyticsManager=_analyticsManager;
@property(retain, nonatomic) NSMutableSet *clientsInSession; // @synthesize clientsInSession=_clientsInSession;
- (void)sendStatusForFences:(id)arg1 setBefore:(double)arg2;	// IMP=0x0010000000dc80f7
- (void)onIntervalTimerCreateEventAndIncrementPacket:(_Bool)arg1;	// IMP=0x0010000000dc8094
- (void)toggleIntervalTimer;	// IMP=0x0010000000dc7f66
- (void)sessionEndPowerLog:(id)arg1;	// IMP=0x0010000000dc7e41
- (id)sessionForFence:(id)arg1;	// IMP=0x0010000000dc7cd3
- (id)sessionForClient:(byref id)arg1;	// IMP=0x0010000000dc7b9a
- (void)toggleSession:(_Bool)arg1;	// IMP=0x0010000000dc7ab2
- (void)toggleSession;	// IMP=0x0010000000dc7a6f
-     // Error parsing type: v24@0:8r^{InertialOdometryAnalytics=CCCCCQ[5f]f[5f]fffffffffSSS[7 ]}16, name: onInertialOdometryAnalyticsData:
-     // Error parsing type: v24@0:8r^{PedestrianFenceExit=CCBC  }16, name: onPedestrianFenceExitData:
- (void)clearFence:(id)arg1 inSession:(id)arg2;	// IMP=0x0010000000dc6ba1
- (int)insertFence:(id)arg1 inSession:(id)arg2;	// IMP=0x0010000000dc6360
- (void)odometryClient:(id)arg1 requestInterval:(id)arg2;	// IMP=0x0010000000dc62e3
- (void)teardownClient:(byref id)arg1;	// IMP=0x0010000000dc5f5f
- (void)clearFence:(id)arg1 forClient:(byref id)arg2;	// IMP=0x0010000000dc5d54
- (void)forceClearAllFences;	// IMP=0x0010000000dc59af
- (void)forceClearFence:(id)arg1;	// IMP=0x0010000000dc57dc
- (void)simulateFence:(id)arg1 forClient:(byref id)arg2 withExitAfterDelay:(double)arg3 wake:(_Bool)arg4;	// IMP=0x0010000000dc525b
- (void)setFence:(id)arg1 forClient:(byref id)arg2 withRadius:(float)arg3 wake:(_Bool)arg4;	// IMP=0x0010000000dc4c09
- (void)setFence:(id)arg1 forClient:(byref id)arg2 withRadius:(float)arg3;	// IMP=0x0010000000dc4bf4
- (void)endSessionForClient:(byref id)arg1;	// IMP=0x0010000000dc49f6
- (void)startSessionForClient:(byref id)arg1 withIdentifier:(id)arg2;	// IMP=0x0010000000dc45c8
- (void)startSessionForClient:(byref id)arg1;	// IMP=0x0010000000dc45af
- (void);	// IMP=0x0010000000dc4579
- (void)endService;	// IMP=0x0010000000dc44c1
- (void)beginService;	// IMP=0x0010000000dc4275
- (void)dealloc;	// IMP=0x0010000000dc41e7
- (id)init;	// IMP=0x0010000000dc41aa

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) _Bool valid;

@end

