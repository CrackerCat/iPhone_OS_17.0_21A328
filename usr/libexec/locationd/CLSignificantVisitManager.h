//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <LocationSupport/CLIntersiloService.h>

@class CLSettingsMirror, MISSING_TYPE, NSMutableArray, NSString;
@protocol CLClientAuthorizationCacheProtocol, CLClientManagerPublicProtocol, CLRoutineMonitorServiceProtocol;

@interface CLSignificantVisitManager : CLIntersiloService
{
    struct unique_ptr<CLClientManager_Type::Client, std::default_delete<CLClientManager_Type::Client>> _clientManagerClient;	// 8 = 0x8
    struct map<id<CLSignificantVisitManagerClientProtocol>, NSString *, std::less<id<CLSignificantVisitManagerClientProtocol>>, std::allocator<std::pair<const id<CLSignificantVisitManagerClientProtocol>, NSString *>>> _clientToKey;	// 16 = 0x10
    CLSettingsMirror *fSettings;	// 40 = 0x28
    _Bool _monitoring;	// 48 = 0x30
    _Bool _leeching;	// 49 = 0x31
    _Bool _armed;	// 50 = 0x32
    void *_clientInterest;	// 56 = 0x38
    void *_clientAuthDate;	// 64 = 0x40
    id <CLClientAuthorizationCacheProtocol> _clientAuthorizationCache;	// 72 = 0x48
    MISSING_TYPE *_recentVisits;	// 80 = 0x50
    id <CLRoutineMonitorServiceProtocol> _routineMonitor;	// 88 = 0x58
    id <CLClientManagerPublicProtocol> _clientManager;	// 96 = 0x60
    unsigned long long _currentJournalIdentifier;	// 104 = 0x68
}

+ (_Bool)isSupported;	// IMP=0x00200000004a1c29
+ (id)getSilo;	// IMP=0x00100000004a1bcd
+ (void)performSyncOnSilo:(id)arg1 invoker:(CDUnknownBlockType)arg2;	// IMP=0x00100000004a1bb4
+ (void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x00100000004a1b57
- (id).cxx_construct;	// IMP=0x00200000004a6aed
- (void).cxx_destruct;	// IMP=0x00100000004a6aa5
@property(nonatomic) unsigned long long currentJournalIdentifier; // @synthesize currentJournalIdentifier=_currentJournalIdentifier;
@property(nonatomic) _Bool armed; // @synthesize armed=_armed;
@property(retain, nonatomic) id <CLClientManagerPublicProtocol> clientManager; // @synthesize clientManager=_clientManager;
@property(retain, nonatomic) id <CLRoutineMonitorServiceProtocol> routineMonitor; // @synthesize routineMonitor=_routineMonitor;
@property(retain, nonatomic) NSMutableArray *recentVisits; // @synthesize recentVisits=_recentVisits;
@property(retain, nonatomic) id <CLClientAuthorizationCacheProtocol> clientAuthorizationCache; // @synthesize clientAuthorizationCache=_clientAuthorizationCache;
@property(nonatomic) void *clientAuthDate; // @synthesize clientAuthDate=_clientAuthDate;
@property(nonatomic) void *clientInterest; // @synthesize clientInterest=_clientInterest;
@property(nonatomic) _Bool leeching; // @synthesize leeching=_leeching;
@property(nonatomic) _Bool monitoring; // @synthesize monitoring=_monitoring;
- (void)settingsDidChange:(id)arg1;	// IMP=0x00100000004a6676
- (void)onAuthDateStoreTimer;	// IMP=0x00100000004a6635
- (void)onInterestStoreTimer;	// IMP=0x00100000004a65f4
- (void)onClientManagerNotification:(int)arg1 data:(struct NotificationData)arg2;	// IMP=0x00100000004a632e
- (void)onVisit:(id)arg1;	// IMP=0x00100000004a6131
- (_Bool)clientInterestStoreSetValueForClientKey:(const char *)arg1 parameterKey:(const char *)arg2 value:(int)arg3;	// IMP=0x00100000004a6065
- (_Bool)clientInterestStoreGetValueForClientKey:(const char *)arg1 parameterKey:(const char *)arg2 value:(int *)arg3;	// IMP=0x00100000004a5fb4
- (_Bool)interestTypeForClientKey:(const char *)arg1 outType:(int *)arg2;	// IMP=0x00100000004a5f5e
- (_Bool)interestForClientKey:(const char *)arg1 outInterest:(int *)arg2;	// IMP=0x00100000004a5f08
- (void)migrateClientInterestData;	// IMP=0x00100000004a5927
- (void)checkForMonitoring;	// IMP=0x00100000004a5211
- (id)authorizationDateForClientWithKey:(id)arg1;	// IMP=0x00100000004a4fa9
- (void)notifyClientsOfVisit:(id)arg1;	// IMP=0x00100000004a4a17
- (void)disconnectClient:(byref id)arg1;	// IMP=0x00100000004a496d
- (void)simulateVisit:(id)arg1;	// IMP=0x00100000004a48a7
- (void)actOnPendingDeleteForClientKey:(id)arg1;	// IMP=0x00100000004a46b9
- (void)removeInterestForClientKey:(id)arg1;	// IMP=0x00100000004a4609
- (void)stopMonitoringSignificantVisitsForClient:(byref id)arg1;	// IMP=0x00100000004a43e5
- (void)startMonitoringSignificantVisitsForClient:(byref id)arg1 type:(int)arg2;	// IMP=0x00100000004a4012
- (void)connectClient:(byref id)arg1 withKey:(id)arg2;	// IMP=0x00100000004a3e79
- (id)keyForClient:(byref id)arg1;	// IMP=0x00100000004a3de3
- (void)performBlockWhenArmed:(CDUnknownBlockType)arg1;	// IMP=0x00100000004a3d6b
- (void)deliverVisit:(id)arg1 toClient:(byref id)arg2;	// IMP=0x00100000004a38ed
- (void)sendVisitsToClient:(byref id)arg1;	// IMP=0x00100000004a3511
- (_Bool)isClientWithKeyInterested:(id)arg1;	// IMP=0x00100000004a333d
- (void)removeOldVisits;	// IMP=0x00100000004a31e0
- (void)ensureStop;	// IMP=0x00100000004a2ea5
- (void)ensureMonitoringWithType:(int)arg1;	// IMP=0x00100000004a2a7a
- (void)flushAll;	// IMP=0x00100000004a2a4c
- (void)flushInterest;	// IMP=0x00100000004a28fa
- (void)flushAuthDates;	// IMP=0x00100000004a27a8
- (void)endService;	// IMP=0x00100000004a25fc
- (void)beginService;	// IMP=0x00100000004a1c6e
- (id)init;	// IMP=0x00100000004a1c31

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) _Bool valid;

@end

