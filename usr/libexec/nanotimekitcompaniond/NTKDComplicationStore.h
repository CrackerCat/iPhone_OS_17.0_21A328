//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSHashTable, NSMutableDictionary, NSNumber, NSString, NSUUID, _NTKDComplicationCollectionManifest;
@protocol NTKDComplicationStoreSyncObserver, OS_dispatch_queue;

@interface NTKDComplicationStore : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSString *_storeDirectory;	// 16 = 0x10
    NSNumber *_seqId;	// 24 = 0x18
    NSNumber *_resetSeqId;	// 32 = 0x20
    NSHashTable *_observers;	// 40 = 0x28
    id <NTKDComplicationStoreSyncObserver> _syncObserver;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_observerCallbackQueue;	// 56 = 0x38
    _NTKDComplicationCollectionManifest *_manifest;	// 64 = 0x40
    NSMutableDictionary *_clientToSampleData;	// 72 = 0x48
    struct os_unfair_lock_s _clientToSampleDataLock;	// 80 = 0x50
    NSMutableDictionary *_clientIDtoComplicationDescriptors;	// 88 = 0x58
    struct os_unfair_lock_s _clientIDtoComplicationDescriptorsLock;	// 96 = 0x60
    NSMutableDictionary *_removals;	// 104 = 0x68
    NSString *_collectionIdentifier;	// 112 = 0x70
    NSUUID *_deviceUUID;	// 120 = 0x78
}

+ (void)cleanupOrphanedStoresWithCurrentDeviceUUIDs:(id)arg1;	// IMP=0x0040000000026019
- (void).cxx_destruct;	// IMP=0x002000000002e866
@property(readonly, nonatomic) NSUUID *deviceUUID; // @synthesize deviceUUID=_deviceUUID;
@property(readonly, nonatomic) NSString *collectionIdentifier; // @synthesize collectionIdentifier=_collectionIdentifier;
- (void)_queue_notifyDidRemoveComplicationForKey:(id)arg1 skipSyncObserver:(_Bool)arg2;	// IMP=0x001000000002de24
- (void)_queue_notifyDidUpdateComplicationDescriptors:(id)arg1 forClientIdentifier:(id)arg2 skipSyncObserver:(_Bool)arg3;	// IMP=0x001000000002dab3
- (void)_queue_notifyDidUpdateSampleTemplateReference:(id)arg1 forKey:(id)arg2 family:(long long)arg3 skipSyncObserver:(_Bool)arg4;	// IMP=0x001000000002d612
- (void)_queue_loadFullCollectionForObserver:(id)arg1;	// IMP=0x001000000002d4a5
- (void)_queue_playbackChangesForObserver:(id)arg1 fromSeqId:(id)arg2;	// IMP=0x001000000002c52d
- (void)_queue_clearRemovalsThroughSeqId:(id)arg1;	// IMP=0x001000000002c3ce
- (id)_queue_complicationDescriptorsForClientIdentifier:(id)arg1;	// IMP=0x001000000002c30e
- (_Bool)_queue_hasSampleTemplateForKey:(id)arg1 family:(long long)arg2;	// IMP=0x001000000002c273
- (id)_queue_sampleTemplateReferenceForKey:(id)arg1 family:(long long)arg2;	// IMP=0x001000000002c214
- (id)_queue_sampleTemplateForKey:(id)arg1 family:(long long)arg2;	// IMP=0x001000000002c1b5
- (id)_queue_sampleDataForKey:(id)arg1 family:(long long)arg2;	// IMP=0x001000000002c053
- (void)_queue_incrementSeqId;	// IMP=0x001000000002bfbf
- (void)_onObserverQueue_async:(CDUnknownBlockType)arg1;	// IMP=0x001000000002bf11
- (void)_onQueue_async:(CDUnknownBlockType)arg1;	// IMP=0x001000000002be63
- (void)synchronize;	// IMP=0x001000000002be48
- (id)_descriptorForKey:(id)arg1;	// IMP=0x001000000002ba96
- (void)_removeComplicationForKey:(id)arg1 skipSyncObserver:(_Bool)arg2;	// IMP=0x001000000002b538
- (void)_updateComplicationDescriptors:(id)arg1 forClientIdentifier:(id)arg2 skipSyncObserver:(_Bool)arg3;	// IMP=0x001000000002ab9f
- (void)_updateLocalizableSampleDataTemplate:(id)arg1 forKey:(id)arg2 family:(long long)arg3 skipSyncObserver:(_Bool)arg4;	// IMP=0x001000000002aa7f
- (void)_updateLocalizableSampleData:(id)arg1 forKey:(id)arg2 family:(long long)arg3 template:(id)arg4 skipSyncObserver:(_Bool)arg5;	// IMP=0x001000000002a5a1
- (void)_updateLocalizableSampleData:(id)arg1 forKey:(id)arg2 skipSyncObserver:(_Bool)arg3;	// IMP=0x0010000000029594
- (void)withoutNotifyingSyncObserverRemoveComplicationSampleTemplatesForClientIdentifier:(id)arg1 descriptor:(id)arg2;	// IMP=0x00100000000294fe
- (void)withoutNotifyingUpdateLocalizableSampleDataTemplate:(id)arg1 forClientIdentifier:(id)arg2 descriptor:(id)arg3 family:(long long)arg4;	// IMP=0x0010000000029440
- (void)withoutNotifyingUpdateComplicationDescriptors:(id)arg1 forClientIdentifier:(id)arg2;	// IMP=0x0010000000029428
- (void)withoutNotifyingSyncObserverSetComplicationSampleData:(id)arg1 forClientIdentifier:(id)arg2 descriptor:(id)arg3;	// IMP=0x0010000000029368
- (void)removeComplicationSampleTemplatesForClientIdentifier:(id)arg1 descriptor:(id)arg2;	// IMP=0x00100000000292d5
- (void)updateComplicationDescriptors:(id)arg1 forClientIdentifier:(id)arg2;	// IMP=0x00100000000292c0
- (void)updateLocalizableSampleDataTemplate:(id)arg1 forClientIdentifier:(id)arg2 descriptor:(id)arg3 family:(long long)arg4;	// IMP=0x0010000000029205
- (id)complicationDescriptorsForClientIdentifier:(id)arg1;	// IMP=0x001000000002909e
- (_Bool)hasSampleTemplateForClientIdentifier:(id)arg1 descriptor:(id)arg2 family:(long long)arg3;	// IMP=0x0010000000028f45
- (id)sampleTemplateForClientIdentifier:(id)arg1 descriptor:(id)arg2 family:(long long)arg3;	// IMP=0x0010000000028d84
- (id)clients;	// IMP=0x0010000000028c3d
- (void)setVersion:(float)arg1;	// IMP=0x0010000000028b15
- (float)version;	// IMP=0x00100000000289c3
- (void)clearSyncObserver;	// IMP=0x001000000002895d
- (void)_setupObserver:(id)arg1 withSeqId:(id)arg2 reloadSeqId:(id)arg3;	// IMP=0x00100000000288a3
- (void)setSyncObserver:(id)arg1 withSeqId:(id)arg2;	// IMP=0x0010000000028797
- (void)removeObserver:(id)arg1;	// IMP=0x00100000000286eb
- (void)addObserver:(id)arg1 withSeqId:(id)arg2;	// IMP=0x00100000000284ed
- (id)complicationSampleDataForClientID:(id)arg1 descriptor:(id)arg2 shouldInflate:(_Bool)arg3;	// IMP=0x00100000000283e0
- (void)_enumerateAllKeysForClientID:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000000280c2
- (void)_faultInComplicationDescriptorsForClientID:(id)arg1;	// IMP=0x0010000000027ea8
- (void)_faultInSampleDataForKey:(id)arg1;	// IMP=0x0010000000027b86
- (void)_faultInAllClientData;	// IMP=0x00100000000279a0
- (void)_validateManifestEntries;	// IMP=0x0010000000026eac
- (id)initWithCollectionIdentifier:(id)arg1 deviceUUID:(id)arg2;	// IMP=0x00100000000265ba

@end

