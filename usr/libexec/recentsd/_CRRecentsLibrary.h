//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRDelayedWorkQueue, CRPluginManager, CRRecentsMigrator, CRSQLiteConnectionPool, CRUbiquitousCoordinator, MISSING_TYPE, NSLock, NSMutableDictionary, NSString;
@protocol CRAccountAdaptor;

@interface _CRRecentsLibrary : NSObject
{
    NSString *_path;	// 8 = 0x8
    CRPluginManager *_pluginManager;	// 16 = 0x10
    CRSQLiteConnectionPool *_connectionPool;	// 24 = 0x18
    CRRecentsMigrator *_migrator;	// 32 = 0x20
    id <CRAccountAdaptor> _accountAdaptor;	// 40 = 0x28
    NSLock *_lock;	// 48 = 0x30
    struct __CFDictionary *_cachedProperties;	// 56 = 0x38
    CRDelayedWorkQueue *_pendingDomainExpunges;	// 64 = 0x40
    CRDelayedWorkQueue *_pendingStoreSyncEvents;	// 72 = 0x48
    double _storeSyncDelay;	// 80 = 0x50
    NSMutableDictionary *_cloudStores;	// 88 = 0x58
    CRUbiquitousCoordinator *_ubiquitousCoordinator;	// 96 = 0x60
}

+ (id)storeMapping;	// IMP=0x0020000000004088
+ (id)defaultPath;	// IMP=0x0010000000003fc9
@property(retain, nonatomic) CRUbiquitousCoordinator *ubiquitousCoordinator; // @synthesize ubiquitousCoordinator=_ubiquitousCoordinator;
@property(retain, nonatomic) NSMutableDictionary *cloudStores; // @synthesize cloudStores=_cloudStores;
@property(nonatomic) double storeSyncDelay; // @synthesize storeSyncDelay=_storeSyncDelay;
- (void)mergeCloudDataOneWayIntoLocalStoreWithReason:(unsigned long long)arg1;	// IMP=0x001000000000fc86
- (void)removeLocalRecordsForDomain:(id)arg1 removeInUbiquitousStore:(_Bool)arg2;	// IMP=0x001000000000faa1
- (_Bool)_synchronizeAllStores;	// IMP=0x001000000000f91b
- (_Bool)_synchronizeStore:(id)arg1;	// IMP=0x001000000000f824
- (void)scheduleSynchronizationForStore:(id)arg1;	// IMP=0x001000000000f6f2
- (void)synchronize;	// IMP=0x001000000000f6dc
- (void)_syncContact:(id)arg1 withStore:(id)arg2;	// IMP=0x001000000000e7e0
- (_Bool)_mergeRemoteChanges:(id)arg1 fromStore:(id)arg2 forRecentsDomain:(id)arg3;	// IMP=0x001000000000d926
- (void)_storeChangedExternally:(id)arg1;	// IMP=0x001000000000cd79
- (id)_storeForRecentsDomain:(id)arg1;	// IMP=0x001000000000cd63
- (id)_recentsDomainForStore:(id)arg1;	// IMP=0x001000000000cc88
- (void)_initializeStoreForRecentsDomain:(id)arg1 storeIdentifier:(id)arg2;	// IMP=0x001000000000cb4f
- (id)keyForContact:(id)arg1;	// IMP=0x001000000000cac8
- (id)hashForGroup:(id)arg1;	// IMP=0x001000000000c9b8
- (id)hashForContact:(id)arg1;	// IMP=0x001000000000c937
- (id)externalAddressFromAddress:(id)arg1 kind:(id)arg2;	// IMP=0x001000000000c8f4
- (id)addressFromExternalAddress:(id)arg1 kind:(id)arg2;	// IMP=0x001000000000c8b1
- (id)recentsHashForAddress:(id)arg1 kind:(id)arg2;	// IMP=0x001000000000c86e
- (id)recentsHashForExternalAddress:(id)arg1 kind:(id)arg2;	// IMP=0x001000000000c816
- (id)addressHandlerForAddressKind:(id)arg1;	// IMP=0x001000000000c800
- (void)removeContact:(id)arg1;	// IMP=0x001000000000c68a
- (unsigned long long)recordContactEvents:(id)arg1 recentsDomain:(id)arg2 sendingAddress:(id)arg3 source:(id)arg4;	// IMP=0x001000000000b34e
- (void)_deleteRecentsWithRecentIDs:(id)arg1 storeKeys:(id)arg2 recentsDomain:(id)arg3 deleteInUbiquitousStore:(_Bool)arg4;	// IMP=0x001000000000afee
- (void)_deleteRecentWithRecordHash:(id)arg1 kind:(id)arg2 recentsDomain:(id)arg3;	// IMP=0x001000000000ad70
- (void)_saveRecentContacts:(id)arg1;	// IMP=0x001000000000ab10
- (void)restorePreviouslyDeletedRecentContacts:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000aada
- (void)_updateRecentContacts:(id)arg1;	// IMP=0x001000000000a680
- (void)_insertRecentContacts:(id)arg1;	// IMP=0x0010000000009e9a
- (void)_bindContact:(id)arg1 withRecentID:(long long)arg2 forStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x0010000000009de1
- (void)_bindRecent:(id)arg1 forStatement:(struct sqlite3_stmt *)arg2;	// IMP=0x0010000000009a2e
- (_Bool)expungeRecentsOverLimitsForDomain:(id)arg1 forcibly:(_Bool)arg2 expungedRecentIDs:(id *)arg3;	// IMP=0x0010000000009171
- (id)_nts_expungeGroupRecentsOverLimit:(unsigned long long)arg1 domain:(id)arg2 storeKeys:(id *)arg3 connection:(id)arg4;	// IMP=0x0010000000008ebe
- (id)_nts_expungeIndividualRecentsOverLimit:(unsigned long long)arg1 domain:(id)arg2 storeKeys:(id *)arg3 connection:(id)arg4;	// IMP=0x0010000000008c0c
- (id)_nts_expungeRecentsOlderThanDate:(id)arg1 domain:(id)arg2 storeKeys:(id *)arg3 connection:(id)arg4;	// IMP=0x00100000000088b0
- (void)performExpungeRecentsOverLimitsForDomain:(id)arg1 afterDelay:(double)arg2;	// IMP=0x00100000000086e3
- (void)cancelPerformExpungeRecentsOverLimitsForDomain:(id)arg1;	// IMP=0x001000000000863c
- (void)setMaximumRecentsAgeInDays:(unsigned long long)arg1 forRecentsDomain:(id)arg2;	// IMP=0x001000000000860d
- (unsigned long long)maximumRecentsAgeInDaysForDomain:(id)arg1;	// IMP=0x00100000000085af
- (void)setMaximumGroupRecents:(unsigned long long)arg1 forRecentsDomain:(id)arg2;	// IMP=0x0010000000008571
- (unsigned long long)maximumGroupRecentsForDomain:(id)arg1;	// IMP=0x0010000000008518
- (void)setMaximumRecents:(unsigned long long)arg1 forRecentsDomain:(id)arg2;	// IMP=0x00100000000084da
- (unsigned long long)maximumRecentsForDomain:(id)arg1;	// IMP=0x0010000000008481
- (void)_setPropertyValue:(unsigned long long)arg1 forKey:(id)arg2;	// IMP=0x0010000000008417
- (unsigned long long)_propertyValueForKey:(id)arg1 defaultValue:(unsigned long long)arg2;	// IMP=0x0010000000008350
- (_Bool)_setDatabasePropertyValue:(unsigned long long)arg1 forKey:(id)arg2;	// IMP=0x001000000000820a
- (unsigned long long)_databasePropertyValueByKey:(id)arg1;	// IMP=0x001000000000802d
- (void)removeAllRecentContactsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000007ed6
- (void)removeRecentContactsWithRecentIDs:(id)arg1 syncKeys:(id)arg2 domain:(id)arg3 removeInUbiquitousStore:(_Bool)arg4;	// IMP=0x001000000000770f
- (void)enumerateRecentsForDomain:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000750a
- (id)_copyRecentContactForID:(long long)arg1;	// IMP=0x0010000000007212
- (id)_copyRecentContactForRecordHash:(id)arg1 recentsDomain:(id)arg2;	// IMP=0x0010000000006cc5
- (MISSING_TYPE *)hashForGroupMemberHashes: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000006c55
- (id)hashesForGroupMembers:(id)arg1 recentsDomain:(id)arg2;	// IMP=0x0010000000006a71
- (id)hashForGroupMembers:(id)arg1 recentsDomain:(id)arg2;	// IMP=0x0010000000006a40
- (id)copyContactRecentsFromStatement:(struct sqlite3_stmt *)arg1 selectIndexes:(CDStruct_3990e8ec)arg2 groupThreshold:(unsigned long long)arg3 options:(unsigned long long)arg4;	// IMP=0x00100000000062c1
- (id)upcomingEventIdentifierForRecentID:(long long)arg1;	// IMP=0x0010000000006089
- (void)populateMetadataForRecents:(id)arg1;	// IMP=0x0010000000005ac7
- (id)copyRecentsForQuery:(id)arg1 error:(id *)arg2;	// IMP=0x001000000000555e
- (CDUnknownBlockType)bindingForDomain:(id)arg1;	// IMP=0x00100000000054ac
- (id)domainClauseWithDomains:(id)arg1 bindings:(id)arg2;	// IMP=0x00100000000052dd
- (id)_whereClauseFromPredicate:(id)arg1 inDomains:(id)arg2 bindings:(id *)arg3 error:(id *)arg4;	// IMP=0x00100000000051d7
- (id)copyRecentContactFromStatement:(struct sqlite3_stmt *)arg1 columnIndexes:(CDStruct_3990e8ec)arg2 populateMetadata:(_Bool)arg3;	// IMP=0x0010000000004df3
- (void)performReadTransaction:(CDUnknownBlockType)arg1;	// IMP=0x0010000000004ddf
- (void)performWriteTransaction:(CDUnknownBlockType)arg1;	// IMP=0x0010000000004dc8
- (void)_performTransaction:(CDUnknownBlockType)arg1 forWriting:(_Bool)arg2;	// IMP=0x0010000000004cd0
- (id)_connectionForWriting:(_Bool)arg1;	// IMP=0x0010000000004ba5
- (void)unlockConnection:(id)arg1;	// IMP=0x0010000000004b0b
- (int)rollbackTransaction:(id)arg1;	// IMP=0x0010000000004aae
- (int)commitTransaction:(id)arg1;	// IMP=0x0010000000004a51
- (int)beginTransaction:(id)arg1 withType:(int)arg2;	// IMP=0x00100000000049f0
- (id)_activeConnectionWrapper;	// IMP=0x00100000000049ab
- (id)_setActiveConnection:(id)arg1 forWriting:(_Bool)arg2;	// IMP=0x00100000000048db
- (int)handleSqliteError:(struct sqlite3 *)arg1 format:(id)arg2;	// IMP=0x0010000000004884
- (void)_handleSQLiteErrorCode:(int)arg1;	// IMP=0x0010000000004804
- (void)_handleBusyError;	// IMP=0x00100000000047fb
- (void)_handleIOError;	// IMP=0x00100000000047f2
- (void)_handleFullDatabase;	// IMP=0x00100000000047e0
- (void)_handleNotADB;	// IMP=0x00100000000047ce
- (void)_handleCorruptDatabase;	// IMP=0x00100000000047bc
- (void)_removeDatabaseFromUnexpectedLocationAndAbort;	// IMP=0x001000000000473d
- (void)_removeDatabaseWithEmptyHomePathAndAbort;	// IMP=0x00100000000046be
- (void)_removeDatabaseFromVarMobileAndAbort;	// IMP=0x00100000000046a8
- (void)_removeDatabaseFromPrivateVarMobileAndAbort;	// IMP=0x0010000000004692
- (void)_removeDatabase;	// IMP=0x001000000000466d
- (void)renameOrRemoveDatabaseAndAbort;	// IMP=0x00100000000045e2
- (id)newConnectionForConnectionPool:(id)arg1;	// IMP=0x001000000000450e
- (void)closeDatabaseConnections;	// IMP=0x00100000000044f8
- (void)dealloc;	// IMP=0x0010000000004426
- (id)initWithPath:(id)arg1 accountAdaptor:(id)arg2;	// IMP=0x0010000000004171
- (id)initWithPath:(id)arg1;	// IMP=0x001000000000415d
- (id)init;	// IMP=0x0010000000004124

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

