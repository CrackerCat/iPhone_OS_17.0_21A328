//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NDTActivity, NEKAnalyticsDriver, NEKEnvironment, NEKProgressLiar, NEKRPCEndpoint, NEKStatTracker, NEKStore, NEKSyncSession, NEKTestControl, NSString, SYService;
@protocol NEKSyncControllerDelegate, OS_dispatch_queue;

@interface NEKSyncController : NSObject
{
    struct os_unfair_lock_s _syServiceLock;	// 8 = 0x8
    SYService *_syncService;	// 16 = 0x10
    _Bool _wasUsingDataTransfer;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_queue;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_sessionIdleQueue;	// 40 = 0x28
    NEKStore *_eventStore;	// 48 = 0x30
    NEKStore *_reminderStore;	// 56 = 0x38
    NEKSyncSession *_syncSession;	// 64 = 0x40
    NDTActivity *_activity;	// 72 = 0x48
    NEKAnalyticsDriver *_analyticsDriver;	// 80 = 0x50
    CDUnknownBlockType _completion;	// 88 = 0x58
    _Bool _isNightlySync;	// 96 = 0x60
    NEKStatTracker *_resetTimeoutTracker;	// 104 = 0x68
    NEKStatTracker *_deltaTimeoutTracker;	// 112 = 0x70
    NEKStatTracker *_nightlyTimeoutTracker;	// 120 = 0x78
    NEKRPCEndpoint *_rpcEndpoint;	// 128 = 0x80
    NEKProgressLiar *_preemptedSessionProgressLiar;	// 136 = 0x88
    NEKTestControl *_testingControl;	// 144 = 0x90
    NEKEnvironment *_environment;	// 152 = 0x98
    _Atomic int _sessionDepth;	// 160 = 0xa0
    _Bool _isCurrentlySyncing;	// 164 = 0xa4
    _Bool _isPerformingBackupResetSync;	// 165 = 0xa5
    id <NEKSyncControllerDelegate> _delegate;	// 168 = 0xa8
}

- (void).cxx_destruct;	// IMP=0x0020000000046fd2
@property(nonatomic) _Bool isPerformingBackupResetSync; // @synthesize isPerformingBackupResetSync=_isPerformingBackupResetSync;
@property(readonly, nonatomic) NEKStore *reminderStore; // @synthesize reminderStore=_reminderStore;
@property(readonly, nonatomic) NEKStore *eventStore; // @synthesize eventStore=_eventStore;
@property(readonly, nonatomic) _Bool isCurrentlySyncing; // @synthesize isCurrentlySyncing=_isCurrentlySyncing;
@property(nonatomic) __weak id <NEKSyncControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)changeObserverDidObserveTruncation:(id)arg1;	// IMP=0x0010000000046e5b
- (void)changeObserverDidObserveChanges:(id)arg1;	// IMP=0x0010000000046d48
- (void)prepDatabasesForResetSync;	// IMP=0x0010000000046c49
- (void)_recvSessionEnded:(id)arg1 error:(id)arg2;	// IMP=0x001000000004683a
- (void)_sendSessionEnded:(id)arg1 error:(id)arg2;	// IMP=0x0010000000045849
- (void)service:(id)arg1 sessionEnded:(id)arg2 error:(id)arg3;	// IMP=0x00100000000452d5
- (void)bumpFaultsAndScheduleRetry;	// IMP=0x0010000000045296
- (void)clearRetryState;	// IMP=0x00100000000451ed
- (void)clearRemoteBuildVersion;	// IMP=0x0010000000045170
- (char *)activityIdentifier:(id)arg1;	// IMP=0x0010000000045163
- (char *)activitySubsystem:(id)arg1;	// IMP=0x0010000000045156
- (void)activityDefer:(id)arg1;	// IMP=0x0010000000045080
- (void)activityRun:(id)arg1;	// IMP=0x001000000004506e
- (void)scheduleDeferredRetry;	// IMP=0x001000000004505c
- (void)scheduleRetry;	// IMP=0x0010000000044f57
- (double)_nextDelay:(long long)arg1;	// IMP=0x0010000000044f08
- (_Bool)_shouldFakeFailure;	// IMP=0x0010000000044eab
- (double)_fullSessionTimeout;	// IMP=0x0010000000044c45
- (void)_startRecvSession:(id)arg1 results:(struct StartSessionResults *)arg2;	// IMP=0x0010000000044b7f
- (void)_startSendSession:(id)arg1 results:(struct StartSessionResults *)arg2;	// IMP=0x0010000000043e0d
- (_Bool)service:(id)arg1 startSession:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000437b0
- (double)getFixedRetryInternal;	// IMP=0x001000000004375f
- (double)getFailureProbablity;	// IMP=0x001000000004370e
- (double)getMaximumSessionTimeout;	// IMP=0x00100000000436bd
- (double)getMinimumSessionTimeout;	// IMP=0x001000000004366c
- (void)tc_setFixedRetryInternal:(double)arg1;	// IMP=0x001000000004361c
- (void)tc_setFailureProbablity:(double)arg1;	// IMP=0x00100000000435c7
- (void)tc_setMaximumSessionTimeout:(double)arg1;	// IMP=0x0010000000043577
- (void)tc_setMinimumSessionTimeout:(double)arg1;	// IMP=0x0010000000043527
- (void)tc_requestReset;	// IMP=0x0010000000043515
- (void)tc_requestDelta;	// IMP=0x00100000000434ff
- (void)tc_setObjectDelay:(double)arg1;	// IMP=0x0010000000043484
- (void)tc_advanceChangeNumber;	// IMP=0x0010000000043434
- (void)tc_setAutomaticSync:(_Bool)arg1;	// IMP=0x00100000000433b7
- (void)tc_setNominal;	// IMP=0x0010000000043332
- (void)tc_status:(CDUnknownBlockType)arg1;	// IMP=0x0010000000043073
- (_Bool)_clearToDeltaSync;	// IMP=0x0010000000042fcd
- (id)service:(id)arg1 willPreferSession:(id)arg2 overSession:(id)arg3;	// IMP=0x0010000000042d1d
- (void)_retrySession:(id)arg1;	// IMP=0x0010000000042cdb
- (void)_deleteWronglyImmutableCalendars;	// IMP=0x0010000000042cd5
- (void)_setFaultCount:(long long)arg1;	// IMP=0x0010000000042c60
- (long long)_faultCount;	// IMP=0x0010000000042be9
- (long long)maxDeltaRetries;	// IMP=0x0010000000042bb3
- (void)deleteSYObject:(id)arg1 eventStore:(id)arg2 reminderStore:(id)arg3;	// IMP=0x0010000000042ba1
- (void)_deleteSYObject:(id)arg1 eventStore:(id)arg2 reminderStore:(id)arg3;	// IMP=0x00100000000428ed
- (void)createOrUpdateSYObject:(id)arg1 eventStore:(id)arg2 reminderStore:(id)arg3 session:(id)arg4;	// IMP=0x0010000000041c10
- (void)_retrySync;	// IMP=0x00100000000418c0
- (void)setNeedsMigrationSync;	// IMP=0x00100000000416ef
- (void)setNeedsNightlySync;	// IMP=0x001000000004160f
- (void)setNeedsReunionSync;	// IMP=0x00100000000414f8
- (void)setNeedsFullSync;	// IMP=0x0010000000041419
- (id)environment;	// IMP=0x0010000000041400
- (void)start;	// IMP=0x0010000000040f6e
- (_Bool)_canUseDataTransfer;	// IMP=0x0010000000040e56
- (void)_setClipping:(id)arg1;	// IMP=0x0010000000040dd1
- (id)initWithEnvironment:(id)arg1;	// IMP=0x0010000000040997

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

