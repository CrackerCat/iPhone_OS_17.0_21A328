//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class IDSService, NSDate, NSMapTable, NSMutableDictionary, NSNumber, NSObject, NSSet, NSString;
@protocol OS_dispatch_queue, SDAutoUnlockTransportClient;

@interface SDAutoUnlockTransport
{
    NSDate *_lastSeenWatchDate;	// 8 = 0x8
    NSNumber *_watchExistedInUnlockList;	// 16 = 0x10
    NSNumber *_watchCurrentlyInList;	// 24 = 0x18
    IDSService *_autoUnlockService;	// 32 = 0x20
    id <SDAutoUnlockTransportClient> _primaryClient;	// 40 = 0x28
    IDSService *_idsService;	// 48 = 0x30
    IDSService *_activityService;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_transportQueue;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_clientQueue;	// 72 = 0x48
    NSMapTable *_clientMap;	// 80 = 0x50
    NSMutableDictionary *_completionHandlers;	// 88 = 0x58
    NSMutableDictionary *_sendIdentifierToSessionID;	// 96 = 0x60
    NSMutableDictionary *_sendDates;	// 104 = 0x68
    NSDate *_lastSendDate;	// 112 = 0x70
    NSMutableDictionary *_autoUnlockDeviceCache;	// 120 = 0x78
    NSMutableDictionary *_cloudPairRetryRecords;	// 128 = 0x80
    NSMutableDictionary *_cachedBluetoothIDToUniqueIDs;	// 136 = 0x88
    NSSet *_cachedApproveBluetoothIDs;	// 144 = 0x90
}

+ (id)sharedTransport;	// IMP=0x002000000018d5bb
- (void).cxx_destruct;	// IMP=0x0020000000195521
@property(retain, nonatomic) NSSet *cachedApproveBluetoothIDs; // @synthesize cachedApproveBluetoothIDs=_cachedApproveBluetoothIDs;
@property(retain, nonatomic) NSMutableDictionary *cachedBluetoothIDToUniqueIDs; // @synthesize cachedBluetoothIDToUniqueIDs=_cachedBluetoothIDToUniqueIDs;
@property(retain, nonatomic) NSMutableDictionary *cloudPairRetryRecords; // @synthesize cloudPairRetryRecords=_cloudPairRetryRecords;
// Error: Property attributes should begin with the type ('T') attribute, property name: autoUnlockDeviceCache
// Property attributes: (null)

@property(retain, nonatomic) NSDate *lastSendDate; // @synthesize lastSendDate=_lastSendDate;
@property(retain) NSMutableDictionary *sendDates; // @synthesize sendDates=_sendDates;
@property(retain, nonatomic) NSMutableDictionary *sendIdentifierToSessionID; // @synthesize sendIdentifierToSessionID=_sendIdentifierToSessionID;
@property(retain) NSMutableDictionary *completionHandlers; // @synthesize completionHandlers=_completionHandlers;
@property(retain, nonatomic) NSMapTable *clientMap; // @synthesize clientMap=_clientMap;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *transportQueue; // @synthesize transportQueue=_transportQueue;
@property(retain, nonatomic) IDSService *activityService; // @synthesize activityService=_activityService;
@property(retain, nonatomic) IDSService *idsService; // @synthesize idsService=_idsService;
@property __weak id <SDAutoUnlockTransportClient> primaryClient; // @synthesize primaryClient=_primaryClient;
- (id)autoUnlockService;	// IMP=0x00100000001952fe
- (id)state;	// IMP=0x0010000000194e8c
- (_Bool)pairingRequestIsValidForDeviceID:(id)arg1 messageContext:(id)arg2;	// IMP=0x0010000000194c14
- (_Bool)disableEncryption;	// IMP=0x0010000000194bfb
- (_Bool)showOtherDevices;	// IMP=0x0010000000194be2
- (_Bool)showIDInName;	// IMP=0x0010000000194bc9
@property(retain, nonatomic) NSNumber *watchCurrentlyInList; // @synthesize watchCurrentlyInList=_watchCurrentlyInList;
@property(retain, nonatomic) NSNumber *watchExistedInUnlockList; // @synthesize watchExistedInUnlockList=_watchExistedInUnlockList;
@property(retain, nonatomic) NSDate *lastSeenWatchDate; // @synthesize lastSeenWatchDate=_lastSeenWatchDate;
@property(readonly, nonatomic) _Bool watchSeenRecently;
- (void)resetAppleWatchExisted;	// IMP=0x00100000001944fb
@property(readonly, nonatomic) _Bool appleWatchExisted;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 hasBeenDeliveredWithContext:(id)arg4;	// IMP=0x00100000001941b0
- (void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x00100000001937d5
- (void)service:(id)arg1 nearbyDevicesChanged:(id)arg2;	// IMP=0x001000000019362c
- (void)service:(id)arg1 devicesChanged:(id)arg2;	// IMP=0x0010000000193507
- (id)dataFromUUID:(id)arg1;	// IMP=0x0010000000193487
- (id)transferDataFromPayload:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000019339f
- (id)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 wantsACK:(_Bool)arg6 timeout:(id)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x0010000000193346
- (void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 timeout:(id)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x001000000019330a
- (void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 timeout:(id)arg6 errorHandler:(CDUnknownBlockType)arg7;	// IMP=0x0010000000193236
- (void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 timeout:(id)arg5 errorHandler:(CDUnknownBlockType)arg6;	// IMP=0x001000000019320a
- (void)loadCloudPairRetries;	// IMP=0x0010000000193143
- (_Bool)canRetryCloudPairingForDeviceID:(id)arg1 useShortDate:(_Bool)arg2;	// IMP=0x0010000000192ee4
- (void)updateRetryDatesForDeviceIDs:(id)arg1;	// IMP=0x0010000000192b11
- (void)triggerCloudPairRetryWithShortRetryDeviceIDs:(id)arg1;	// IMP=0x0010000000192b0b
- (void)handleSuccessfulMessageSentWithIdentifier:(id)arg1 sessionID:(id)arg2;	// IMP=0x00100000001929db
- (id)stableBluetoothIdentifierForIDSDevice:(id)arg1;	// IMP=0x001000000019295a
- (id)connectionCacheDevices;	// IMP=0x00100000001927d5
- (_Bool)localDeviceIDSRegistered;	// IMP=0x00100000001925a6
- (_Bool)activityServiceHasWatch;	// IMP=0x001000000019234f
- (id)placeholderDevice;	// IMP=0x0010000000192229
- (void)updateBluetoothIDCache;	// IMP=0x0010000000191e2d
- (void)logBluetoothIDCache;	// IMP=0x0010000000191d7b
- (id)cachedIDSDeviceIDsForBluetoothID:(id)arg1;	// IMP=0x0010000000191d01
- (id)idsDeviceIDsForBluetoothID:(id)arg1;	// IMP=0x0010000000191aaa
- (id)idsDeviceForBluetoothID:(id)arg1;	// IMP=0x00100000001918b1
- (id)idsDeviceForUniqueID:(id)arg1;	// IMP=0x00100000001916b8
- (id)proxyBluetoothDeviceIDForDeviceID:(id)arg1;	// IMP=0x00100000001915c6
- (id)nameForDevice:(id)arg1;	// IMP=0x00100000001914da
- (_Bool)macVersionEligibleForDeviceID:(id)arg1;	// IMP=0x001000000019119a
- (_Bool)watchVersionEligibleForDevice:(id)arg1;	// IMP=0x001000000019108b
- (id)modelNameForDevice:(id)arg1;	// IMP=0x0010000000191059
- (void)updateApproveBluetoothIDs;	// IMP=0x0010000000190d0c
- (id)approveBluetoothIDs;	// IMP=0x0010000000190c68
- (id)autoUnlockDeviceForIDSDevice:(id)arg1 cloudPaired:(_Bool)arg2 cached:(_Bool)arg3;	// IMP=0x0010000000190406
- (id)autoUnlockDeviceForIDSDevice:(id)arg1;	// IMP=0x00100000001903ec
- (id)onqueue_enabledAutoUnlockDevicesUsingCache:(_Bool)arg1;	// IMP=0x0010000000190002
- (id)enabledAutoUnlockDevicesUsingCache:(_Bool)arg1;	// IMP=0x001000000018fea8
- (id)enabledAutoUnlockDevices;	// IMP=0x001000000018fe94
- (id)onqueue_autoUnlockEligibleDevices:(_Bool)arg1 deviceType:(long long)arg2;	// IMP=0x001000000018f5d6
- (id)autoUnlockEligibleDevicesWithCloudPairing:(_Bool)arg1 deviceType:(long long)arg2;	// IMP=0x001000000018f46d
- (id)autoUnlockEligibleWatchesWithCloudPairing:(_Bool)arg1;	// IMP=0x001000000018f456
- (id)autoUnlockEligibleWatches;	// IMP=0x001000000018f43f
- (id)onqueue_devicesWithLTKs;	// IMP=0x001000000018f1dc
- (id)devicesWithLTKs;	// IMP=0x001000000018f090
- (id)autoUnlockDeviceForBluetoothID:(id)arg1 cached:(_Bool)arg2;	// IMP=0x001000000018f01f
- (id)autoUnlockDeviceForBluetoothID:(id)arg1;	// IMP=0x001000000018f00b
- (id)autoUnlockDeviceForDeviceID:(id)arg1;	// IMP=0x001000000018efac
- (id)modelIdentifierForDeviceID:(id)arg1;	// IMP=0x001000000018ef5c
- (long long)deviceTypeForDevice:(id)arg1;	// IMP=0x001000000018ed7c
- (long long)deviceTypeForDeviceID:(id)arg1;	// IMP=0x001000000018ed29
- (id)deviceNameForDeviceID:(id)arg1;	// IMP=0x001000000018ecd9
- (id)idsMacDeviceIDs;	// IMP=0x001000000018ea68
- (id)idsDevicesIDs;	// IMP=0x001000000018e89f
- (_Bool)deviceNearby;	// IMP=0x001000000018e85b
- (_Bool)isDeviceSatellitePaired;	// IMP=0x001000000018e853
- (id)activeDevice;	// IMP=0x001000000018e6d6
- (id)pairedAutoUnlockDevice;	// IMP=0x001000000018e677
- (id)pairedDeviceID;	// IMP=0x001000000018e627
- (id)onqueue_bluetoothDeviceIdentifiers;	// IMP=0x001000000018e425
- (id)bluetoothDeviceIdentifiers;	// IMP=0x001000000018e2e3
- (id)onqueue_bluetoothIDForIDSID:(id)arg1;	// IMP=0x001000000018e09a
- (id)bluetoothIDForIDSID:(id)arg1;	// IMP=0x001000000018de7d
- (void)clearAutoUnlockDeviceCache;	// IMP=0x001000000018dde0
- (void)refreshAutoUnlockDeviceCache;	// IMP=0x001000000018dda9
- (void)logDevices;	// IMP=0x001000000018dcc9
- (void)removeClientForIdentifier:(id)arg1;	// IMP=0x001000000018d961
- (void)addClient:(id)arg1 forIdentifer:(id)arg2;	// IMP=0x001000000018d82e
- (id)init;	// IMP=0x001000000018d610

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

