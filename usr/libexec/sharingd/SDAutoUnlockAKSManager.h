//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NSData, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_source;

@interface SDAutoUnlockAKSManager : NSObject
{
    _Bool _wristDetectDisabled;	// 8 = 0x8
    _Bool _autoUnlockDisabledDueToManagement;	// 9 = 0x9
    _Bool _t208Machine;	// 10 = 0xa
    struct os_unfair_lock_s _cachedSessionKeysLock;	// 12 = 0xc
    NSString *_localDeviceID;	// 16 = 0x10
    NSString *_state;	// 24 = 0x18
    NSData *_localAttestedLTK;	// 32 = 0x20
    NSData *_localLTK;	// 40 = 0x28
    NSString *_altDSID;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_keybagAssertionTimer;	// 56 = 0x38
    NSMutableDictionary *_remoteLTKs;	// 64 = 0x40
    NSMutableDictionary *_cachedSessions;	// 72 = 0x48
    NSMutableDictionary *_cachedSessionKeys;	// 80 = 0x50
    NSMutableDictionary *_watchIDsToPairingRecords;	// 88 = 0x58
    NSMutableDictionary *_preferredRemoteLTKForDeviceID;	// 96 = 0x60
    NSMutableDictionary *_escrowSecretForDeviceID;	// 104 = 0x68
    NSMutableArray *_watchIDsMissingSessionKey;	// 112 = 0x70
    NSString *_remoteLTKStorageFilePath;	// 120 = 0x78
    NSString *_watchIDsToPairingRecordsStorageFilePath;	// 128 = 0x80
    NSString *_companionIDStorageFilePath;	// 136 = 0x88
    NSString *_watchIDToCompanionIDStorageFilePath;	// 144 = 0x90
}

+ (_Bool)useKeychainForLTKSyncing;	// IMP=0x002000000011248b
+ (id)sharedManager;	// IMP=0x0010000000105684
- (void).cxx_destruct;	// IMP=0x00200000001156d4
@property(readonly, nonatomic) struct os_unfair_lock_s cachedSessionKeysLock; // @synthesize cachedSessionKeysLock=_cachedSessionKeysLock;
@property(copy, nonatomic) NSString *watchIDToCompanionIDStorageFilePath; // @synthesize watchIDToCompanionIDStorageFilePath=_watchIDToCompanionIDStorageFilePath;
@property(copy, nonatomic) NSString *companionIDStorageFilePath; // @synthesize companionIDStorageFilePath=_companionIDStorageFilePath;
@property(copy, nonatomic) NSString *watchIDsToPairingRecordsStorageFilePath; // @synthesize watchIDsToPairingRecordsStorageFilePath=_watchIDsToPairingRecordsStorageFilePath;
@property(copy, nonatomic) NSString *remoteLTKStorageFilePath; // @synthesize remoteLTKStorageFilePath=_remoteLTKStorageFilePath;
@property(retain, nonatomic) NSMutableArray *watchIDsMissingSessionKey; // @synthesize watchIDsMissingSessionKey=_watchIDsMissingSessionKey;
@property(retain, nonatomic) NSMutableDictionary *escrowSecretForDeviceID; // @synthesize escrowSecretForDeviceID=_escrowSecretForDeviceID;
@property(retain, nonatomic) NSMutableDictionary *preferredRemoteLTKForDeviceID; // @synthesize preferredRemoteLTKForDeviceID=_preferredRemoteLTKForDeviceID;
@property(retain, nonatomic) NSMutableDictionary *watchIDsToPairingRecords; // @synthesize watchIDsToPairingRecords=_watchIDsToPairingRecords;
@property(retain, nonatomic) NSMutableDictionary *cachedSessionKeys; // @synthesize cachedSessionKeys=_cachedSessionKeys;
@property(retain, nonatomic) NSMutableDictionary *cachedSessions; // @synthesize cachedSessions=_cachedSessions;
@property(retain, nonatomic) NSMutableDictionary *remoteLTKs; // @synthesize remoteLTKs=_remoteLTKs;
@property(retain) NSObject<OS_dispatch_source> *keybagAssertionTimer; // @synthesize keybagAssertionTimer=_keybagAssertionTimer;
@property(copy, nonatomic) NSString *altDSID; // @synthesize altDSID=_altDSID;
@property(copy, nonatomic) NSData *localLTK; // @synthesize localLTK=_localLTK;
@property(nonatomic) _Bool t208Machine; // @synthesize t208Machine=_t208Machine;
@property(nonatomic) _Bool autoUnlockDisabledDueToManagement; // @synthesize autoUnlockDisabledDueToManagement=_autoUnlockDisabledDueToManagement;
@property(copy, nonatomic) NSData *localAttestedLTK; // @synthesize localAttestedLTK=_localAttestedLTK;
@property(nonatomic) _Bool wristDetectDisabled; // @synthesize wristDetectDisabled=_wristDetectDisabled;
@property(copy, nonatomic) NSString *state; // @synthesize state=_state;
@property(copy, nonatomic) NSString *localDeviceID; // @synthesize localDeviceID=_localDeviceID;
- (void)updateDynamicStoreEnabled;	// IMP=0x001000000011545c
- (id)baseDictionary;	// IMP=0x00100000001153ec
- (id)baseLocalKeysDictionary;	// IMP=0x001000000011539f
- (id)baseLocalKeysDictionaryForDevice:(id)arg1 type:(id)arg2;	// IMP=0x00100000001152f0
- (id)baseModernSyncedDictionary;	// IMP=0x001000000011527d
- (id)attestedDictionaryForDevice:(id)arg1;	// IMP=0x00100000001151d7
- (id)modernSyncedDictionaryForDevice:(id)arg1;	// IMP=0x0010000000115132
- (id)baseSyncedDictionary;	// IMP=0x00100000001150e5
- (id)syncedDictionaryForDevice:(id)arg1;	// IMP=0x0010000000115040
- (id)baseRangingDictionary;	// IMP=0x0010000000114fcd
- (id)baseRangingDictionaryForDevice:(id)arg1;	// IMP=0x0010000000114f5e
- (id)keychainDataForQuery:(id)arg1;	// IMP=0x0010000000114e32
- (void)deleteAllRangingKeys;	// IMP=0x0010000000114c68
- (void)deleteRangingKeyForDeviceID:(id)arg1;	// IMP=0x0010000000114ac8
- (_Bool)storeRangingKey:(id)arg1 forDeviceID:(id)arg2;	// IMP=0x001000000011484d
- (id)rangingKeyForDeviceID:(id)arg1;	// IMP=0x00100000001147ee
- (id)sessionKeyForDeviceID:(id)arg1;	// IMP=0x0010000000114680
- (_Bool)sessionKeyExistsForDeviceID:(id)arg1;	// IMP=0x001000000011464d
- (id)deriveKeyFromSharedSecret:(id)arg1;	// IMP=0x0010000000114541
- (void)updateSessionKeys;	// IMP=0x0010000000113fe9
- (void)updateRangingKeysIfNeccesary;	// IMP=0x0010000000113c58
- (void)deleteLocalAttestedLTK;	// IMP=0x0010000000113b62
- (id)ltkInfoForDeviceID:(id)arg1 modern:(_Bool)arg2 attested:(_Bool)arg3;	// IMP=0x0010000000113a88
- (id)ltkInfoForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x0010000000113a73
- (id)ltkInfoForDeviceID:(id)arg1;	// IMP=0x0010000000113a5f
- (id)longTermKeyIDForDeviceID:(id)arg1;	// IMP=0x00100000001139b1
- (id)longTermKeyForDevice:(id)arg1 modern:(_Bool)arg2;	// IMP=0x0010000000113961
- (id)anyLongTermKeyForDeviceID:(id)arg1;	// IMP=0x00100000001138d2
- (void)deleteRemoteLongTermKeyForDeviceID:(id)arg1 modern:(_Bool)arg2 tombstone:(_Bool)arg3;	// IMP=0x00100000001137f1
- (_Bool)storeAttestedLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3;	// IMP=0x0010000000113558
- (_Bool)storeLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3 modern:(_Bool)arg4;	// IMP=0x00100000001132ba
- (_Bool)storeLongTermKey:(id)arg1 forDeviceID:(id)arg2 name:(id)arg3;	// IMP=0x0010000000113211
- (void)deleteAllEscrowSecrets;	// IMP=0x0010000000113146
- (void)deleteEscrowSecretForDeviceID:(id)arg1;	// IMP=0x001000000011302b
- (id)escrowSecretCreationDateForDeviceID:(id)arg1;	// IMP=0x0010000000112ef0
- (_Bool)escrowSecretExistsForDevice:(id)arg1;	// IMP=0x0010000000112e26
- (_Bool)storeEscrowSecret:(id)arg1 pairingID:(id)arg2 deviceID:(id)arg3 requiresUnlock:(_Bool)arg4;	// IMP=0x0010000000112c8b
- (id)keyPairingIDForDeviceID:(id)arg1;	// IMP=0x0010000000112bd3
- (void)expireAllCachedEscrowSecrets;	// IMP=0x0010000000112b36
- (_Bool)cachedEscrowSecretIsValidForDeviceID:(id)arg1;	// IMP=0x0010000000112a9a
- (_Bool)cachedEscrowSecretExistsForDeviceID:(id)arg1;	// IMP=0x0010000000112a17
- (id)escrowSecretForDevice:(id)arg1;	// IMP=0x001000000011260e
- (_Bool)storeKeychainItemWithAttributeDictionary:(id)arg1 updateDictionary:(id)arg2 addDictionary:(id)arg3;	// IMP=0x0010000000112493
- (id)autoUnlockFolderPath;	// IMP=0x0010000000112385
- (id)loadCompanionIDs;	// IMP=0x0010000000111f9d
- (void)deleteLegacyCompanionIDs;	// IMP=0x0010000000111e80
- (id)migrateLegacyCompanionIDs:(id)arg1;	// IMP=0x0010000000111d83
- (id)loadLegacyWatchIDToCompanionIDMapping;	// IMP=0x0010000000111aaa
- (void)deleteLegacyWatchToCompanionIDs;	// IMP=0x001000000011198d
- (void)migrateLegacyWatchIDToCompanionIDs;	// IMP=0x0010000000111836
- (void)loadWatchIDsToPairingRecords;	// IMP=0x00100000001112e7
- (void)saveWatchIDsToPairingRecords;	// IMP=0x0010000000111137
- (void)removePairingRecordForWatchID:(id)arg1;	// IMP=0x00100000001110b8
- (void)removePairingIDForWatchID:(id)arg1;	// IMP=0x0010000000110f58
- (id)pairingIDForWatchID:(id)arg1;	// IMP=0x0010000000110eb0
- (void)setPairingID:(id)arg1 forWatchID:(id)arg2;	// IMP=0x0010000000110d20
- (void)removeCompanionIDForWatchID:(id)arg1;	// IMP=0x0010000000110bc0
- (id)companionIDForWatchID:(id)arg1;	// IMP=0x0010000000110b18
- (void)setCompanionID:(id)arg1 forWatchID:(id)arg2;	// IMP=0x0010000000110988
- (id)allPairedWatchDeviceIDs;	// IMP=0x0010000000110938
- (MISSING_TYPE *)reloadPairingRecordsIfNeeded;	// IMP=0x001000000011089c
- (void)loadRemoteLTKs;	// IMP=0x0010000000110381
- (void)loadRemoteLTKsIfNeeded;	// IMP=0x0010000000110338
- (void)saveRemoteLTKs;	// IMP=0x0010000000110179
- (void)clearRemoteLTKs;	// IMP=0x00100000001100a3
- (void)removeRemoteLTKForDeviceID:(id)arg1;	// IMP=0x001000000010ffa7
- (void)addRemoteLTK:(id)arg1 ltkHash:(id)arg2 ltkModDate:(id)arg3 modernLTK:(id)arg4 modernLTKHash:(id)arg5 modernLTKModeDate:(id)arg6 deviceID:(id)arg7;	// IMP=0x001000000010fce1
- (_Bool)disablePairingWithKeyDevice:(id)arg1;	// IMP=0x001000000010fb83
- (_Bool)ltkExistsForKeyDevice:(id)arg1 updateLTKs:(_Bool)arg2;	// IMP=0x001000000010fa19
- (_Bool)ltkExistsForKeyDevice:(id)arg1;	// IMP=0x001000000010fa05
- (void)removeAllRemoteLTKsOnSignOut;	// IMP=0x001000000010f723
- (void)disablePairingForAllKeyDevices;	// IMP=0x001000000010f42f
- (void)deleteEscrowSecretForPhones;	// IMP=0x001000000010f0a5
- (void)deleteEscrowSecretForAllDevices;	// IMP=0x001000000010ecc3
- (void)handleRequiredStateDisabled;	// IMP=0x001000000010ecb1
- (_Bool)deviceEnabledAsKey:(id)arg1;	// IMP=0x001000000010eb40
- (_Bool)deviceEnabledAsKeyForAnyMac;	// IMP=0x001000000010e894
- (_Bool)deviceEnabledAsKeyForAnyDevice;	// IMP=0x001000000010e584
- (_Bool)deviceEnabledAsKeyForAnyIDSMac;	// IMP=0x001000000010e2d8
- (_Bool)deviceEnabledAsKeyForAnyIDSDevice;	// IMP=0x001000000010dfc8
- (_Bool)localDeviceEnabledAsKeyForMac;	// IMP=0x001000000010df56
- (_Bool)localDeviceEnabledAsKey;	// IMP=0x001000000010dee4
- (void)transport:(id)arg1 didReceivePayload:(id)arg2 type:(unsigned short)arg3 deviceID:(id)arg4;	// IMP=0x001000000010de17
- (void)handleLTKResponse:(id)arg1;	// IMP=0x001000000010de11
- (void)restartKeybagAssertionTimer;	// IMP=0x001000000010dc1d
- (void)releaseKeybagAssertion;	// IMP=0x001000000010dbc1
- (void)takeMobileKeybagAssertion;	// IMP=0x001000000010db65
- (id)ltksForRequest:(id)arg1;	// IMP=0x001000000010d565
- (void)handleLTKRequest:(id)arg1;	// IMP=0x001000000010ccc9
- (void)sendLTKResponseWithPayload:(id)arg1 viewState:(id)arg2 needsUnlock:(id)arg3 currentlySyncing:(id)arg4;	// IMP=0x001000000010ca10
- (void)fetchLTKsFromCompanionForDeviceID:(id)arg1 needsLTK:(_Bool)arg2 remoteNeedsLTK:(_Bool)arg3 checkViewState:(_Bool)arg4;	// IMP=0x001000000010ca0a
- (void)fetchLTKsFromCompanion:(_Bool)arg1;	// IMP=0x001000000010c9ee
- (void)updatePreferredRemoteLTKForDeviceID:(id)arg1;	// IMP=0x001000000010c640
- (id)remoteLTKList;	// IMP=0x001000000010c43a
- (id)remoteLTKEntryForDeviceID:(id)arg1;	// IMP=0x001000000010c3c0
- (id)remoteLTKHashForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x001000000010c351
- (_Bool)hashMatchesAnyRemoteLTKForDeviceID:(id)arg1 ltkHash:(id)arg2 isPreferred:(_Bool *)arg3;	// IMP=0x001000000010bfe4
- (id)remoteLTKForDeviceID:(id)arg1;	// IMP=0x001000000010bf06
- (id)allRemoteLTKData;	// IMP=0x001000000010bdda
- (void)signAndStoreRemoteLTK:(id)arg1 forDeviceID:(id)arg2;	// IMP=0x001000000010b96f
- (id)signedDevices;	// IMP=0x001000000010b81b
- (id)modernSignedDevices;	// IMP=0x001000000010b6c7
- (id)modificationDataForDeviceID:(id)arg1 modern:(_Bool)arg2;	// IMP=0x001000000010b534
- (id)keychainDevices:(_Bool)arg1;	// IMP=0x001000000010b280
- (id)allKeychainDevices;	// IMP=0x001000000010b26c
- (_Bool)signLTK:(id)arg1 ltkModDate:(id)arg2 modernLTK:(id)arg3 modernLTKModDate:(id)arg4 deviceID:(id)arg5;	// IMP=0x001000000010aed5
- (_Bool)signLTK:(id)arg1 modernLTK:(id)arg2 forDeviceID:(id)arg3;	// IMP=0x001000000010aeab
- (_Bool)signLTKsForDeviceID:(id)arg1;	// IMP=0x001000000010ae07
- (void)resignRemoteLTKForDeviceID:(id)arg1;	// IMP=0x001000000010adf5
- (void)checkRemoteLTKForDeviceID:(id)arg1;	// IMP=0x001000000010abe2
- (void)checkRemoteLTKs;	// IMP=0x001000000010abdc
- (void)updateRemoteLTKs;	// IMP=0x001000000010abc6
- (void)updateLTKsForDeviceID:(id)arg1 staleRemoteLTK:(_Bool)arg2;	// IMP=0x001000000010aabb
- (void)generateLocalAttestedLTKIfNeccessaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000010aa21
- (int)ltkSyncStatusForDeviceID:(id)arg1 hash:(id)arg2 modern:(_Bool)arg3;	// IMP=0x001000000010a8a2
- (_Bool)deviceIsLocalDevice:(id)arg1;	// IMP=0x001000000010a834
- (long long)keyClassForDeviceID:(id)arg1;	// IMP=0x001000000010a74a
- (long long)ltkKeyClass;	// IMP=0x001000000010a69a
- (void)updateLocalLTKForSignout;	// IMP=0x001000000010a54f
- (id)ltkHashForLocalLTK;	// IMP=0x001000000010a4d0
- (void)checkLocalAttestedLTK;	// IMP=0x001000000010a20d
- (void)checkLocalLTK;	// IMP=0x0010000000109a0b
- (void)generateLocalLTKWithAttestation:(_Bool)arg1 forceDCRTRetrievalWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000010938f
- (void)generateLocalLTKWithAttestation:(_Bool)arg1;	// IMP=0x001000000010937b
- (_Bool)loadLocalAttestedLTKIfNecessary;	// IMP=0x00100000001090d9
- (_Bool)loadLocalLTK;	// IMP=0x0010000000108a9a
- (id)deviceIDsMissingSessionKey;	// IMP=0x0010000000108974
- (void)clearAllDeviceIDsMissingSessionKeys;	// IMP=0x001000000010884e
- (void)removeDeviceIDMissingSessionKey:(id)arg1;	// IMP=0x001000000010870c
- (void)addDeviceIDMissingSessionKey:(id)arg1;	// IMP=0x0010000000108593
- (id)decryptMessage:(id)arg1 authTag:(id)arg2 nonce:(id)arg3 bluetoothID:(id)arg4 cachedDevices:(_Bool)arg5 errorCode:(long long *)arg6;	// IMP=0x0010000000107b18
- (_Bool)encryptMessageData:(id)arg1 deviceID:(id)arg2 encryptedMessage:(id *)arg3 authTag:(id *)arg4 nonce:(id *)arg5;	// IMP=0x00100000001077e2
- (_Bool)canCreateTokenSessionForDeviceID:(id)arg1;	// IMP=0x0010000000107798
- (id)aksAuthorizationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 externalACMContext:(id)arg3;	// IMP=0x0010000000107516
- (id)aksAuthorizationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x0010000000107501
- (id)aksAuthSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 usingEscrow:(_Bool)arg3 attestation:(_Bool)arg4;	// IMP=0x0010000000107113
- (id)aksAuthSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x00100000001070fb
- (id)aksRegistrationSessionForDeviceID:(id)arg1 originator:(_Bool)arg2;	// IMP=0x0010000000106f5c
- (id)aksPairingSessionForDeviceID:(id)arg1 originator:(_Bool)arg2 errorCode:(long long *)arg3 wantsAttestation:(_Bool)arg4 needsEscrow:(_Bool)arg5;	// IMP=0x0010000000106c61
- (void)consoleUserChanged:(id)arg1;	// IMP=0x0010000000106b42
- (void)handleKeyBagLockStateChanged;	// IMP=0x00100000001069ad
- (void)screenLockUnlocked:(id)arg1;	// IMP=0x00100000001068f1
- (void)appleAccountSignedOut:(id)arg1;	// IMP=0x0010000000106843
- (void)appleAccountSignedIn:(id)arg1;	// IMP=0x00100000001067e7
- (void)deviceFirstUnlocked:(id)arg1;	// IMP=0x0010000000106679
- (void)handleManagementChanged:(id)arg1;	// IMP=0x0010000000106579
- (void)addObservers;	// IMP=0x00100000001063e5
- (void)loadLocalUniqueIDIfNeeded;	// IMP=0x00100000001062e2
@property(readonly, nonatomic) _Bool viewSyncing;
- (void)updateLocalLTK;	// IMP=0x0010000000105b5d
- (void)updateLTKs;	// IMP=0x0010000000105abe
- (void)start;	// IMP=0x00100000001058ab
- (id)init;	// IMP=0x00100000001056d9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

