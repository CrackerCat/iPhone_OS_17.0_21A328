//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CARMessagingServiceConnector, CARSessionRequestClient, CARSessionStatus, CRBluetoothManager, CRCarKitMonitoringServiceAgent, CRCarPlayPreferences, CRPairingPromptFlowController, CRSetupPromptDirectorAgent, CRVehicle, CRVehicleStore, CRWiFiCarManager, CRWirelessSessionAssertionManager, NSMutableArray, NSMutableDictionary, NSNumber, NSString;
@protocol CRMessagingServiceVehicleRepresenting;

@interface CRCarKitServiceAgent : NSObject
{
    _Bool _carPlaySimulatorActive;	// 8 = 0x8
    CRCarKitMonitoringServiceAgent *_monitoringService;	// 16 = 0x10
    CRSetupPromptDirectorAgent *_setupPromptDirector;	// 24 = 0x18
    CRWirelessSessionAssertionManager *_assertionManager;	// 32 = 0x20
    CRBluetoothManager *_bluetoothManager;	// 40 = 0x28
    CARMessagingServiceConnector *_messagingConnector;	// 48 = 0x30
    CRCarPlayPreferences *_preferencesManager;	// 56 = 0x38
    CARSessionStatus *_sessionStatus;	// 64 = 0x40
    CARSessionRequestClient *_sessionRequestClient;	// 72 = 0x48
    CRVehicleStore *_vehicleStore;	// 80 = 0x50
    CRWiFiCarManager *_wifiManager;	// 88 = 0x58
    CRPairingPromptFlowController *_currentPromptFlowController;	// 96 = 0x60
    NSMutableArray *_outstandingApprovalAlerts;	// 104 = 0x68
    NSMutableArray *_outstandingPairingAlerts;	// 112 = 0x70
    NSMutableArray *_outstandingEnableWiFiAlerts;	// 120 = 0x78
    NSMutableArray *_outstandingEnhancedIntegrationAlerts;	// 128 = 0x80
    NSNumber *_cachedCarPlayAllowedChangeValue;	// 136 = 0x88
    NSMutableDictionary *_serviceCountDuringAlertForBluetoothAddress;	// 144 = 0x90
    NSString *_lastStartSessionDeviceID;	// 152 = 0x98
    id <CRMessagingServiceVehicleRepresenting> _BTPowerMessagingVehicle;	// 160 = 0xa0
    CRVehicle *_BTPowerStoredVehicle;	// 168 = 0xa8
}

+ (unsigned long long)_declineTypeForOOBPairingMessagingVehicle:(id)arg1;	// IMP=0x00200000000226d3
+ (unsigned long long)_pairingDeclineCountForIdentifier:(id)arg1;	// IMP=0x00100000000225b3
+ (id)_pairingIdentifierForMessagingVehicle:(id)arg1;	// IMP=0x001000000002256a
- (void).cxx_destruct;	// IMP=0x002000000002564e
@property(retain, nonatomic) CRVehicle *BTPowerStoredVehicle; // @synthesize BTPowerStoredVehicle=_BTPowerStoredVehicle;
@property(retain, nonatomic) id <CRMessagingServiceVehicleRepresenting> BTPowerMessagingVehicle; // @synthesize BTPowerMessagingVehicle=_BTPowerMessagingVehicle;
@property(retain, nonatomic) NSString *lastStartSessionDeviceID; // @synthesize lastStartSessionDeviceID=_lastStartSessionDeviceID;
@property(retain, nonatomic) NSMutableDictionary *serviceCountDuringAlertForBluetoothAddress; // @synthesize serviceCountDuringAlertForBluetoothAddress=_serviceCountDuringAlertForBluetoothAddress;
@property(nonatomic) NSNumber *cachedCarPlayAllowedChangeValue; // @synthesize cachedCarPlayAllowedChangeValue=_cachedCarPlayAllowedChangeValue;
@property(retain, nonatomic) NSMutableArray *outstandingEnhancedIntegrationAlerts; // @synthesize outstandingEnhancedIntegrationAlerts=_outstandingEnhancedIntegrationAlerts;
@property(retain, nonatomic) NSMutableArray *outstandingEnableWiFiAlerts; // @synthesize outstandingEnableWiFiAlerts=_outstandingEnableWiFiAlerts;
@property(retain, nonatomic) NSMutableArray *outstandingPairingAlerts; // @synthesize outstandingPairingAlerts=_outstandingPairingAlerts;
@property(retain, nonatomic) NSMutableArray *outstandingApprovalAlerts; // @synthesize outstandingApprovalAlerts=_outstandingApprovalAlerts;
@property(retain, nonatomic) CRPairingPromptFlowController *currentPromptFlowController; // @synthesize currentPromptFlowController=_currentPromptFlowController;
@property(retain, nonatomic) CRWiFiCarManager *wifiManager; // @synthesize wifiManager=_wifiManager;
@property(retain, nonatomic) CRVehicleStore *vehicleStore; // @synthesize vehicleStore=_vehicleStore;
@property(retain, nonatomic) CARSessionRequestClient *sessionRequestClient; // @synthesize sessionRequestClient=_sessionRequestClient;
@property(retain, nonatomic) CARSessionStatus *sessionStatus; // @synthesize sessionStatus=_sessionStatus;
@property(retain, nonatomic) CRCarPlayPreferences *preferencesManager; // @synthesize preferencesManager=_preferencesManager;
@property(retain, nonatomic) CARMessagingServiceConnector *messagingConnector; // @synthesize messagingConnector=_messagingConnector;
@property(retain, nonatomic) CRBluetoothManager *bluetoothManager; // @synthesize bluetoothManager=_bluetoothManager;
@property(retain, nonatomic) CRWirelessSessionAssertionManager *assertionManager; // @synthesize assertionManager=_assertionManager;
@property(nonatomic) __weak CRSetupPromptDirectorAgent *setupPromptDirector; // @synthesize setupPromptDirector=_setupPromptDirector;
@property(nonatomic) __weak CRCarKitMonitoringServiceAgent *monitoringService; // @synthesize monitoringService=_monitoringService;
@property(nonatomic) _Bool carPlaySimulatorActive; // @synthesize carPlaySimulatorActive=_carPlaySimulatorActive;
- (void)sessionDidDisconnect:(id)arg1;	// IMP=0x00100000000250f1
- (void)bluetoothManager:(id)arg1 didChangePowerState:(_Bool)arg2;	// IMP=0x001000000002500a
- (void)_dismissEnhancedIntegrationAlerts;	// IMP=0x0010000000024edb
- (void)_dismissEnhancedIntegrationAlertForMessagingVehicle:(id)arg1;	// IMP=0x0010000000024cfc
- (void)_presentEnhancedIntegrationAlertForMessagingVehicle:(id)arg1;	// IMP=0x00100000000248c4
- (void)_enhancedIntegrationUpdatedForMessagingVehicle:(id)arg1 status:(unsigned long long)arg2;	// IMP=0x0010000000024704
- (void)vehicleIdentifierForCertificateSerial:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000243d0
- (void)_dismissReconnectionEnableWiFiAlertExceptForVehicle:(id)arg1;	// IMP=0x0010000000024179
- (void)_dismissReconnectionEnableWiFiAlertForVehicle:(id)arg1;	// IMP=0x0010000000023f22
- (id)_presentedReconnectionEnableWiFiAlertForVehicle:(id)arg1;	// IMP=0x0010000000023d4f
- (void)_presentReconnectionEnableWiFiAlertForVehicle:(id)arg1;	// IMP=0x00100000000238bd
- (void)_dismissPairingAlerts;	// IMP=0x001000000002378e
- (void)_dismissPairingAlertForMessagingVehicle:(id)arg1;	// IMP=0x00100000000235af
- (void)_beginWiredPairingWithMessagingVehicle:(id)arg1 storedVehicle:(id)arg2;	// IMP=0x0010000000022ff1
- (void)_presentWiredBluetoothPairingAlertForMessagingVehicle:(id)arg1 storedVehicle:(id)arg2;	// IMP=0x001000000002280e
- (void)_dismissApprovalAlerts;	// IMP=0x001000000002243b
- (void)_dismissApprovalAlertForMessagingVehicle:(id)arg1;	// IMP=0x001000000002225c
- (void)_presentApprovalUsingAlertsForMessagingVehicle:(id)arg1;	// IMP=0x00100000000217c9
- (void)_presentApprovalUsingCarPlaySetupForMessagingVehicle:(id)arg1;	// IMP=0x00100000000216d4
- (void)_presentApprovalForMessagingVehicle:(id)arg1;	// IMP=0x001000000002161d
- (void)pairingPromptFlow:(id)arg1 receivedEnhancedIntegrationResponse:(_Bool)arg2;	// IMP=0x001000000002153e
- (void)pairingPromptFlow:(id)arg1 receivedConnectCarPlayResponse:(_Bool)arg2;	// IMP=0x001000000002131d
- (void)pairingPromptFlow:(id)arg1 receivedUseWirelessResponse:(_Bool)arg2;	// IMP=0x00100000000211ae
- (void)pairingPromptFlow:(id)arg1 receivedAllowWhileLockedResponse:(_Bool)arg2;	// IMP=0x0010000000021024
- (void)didCompletePairingPromptFlow:(id)arg1;	// IMP=0x0010000000020fae
- (void)didCancelPairingPromptFlow:(id)arg1;	// IMP=0x0010000000020e70
- (void)_dismissPairingPromptFlow;	// IMP=0x0010000000020de8
- (void)pairingPromptFlow:(id)arg1 wantsToPerformPresentation:(CDUnknownBlockType)arg2;	// IMP=0x0010000000020ab7
- (_Bool)enhancedIntegrationSupportedForPairingPromptFlow:(id)arg1;	// IMP=0x00100000000209d3
- (_Bool)_requestWiFiCredentialsIfNecessaryForApprovedMessagingVehicle:(id)arg1;	// IMP=0x0010000000020925
- (_Bool)_sendDeviceIdentifiersForMessagingVehicle:(id)arg1 pairingStatus:(unsigned long long)arg2;	// IMP=0x0010000000020826
- (void)_sendCarPlayAvailabilityForMessagingVehicle:(id)arg1 storedVehicle:(id)arg2;	// IMP=0x0010000000020575
- (_Bool)attemptConnectionWithVehicles:(id)arg1;	// IMP=0x001000000001fefe
- (_Bool)removeVehicle:(id)arg1;	// IMP=0x001000000001f8d1
- (id)saveVehicle:(id)arg1;	// IMP=0x001000000001f1d7
- (id)pairedVehiclesConnectedOnBluetooth;	// IMP=0x001000000001ecae
- (void)updateStoredVehicle:(id)arg1 usingMessagingVehicle:(id)arg2;	// IMP=0x001000000001e897
- (void)enumerateStoredVehiclesForMessagingVehicles:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000001e67f
- (id)vehicleMatchingMessagingVehicle:(id)arg1 inVehicles:(id)arg2;	// IMP=0x001000000001e44d
- (void)updateIncompletePairingsMatchingMessagingVehicles:(id)arg1;	// IMP=0x001000000001de6d
- (id)_wirelessPairingAnalyticsDescriptionForMessagingVehicle:(id)arg1 storedVehicle:(id)arg2;	// IMP=0x001000000001db81
- (void)handleDidConnectMessagingToVehicles:(id)arg1;	// IMP=0x001000000001d60b
- (void)handleAnyMessagingConnectionsToVehicles;	// IMP=0x001000000001d593
- (_Bool)_shouldPromptEnhancedIntegrationForStoredVehicle:(id)arg1 messagingVehicle:(id)arg2;	// IMP=0x001000000001d48a
- (void);	// IMP=0x001000000001d2ac
- (void)_saveWiFiCredentials:(id)arg1 fromMessagingVehicle:(id)arg2 forWirelessPairedVehicle:(id)arg3 result:(CDUnknownBlockType)arg4;	// IMP=0x001000000001cdef
- (void)_saveWiFiCredentials:(id)arg1 forAccessoryConnectionIdentifier:(unsigned long long)arg2 result:(CDUnknownBlockType)arg3;	// IMP=0x001000000001cc07
- (void)_findWirelessPairedVehicleForMessagingVehicle:(id)arg1 result:(CDUnknownBlockType)arg2;	// IMP=0x001000000001c7ff
- (void)_findWirelessPairedVehicleForAccessoryConnectionIdentifier:(unsigned long long)arg1 result:(CDUnknownBlockType)arg2;	// IMP=0x001000000001c653
- (_Bool)_isVehicleActionable:(id)arg1;	// IMP=0x001000000001c636
- (_Bool)_isRestricted:(id *)arg1;	// IMP=0x001000000001c5a2
- (_Bool)postOutOfCarNotificationForVehicle:(id)arg1;	// IMP=0x001000000001c463
- (_Bool)postInCarNotificationForVehicle:(id)arg1;	// IMP=0x001000000001c284
- (void)handleVehicleStoreAvailabiltyDidChange:(id)arg1;	// IMP=0x001000000001c1d8
- (void)_handleCarPlayAllowedDidChange;	// IMP=0x001000000001bdf7
- (void)handleCarPlayAllowedDidChange;	// IMP=0x001000000001bd96
- (void)serviceConnector:(id)arg1 didDisconnectVehicle:(id)arg2;	// IMP=0x001000000001bcc0
- (void)serviceConnector:(id)arg1 receivedStartSessionMessage:(id)arg2 fromVehicle:(id)arg3;	// IMP=0x001000000001b6f9
- (void)serviceConnector:(id)arg1 didUpdateVehicle:(id)arg2;	// IMP=0x001000000001b597
- (void)serviceConnector:(id)arg1 didConnectVehicle:(id)arg2;	// IMP=0x001000000001b4b3
- (void)fetchScaledDisplaysWithReply:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001b401
- (id)accessoryRadarDescription:(id)arg1;	// IMP=0x001000000001b288
- (void)fetchInstrumentClusterURLsWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000001b20e
- (void)handleCarPlayDiagnosticsWithDeviceScreenshotURL:(id)arg1 carScreenshotURL:(id)arg2 attachmentURLs:(id)arg3 activeBundleIdentifier:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001a8b6
- (void)isCarPlayAllowedWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000001a83a
- (void)handleCarPlayRestrictionChangedWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000001a7b4
- (void)isEnhancedIntegrationEnabledWithCertificateSerial:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001a3ea
- (void)isPairedWithCertificateSerial:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001a020
- (void)allowsConnectionsForCertificateSerial:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000019c44
- (void)allowsConnectionsForWiFiUUID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000019847
- (void)saveWiFiCredentials:(id)arg1 forAccessoryConnectionIdentifier:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000194ed
- (void)wantsCarPlayControlAdvertisingForWiFiUUID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000018eff
- (void)wantsCarPlayControlAdvertisingForUSBWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000018b62
- (void)postBannerToPhone:(id)arg1 notificationMessage:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000018a92
- (void)handleCarPlayConnectionRequestForConnectionID:(unsigned int)arg1 startSessionProperties:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000017e93
- (void)isBluetoothInCarWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000017af6
- (void)handleDidDisconnectBluetoothAddress:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001792b
- (void)handleDidConnectBluetoothAddress:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001711a
- (void)hasVehiclesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000017037
- (void)fetchAllVehiclesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000016dc6
- (void)removeVehicle:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000016c89
- (void)saveVehicle:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000016a7e
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x00100000000165bf
- (void)dealloc;	// IMP=0x001000000001654a
- (id)initWithVehicleStore:(id)arg1 sessionStatus:(id)arg2 bluetoothManager:(id)arg3 preferences:(id)arg4 connectionTimeServiceAgent:(id)arg5;	// IMP=0x0010000000016169

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

