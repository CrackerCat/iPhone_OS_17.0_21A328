//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class GKPseudonymManager, NSString, _TtC14GameDaemonCore13GameDaemonTTR;
@protocol GKNearbyDelegate;

@interface GKMultiplayerMatchService
{
    GKPseudonymManager *_pseudonymManager;	// 8 = 0x8
    id <GKNearbyDelegate> _delegate;	// 16 = 0x10
    _TtC14GameDaemonCore13GameDaemonTTR *_ttrHelper;	// 24 = 0x18
}

+ (id)makePlayersDictionaryForMatchRequest:(id)arg1 transportContext:(id)arg2;	// IMP=0x002000000008e37f
+ (id)makeBaseServerRequestForMatchRequest:(id)arg1 playerCount:(long long)arg2 rematchID:(id)arg3 connInfo:(long long)arg4;	// IMP=0x001000000008defa
+ (unsigned long long)requiredEntitlements;	// IMP=0x001000000008c92c
+ (Class)interfaceClass;	// IMP=0x001000000008c91b
- (void).cxx_destruct;	// IMP=0x00200000000a55f5
@property(retain, nonatomic) _TtC14GameDaemonCore13GameDaemonTTR *ttrHelper; // @synthesize ttrHelper=_ttrHelper;
@property(nonatomic) __weak id <GKNearbyDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GKPseudonymManager *pseudonymManager; // @synthesize pseudonymManager=_pseudonymManager;
- (oneway void)uploadLogsForRadar:(id)arg1 from:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000a522c
- (oneway void)fileMultiplayerTTRWithCallBackIdentifier:(id)arg1 descriptionAddition:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000a4ecf
- (oneway void)rolloutPseudonyms;	// IMP=0x00100000000a4e92
- (oneway void)sendDataToParticipant:(id)arg1 deviceID:(id)arg2 data:(id)arg3 usePeerDiscovery:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000a4a27
- (oneway void)forgetParticipant:(id)arg1 deviceID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000a4868
- (oneway void)setupNearbyDiscovery;	// IMP=0x00100000000a3a08
- (oneway void)fetchTransportOverrideWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a3806
- (oneway void)isGameCenterMultiplayerGameForBundleID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a357d
- (oneway void)fetchOnDeviceMultiplayerBundleIDsWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a311f
- (oneway void)fetchOnDeviceMultiplayerBundleIDsForNewBundleID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a2c60
- (oneway void)fetchDevicePushToken:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a2aa4
- (oneway void)nearbyInviteWasCancelled:(id)arg1;	// IMP=0x00100000000a2a37
- (oneway void)presentNearbyInvite:(id)arg1;	// IMP=0x00100000000a29ca
- (oneway void)stopNearbyAdvertisingWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a2478
- (oneway void)startNearbyAdvertisingWithDiscoveryInfo:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a1eca
- (oneway void)stopNearbyBrowsingWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a1978
- (oneway void)startNearbyBrowsingWithPlayerID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a140d
- (oneway void)updateCacheWithNearbyProfileDictionary:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a0a98
- (oneway void)cancelRelayRequest:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a08a3
- (oneway void)updateRelayRequest:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a0526
- (oneway void)initiateRelayRequest:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000a01a9
- (oneway void)_performRelayAction:(id)arg1 request:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009fdb6
- (oneway void)requestTTRLogsWith:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009f046
- (oneway void)sendInvitationUpdate:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009e2ea
- (oneway void)sendReconnectInvitation:(id)arg1 toPlayer:(id)arg2 connectionData:(id)arg3 sessionToken:(id)arg4 pushToken:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000009d7b0
- (oneway void)removeInviteSessionIfNeeded;	// IMP=0x001000000009d491
- (oneway void)removeInviteSession;	// IMP=0x001000000009d454
- (oneway void)getInviteSessionTokenWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000009d293
- (oneway void)getPlayersToInviteWithHandlerV2:(CDUnknownBlockType)arg1;	// IMP=0x001000000009cebb
- (oneway void)hasCanceledMultiplayerInitiateBulletinForSessionToken:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000009cccf
- (oneway void)getAcceptedGameInviteWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000009c467
- (oneway void)declineGameInvite:(id)arg1 reason:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009c06b
- (oneway void)acceptGameInvite:(id)arg1 transportContext:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009b050
- (oneway void)putMultiPlayerGroup:(id)arg1 participants:(id)arg2 playedAt:(long long)arg3 bundleID:(id)arg4 numberOfAutomatched:(long long)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000009aa8b
- (oneway void)getMultiPlayerGroups:(CDUnknownBlockType)arg1;	// IMP=0x0010000000099933
- (void)convertToInternalObjects:(id)arg1 results:(id)arg2;	// IMP=0x00100000000994ba
- (id)ensureGroup:(id)arg1 participants:(id)arg2 playedAt:(long long)arg3 numberOfAutomatched:(long long)arg4 moc:(id)arg5 list:(id)arg6;	// IMP=0x0010000000098fdb
- (oneway void)cancelGameInviteWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000098aa6
- (oneway void)removePlayersFromGameInviteV2:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000981da
- (oneway void)invitePlayersForMatchRequest:(id)arg1 devicePushTokenMap:(id)arg2 isNearbyInvite:(_Bool)arg3 transportContext:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000095ee0
- (void)saveRecord:(id)arg1 shouldRetry:(_Bool)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000095bf6
- (_Bool)zoneNotFoundFromOperation:(id)arg1 operationError:(id)arg2;	// IMP=0x0010000000095891
- (void)saveRecord:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000095877
- (id)privateDatabase;	// IMP=0x0010000000095819
- (void)setupInviteShareWithRecordID:(id)arg1 rootRecord:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000957fe
- (void)setupInviteShareWithRecordID:(id)arg1 rootRecord:(id)arg2 shouldRetry:(_Bool)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000095262
- (oneway void)loadCloudKitShareURLWithPlayer:(id)arg1 matchRequest:(id)arg2 transportContext:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000009371d
- (void)initiateInvitationForMatchRequest:(id)arg1 recipients:(id)arg2 devicePushTokenMap:(id)arg3 isNearbyInvite:(_Bool)arg4 transportContext:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000091ae6
- (oneway void)setShareRecordID:(id)arg1;	// IMP=0x0010000000091a56
- (oneway void)hasExistingInviteSessionWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000919cb
- (oneway void)setShareInvitees:(id)arg1;	// IMP=0x0010000000090ff3
- (oneway void)getCompatibilityMatrix:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000090125
- (oneway void)getFlowRateWithPlayerGroup:(id)arg1 queueName:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000008ef92
- (oneway void)getFlowRateForQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008ef78
- (oneway void)getOverallFlowRateWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000008ef5f
- (oneway void)getFlowRateForPlayerGroup:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008eede
- (oneway void)cancelOutstandingMatchRequestWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000008ea5e
- (oneway void)getPlayersForMatchRequest:(id)arg1 playerCount:(long long)arg2 rematchID:(id)arg3 transportContext:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x001000000008d148
- (void)fetchPseudonymIfNeededWithTransportContext:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008ca74

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

