//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface SQLiteComparisonPredicate
{
    _Bool _forceFalse;	// 16 = 0x10
    long long _comparisonType;	// 24 = 0x18
    id _value;	// 32 = 0x20
}

+ (id)predicateWithProperty:(id)arg1 value:(id)arg2 comparisonType:(long long)arg3;	// IMP=0x002000000009579c
+ (id)predicateWithProperty:(id)arg1 bitwiseNotAndValue:(id)arg2;	// IMP=0x0010000000095784
+ (id)predicateWithProperty:(id)arg1 bitwiseAndValue:(id)arg2;	// IMP=0x001000000009576c
+ (id)predicateWithProperty:(id)arg1 lessThanValue:(id)arg2;	// IMP=0x0010000000095754
+ (id)predicateWithProperty:(id)arg1 greaterThanValue:(id)arg2;	// IMP=0x001000000009573c
+ (id)predicateWithProperty:(id)arg1 lessThanOrEqualToValue:(id)arg2;	// IMP=0x0010000000095724
+ (id)predicateWithProperty:(id)arg1 greaterThanOrEqualToValue:(id)arg2;	// IMP=0x001000000009570c
+ (id)predicateWithProperty:(id)arg1 notEqualToValue:(id)arg2;	// IMP=0x00100000000956f4
+ (id)predicateWithProperty:(id)arg1 equalToValue:(id)arg2;	// IMP=0x00100000000956dc
- (void).cxx_destruct;	// IMP=0x0020000000095dc8
@property(readonly, nonatomic) _Bool forceFalse; // @synthesize forceFalse=_forceFalse;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
@property(readonly, nonatomic) long long comparisonType; // @synthesize comparisonType=_comparisonType;
- (id)_comparisonTypeFormat;	// IMP=0x0010000000095d6b
- (id)SQLForEntityClass:(Class)arg1;	// IMP=0x0010000000095cc0
- (_Bool)isEqual:(id)arg1;	// IMP=0x0010000000095bfd
- (unsigned long long)hash;	// IMP=0x0010000000095bb0
- (void)bindToStatement:(struct sqlite3_stmt *)arg1 bindingIndex:(inout int *)arg2;	// IMP=0x00100000000959e1
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00100000000959d6
- (id)description;	// IMP=0x00100000000958f4

@end

