//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PassKitCore/PDXPCService.h>

@class NSMutableArray, NSString, PDAccountManager, PDAppletSubcredentialManager, PDAssertionManager, PDCarKeyRequirementsChecker, PDCardFileManager, PDDatabaseManager, PDDefaultPassManager, PDDeviceRegistrationServiceCoordinator, PDExpressPassManager, PDExpressTransitUpgradeController, PDISO18013Manager, PDIssuerBindingManager, PDPaymentWebServiceCoordinator, PDProvisioningRequirementsChecker, PDPushProvisioningManager, PDRelevantPassProvider, PDRemoteInterfacePresenter, PDSpotlightIndexer, PDUserNotificationManager, PDWebServicesCoordinator, PKEntitlementWhitelist, PKIDSManager, PKSecureElement, PKUsageNotificationServer;
@protocol PDPassLibraryDelegate;

@interface PDPassLibrary : PDXPCService
{
    PKEntitlementWhitelist *_whitelist;	// 8 = 0x8
    PDRemoteInterfacePresenter *_remoteInterfacePresenter;	// 16 = 0x10
    PDAssertionManager *_assertionManager;	// 24 = 0x18
    struct os_unfair_lock_s _lock;	// 32 = 0x20
    NSMutableArray *_userNotifications;	// 40 = 0x28
    PKSecureElement *_secureElement;	// 48 = 0x30
    PDPaymentWebServiceCoordinator *_paymentWebServicesCoordinator;	// 56 = 0x38
    PDWebServicesCoordinator *_webServicesCoordinator;	// 64 = 0x40
    PDCardFileManager *_cardFileManager;	// 72 = 0x48
    PDDatabaseManager *_databaseManager;	// 80 = 0x50
    PDExpressPassManager *_expressPassManager;	// 88 = 0x58
    PDUserNotificationManager *_userNotificationManager;	// 96 = 0x60
    PDRelevantPassProvider *_relevantPassProvider;	// 104 = 0x68
    PKUsageNotificationServer *_usageNotificationServer;	// 112 = 0x70
    PKIDSManager *_idsManager;	// 120 = 0x78
    PDSpotlightIndexer *_spotlightIndexer;	// 128 = 0x80
    PDExpressTransitUpgradeController *_expressUpgradeController;	// 136 = 0x88
    PDAccountManager *_accountManager;	// 144 = 0x90
    PDAppletSubcredentialManager *_subcredentialManager;	// 152 = 0x98
    PDCarKeyRequirementsChecker *_carKeyRequirementsChecker;	// 160 = 0xa0
    PDPushProvisioningManager *_pushProvisioningManager;	// 168 = 0xa8
    PDDefaultPassManager *_defaultPassManager;	// 176 = 0xb0
    PDISO18013Manager *_isoManager;	// 184 = 0xb8
    PDIssuerBindingManager *_issuerBindingManager;	// 192 = 0xc0
    PDDeviceRegistrationServiceCoordinator *_deviceRegistrationServiceCoordinator;	// 200 = 0xc8
    PDProvisioningRequirementsChecker *_provisioningRequirementsChecker;	// 208 = 0xd0
    id <PDPassLibraryDelegate> _delegate;	// 216 = 0xd8
}

- (void).cxx_destruct;	// IMP=0x002000000006e60e
@property(nonatomic) __weak id <PDPassLibraryDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) PDProvisioningRequirementsChecker *provisioningRequirementsChecker; // @synthesize provisioningRequirementsChecker=_provisioningRequirementsChecker;
@property(retain, nonatomic) PDDeviceRegistrationServiceCoordinator *deviceRegistrationServiceCoordinator; // @synthesize deviceRegistrationServiceCoordinator=_deviceRegistrationServiceCoordinator;
@property(retain, nonatomic) PDIssuerBindingManager *issuerBindingManager; // @synthesize issuerBindingManager=_issuerBindingManager;
@property(retain, nonatomic) PDISO18013Manager *isoManager; // @synthesize isoManager=_isoManager;
@property(retain, nonatomic) PDDefaultPassManager *defaultPassManager; // @synthesize defaultPassManager=_defaultPassManager;
@property(retain, nonatomic) PDPushProvisioningManager *pushProvisioningManager; // @synthesize pushProvisioningManager=_pushProvisioningManager;
@property(retain, nonatomic) PDCarKeyRequirementsChecker *carKeyRequirementsChecker; // @synthesize carKeyRequirementsChecker=_carKeyRequirementsChecker;
@property(retain, nonatomic) PDAppletSubcredentialManager *subcredentialManager; // @synthesize subcredentialManager=_subcredentialManager;
@property(retain, nonatomic) PDAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(retain, nonatomic) PDExpressTransitUpgradeController *expressUpgradeController; // @synthesize expressUpgradeController=_expressUpgradeController;
@property(retain, nonatomic) PDSpotlightIndexer *spotlightIndexer; // @synthesize spotlightIndexer=_spotlightIndexer;
@property(retain, nonatomic) PKIDSManager *idsManager; // @synthesize idsManager=_idsManager;
@property(retain, nonatomic) PKUsageNotificationServer *usageNotificationServer; // @synthesize usageNotificationServer=_usageNotificationServer;
@property(retain, nonatomic) PDRelevantPassProvider *relevantPassProvider; // @synthesize relevantPassProvider=_relevantPassProvider;
@property(retain, nonatomic) PDUserNotificationManager *userNotificationManager; // @synthesize userNotificationManager=_userNotificationManager;
@property(retain, nonatomic) PDExpressPassManager *expressPassManager; // @synthesize expressPassManager=_expressPassManager;
@property(retain, nonatomic) PDDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
@property(retain, nonatomic) PDCardFileManager *cardFileManager; // @synthesize cardFileManager=_cardFileManager;
@property(retain, nonatomic) PDWebServicesCoordinator *webServicesCoordinator; // @synthesize webServicesCoordinator=_webServicesCoordinator;
@property(retain, nonatomic) PDPaymentWebServiceCoordinator *paymentWebServicesCoordinator; // @synthesize paymentWebServicesCoordinator=_paymentWebServicesCoordinator;
@property(retain, nonatomic) PKSecureElement *secureElement; // @synthesize secureElement=_secureElement;
- (void)spotlightStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000006e169
- (void)spotlightResetWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000006df44
- (void)spotlightReindexContentWithIdentifiers:(id)arg1 acknowledgement:(CDUnknownBlockType)arg2;	// IMP=0x001000000006ddd2
- (void)spotlightReindexAllContentWithAcknowledgement:(CDUnknownBlockType)arg1;	// IMP=0x001000000006dc88
- (void)forceImmediateRevocationCheck;	// IMP=0x001000000006dbb5
- (void)removeAllScheduledActivities;	// IMP=0x001000000006d99c
- (void)pendingUserNotificationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000006d88b
- (void)issueWalletUserNotificationWithTitle:(id)arg1 message:(id)arg2 forPassUniqueIdentifier:(id)arg3 customActionRoute:(id)arg4;	// IMP=0x001000000006d6cd
- (void)shuffleGroups:(int)arg1;	// IMP=0x001000000006d5e7
- (void)noteACAccountChanged:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006d3f2
- (void)noteAppleAccountChanged:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006cea5
- (void)introduceDatabaseIntegrityProblem;	// IMP=0x001000000006cdda
- (void)getDiffForPassUpdateUserNotificationWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006cc85
- (_Bool)_writePass:(id)arg1 withSettings:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x001000000006cbe1
- (_Bool)_writePass:(id)arg1 error:(id *)arg2;	// IMP=0x001000000006c999
- (unsigned long long)_addPassesWithEnumerator:(CDUnknownBlockType)arg1;	// IMP=0x001000000006c4e3
- (void)_addPasses:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000006c390
- (void)_getPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006c2a3
- (_Bool)_entitledForPassTypeID:(id)arg1 teamID:(id)arg2 associatedPassTypeIdentifiers:(id)arg3 associatedApplicationIdentifiers:(id)arg4 forActions:(unsigned long long)arg5;	// IMP=0x001000000006c0c1
- (_Bool)_entitledForPassType:(unsigned long long)arg1 uniqueIdentifier:(id)arg2 actions:(unsigned long long)arg3;	// IMP=0x001000000006bf5d
- (_Bool)_entitledForUniqueID:(id)arg1 forActions:(unsigned long long)arg2;	// IMP=0x001000000006bf3e
- (_Bool)_entitledForObject:(id)arg1 forActions:(unsigned long long)arg2;	// IMP=0x001000000006bdcd
- (id)_entitlementFilteredPasses:(id)arg1;	// IMP=0x001000000006bcb6
- (void)_sanitizePasses:(id)arg1;	// IMP=0x001000000006bb84
- (id)_sanitizePassIfNeeded:(id)arg1;	// IMP=0x001000000006bb10
- (void)sessionDidReceiveData:(id)arg1;	// IMP=0x001000000006ba7b
- (void)sessionDidChangeConnectionStatus:(long long)arg1;	// IMP=0x001000000006b9ed
- (void)contactlessInterfaceDidDismissFromSource:(long long)arg1;	// IMP=0x001000000006b95f
- (void)contactlessInterfaceDidPresentFromSource:(long long)arg1;	// IMP=0x001000000006b8d1
- (void)supportsSearchForPassUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000006b647
- (void)presentIssuerBindingFlowForIssuerData:(id)arg1 signature:(id)arg2 orientation:(id)arg3;	// IMP=0x001000000006b61b
- (void)usingSynchronousProxy:(_Bool)arg1 requestIssuerBoundPassesWihBindingWithData:(id)arg2 automaticallyProvision:(_Bool)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x001000000006b433
- (void)invalidateVehicleConnectionSessionIdentifier:(id)arg1;	// IMP=0x001000000006b342
- (void)sendRKEPassThroughMessage:(id)arg1 forSessionIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000006b174
- (void)startVehicleConnectionSessionWithPassUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000006b055
- (void)usingSynchronousProxy:(_Bool)arg1 configurePushProvisioningConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000006ae85
- (void)pushProvisioningNoncesWithCredentialCount:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000006ab79
- (void)usingSynchronousProxy:(_Bool)arg1 fetchAppletSubCredentialForPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000006a202
- (void)usingSynchronousProxy:(_Bool)arg1 generateTransactionKeyWithReaderIdentifier:(id)arg2 readerPublicKey:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000069d6a
- (void)usingSynchronousProxy:(_Bool)arg1 meetsProvisioningRequirements:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000069b3c
- (void)canAddHomeKeyWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000069118
- (void)canAddCarKeyPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000068fd0
- (void)canShareShareableSecureElementPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000068e8a
- (void)usingSynchronousProxy:(_Bool)arg1 canAddCarKeyPassWithConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000068d24
- (void)usingSynchronousProxy:(_Bool)arg1 canAddSecureElementPassWithConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000006877e
- (void)_setBackupPassbookDeletedState:(id)arg1;	// IMP=0x0010000000068659
- (void)_setBackupDefaultPaymentPassState:(id)arg1;	// IMP=0x0010000000068544
- (void)prepareForBackupRestoreWithRequiredFileURLs:(id)arg1 destinationFileHandles:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000068434
- (void)prepareForBackupRestoreWithExistingPreferencesData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000068389
- (void)setBackupMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000067fad
- (void)backupMetadataWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000067b2c
- (void)isIssuerAppProvisioningSupportedWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000067b16
- (void)signData:(id)arg1 signatureEntanglementMode:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000678df
- (void)usingSynchronousProxy:(_Bool)arg1 longTermPrivacyKeyForCredentialGroupIdentifier:(id)arg2 reuseExisting:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000006770e
- (void)usingSynchronousProxy:(_Bool)arg1 addISO18013Blobs:(id)arg2 cardType:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000067536
- (void)deleteKeyMaterialForSubCredentialId:(id)arg1;	// IMP=0x001000000006730f
- (void)usingSynchronousProxy:(_Bool)arg1 generateISOEncryptionCertificateForSubCredentialId:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000067141
- (void)usingSynchronousProxy:(_Bool)arg1 generateSEEncryptionCertificateForSubCredentialId:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000066f75
- (void)usingSynchronousProxy:(_Bool)arg1 signWithFidoKeyForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 fidoKeyHash:(id)arg4 challenge:(id)arg5 publicKeyIdentifier:(id)arg6 externalizedAuth:(id)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x0010000000066c9e
- (void)usingSynchronousProxy:(_Bool)arg1 checkFidoKeyPresenceForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 fidoKeyHash:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0010000000066aa6
- (void)usingSynchronousProxy:(_Bool)arg1 createFidoKeyForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 challenge:(id)arg4 externalizedAuth:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0010000000066826
- (void)signData:(id)arg1 forPassUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000006601e
- (void);	// IMP=0x0010000000065fd4
- (void)migrateDataWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000065f10
- (void)fetchCurrentRelevantPassInfo:(CDUnknownBlockType)arg1;	// IMP=0x0010000000065dc9
- (void)fetchHasCandidatePasses:(CDUnknownBlockType)arg1;	// IMP=0x0010000000065c79
- (void)recomputeRelevantPassesWithSearchMode:(long long)arg1;	// IMP=0x0010000000065bbd
- (void)personalizePassWithUniqueIdentifier:(id)arg1 contact:(id)arg2 personalizationToken:(id)arg3 requiredPersonalizationFields:(unsigned long long)arg4 personalizationSource:(unsigned long long)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x00100000000659f5
- (void)updateObjectWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000658b1
- (void)resetApplePayWithDiagnosticReason:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006573a
- (void)removePassesOfType:(unsigned long long)arg1 withDiagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000655ea
- (void)recoverPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000065451
- (void)removePassesWithUniqueIDs:(id)arg1 diagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000650ed
- (void)removePassWithUniqueID:(id)arg1 diagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000064f0f
- (void)usingSynchronousProxy:(_Bool)arg1 enableExpressForPassWithPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000064a42
- (void)usingSynchronousProxy:(_Bool)arg1 containsPassWithPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000006486e
- (void)usingSynchronousProxy:(_Bool)arg1 replaceUnsignedPassWithDataFileDescriptor:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000644de
- (void)usingSynchronousProxy:(_Bool)arg1 availableHomeKeyPassesWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000063ccd
- (void)usingSynchronousProxy:(_Bool)arg1 provisionHomeKeyPassForSerialNumbers:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000626cb
- (void)usingSynchronousProxy:(_Bool)arg1 addUnsignedPassesWithDataFileDescriptors:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000061d11
- (void)_usingSynchronousProxy:(_Bool)arg1 addPassesWithEnumerator:(CDUnknownBlockType)arg2 estimatedNumberOfPasses:(unsigned long long)arg3 osTransaction:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000616a9
- (void)usingSynchronousProxy:(_Bool)arg1 addPassIngestionPayloads:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006133f
- (void)usingSynchronousProxy:(_Bool)arg1 addPassesContainer:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000061042
- (void)addPassesWithData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000060bc4
- (void)noteObjectSharedWithUniqueID:(id)arg1;	// IMP=0x0010000000060a7f
- (void)rescheduleCommutePlanRenewalReminderForPassWithUniqueID:(id)arg1;	// IMP=0x001000000006092a
- (void)setSortingState:(long long)arg1 forObjectWithUniqueID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000060798
- (void)updateSettings:(unsigned long long)arg1 forObjectWithUniqueID:(id)arg2;	// IMP=0x001000000006066b
- (void)usingSynchronousProxy:(_Bool)arg1 getImageSetContainerForUniqueID:(id)arg2 type:(long long)arg3 withDisplayProfile:(id)arg4 suffix:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000006046c
- (void)getImageSetForUniqueID:(id)arg1 ofType:(long long)arg2 displayProfile:(id)arg3 suffix:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000060345
- (void)usingSynchronousProxy:(_Bool)arg1 getCachedImageSetContainerForUniqueID:(id)arg2 type:(long long)arg3 withDisplayProfile:(id)arg4 displayTraits:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000006013e
- (void)usingSynchronousProxy:(_Bool)arg1 getContentForUniqueID:(id)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005ffcb
- (void)getContentForUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005ffb1
- (void)_queue_replacePass:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005fe66
- (void)replacePassWithPassData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005fd3c
- (void)getManifestHashAndSettingsForPassTypeID:(id)arg1 serialNumber:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005fa4c
- (void)getRouteRelevantPassesForLocation:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005ecdc
- (void)getPassWithPassTypeID:(id)arg1 serialNumber:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005ec10
- (void)usingSynchronousProxy:(_Bool)arg1 passLocalizedStringForKey:(id)arg2 uniqueID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000005eac4
- (void)getDataForBundleResources:(id)arg1 objectUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005e994
- (void)getDataForBundleResourceNamed:(id)arg1 withExtension:(id)arg2 objectUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000005e850
- (void)getArchivedObjectWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005e741
- (void)passbookHasBeenDeletedWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005e701
- (void)isPassbookVisibleWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005e6a5
- (void)hasSecureElementPassesOfType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005e62d
- (void)isRemovingPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005e5b2
- (void)passWithDPANIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005e4a1
- (void)passWithFPANIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005e3c2
- (void)usingSynchronousProxy:(_Bool)arg1 postUpgradesAvailableNotificationForMarket:(id)arg2 passUniqueID:(id)arg3;	// IMP=0x001000000005e0b0
- (void)postUpgradedPassNotificationForMarket:(id)arg1 passUniqueID:(id)arg2;	// IMP=0x001000000005ddf7
- (void)checkForTransitNotification;	// IMP=0x001000000005dd08
- (void)_getServiceProviderDataForPass:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005db9f
- (void)_getEncryptedServiceProviderDataForSecureElementPass:(id)arg1 publicKey:(id)arg2 scheme:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000005da10
- (void)usingSynchronousProxy:(_Bool)arg1 getServiceProviderDataForUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000005d69f
- (void)usingSynchronousProxy:(_Bool)arg1 getEncryptedServiceProviderDataForUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000005c2cf
- (void)sortedTransitPassesForAppletDataFormat:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005b96b
- (void)sortedTransitPassesForTransitNetworkIdentifiers:(CDUnknownBlockType)arg1;	// IMP=0x001000000005ab7a
- (void)expressTransitPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005a916
- (void)peerPaymentPassUniqueIDWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005a82a
- (void)defaultPaymentPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005a664
- (void)countPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005a514
- (void)canAddPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005a296
- (void)hasPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005a231
- (id)_filteredPasses:(id)arg1 forApplicationIdentifier:(id)arg2;	// IMP=0x001000000005a0d0
- (id)_filteredPasses:(id)arg1 forWebDomain:(id)arg2;	// IMP=0x0010000000059f6f
- (void)enabledValueAddedServicePassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000059dd5
- (void)usingSynchronousProxy:(_Bool)arg1 getManifestHashForPassWithUniqueID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000059b06
- (void)getMetadataForFieldWithProperties:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000059942
- (void)getPassUniqueIDsForAssociatedApplicationIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000059217
- (void)getPassesWithUniqueIdentifiers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000058fa9
- (void)hasInAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000058de0
- (void)hasInAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000058c17
- (void)inAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000058a6c
- (void)inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000588c1
- (id)_inAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 paymentApplicationStates:(id)arg3 isMultiTokensRequest:(_Bool)arg4;	// IMP=0x00100000000586f3
- (id)_inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 paymentApplicationStates:(id)arg3 isMultiTokensRequest:(_Bool)arg4;	// IMP=0x0010000000058420
- (void)_paymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 webPayment:(_Bool)arg4 paymentApplicationStates:(id)arg5 paymentRequestType:(id)arg6 isMultiTokensRequest:(_Bool)arg7 withHandler:(CDUnknownBlockType)arg8;	// IMP=0x0010000000057e39
- (void)_passesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentApplicationStates:(id)arg5 paymentRequestType:(id)arg6 isMultiTokensRequest:(_Bool)arg7 handler:(CDUnknownBlockType)arg8;	// IMP=0x0010000000057bf8
- (_Bool)_hasPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 paymentApplicationStates:(id)arg3;	// IMP=0x0010000000057afe
- (void)_hasPassesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentApplicationStates:(id)arg5 paymentRequestType:(id)arg6 isMultiTokensRequest:(_Bool)arg7 handler:(CDUnknownBlockType)arg8;	// IMP=0x00100000000577e4
- (void)hasPassesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentRequestType:(id)arg5 isMultiTokensRequest:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00100000000577b4
- (void)hasInAppPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 paymentRequestType:(id)arg4 isMultiTokensRequest:(_Bool)arg5 withHandler:(CDUnknownBlockType)arg6;	// IMP=0x001000000005748b
- (void)inAppPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 paymentRequestType:(id)arg4 isMultiTokensRequest:(_Bool)arg5 withHandler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000057205
- (void)hasRemoteLibraryWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000571ab
- (void)getPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000570b5
- (void)notifyPassUsedWithIdentifier:(id)arg1 fromSource:(long long)arg2;	// IMP=0x0010000000057033
- (void)sendUserEditedCatalog:(id)arg1;	// IMP=0x0010000000056f06
- (void)usingSynchronousProxy:(_Bool)arg1 getPaymentPassesPendingActivationWithHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000056cb0
- (void)usingSynchronousProxy:(_Bool)arg1 getGroupsControllerSnapshotWithOptions:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000056941
- (void)getGroupsControllerSnapshotWithOptions:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000056927
- (void)usingSynchronousProxy:(_Bool)arg1 getPassesAndCatalogOfPassTypes:(unsigned long long)arg2 limitResults:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000005665e
- (void)getPassesAndCatalogOfPassTypes:(unsigned long long)arg1 limitResults:(_Bool)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000056641
- (void)isPaymentPassActivationAvailableWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000056601
- (void)canPresentPaymentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000558cf
- (void)presentContactlessInterfaceForPassWithUniqueIdentifier:(id)arg1 fromSource:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000556ff
- (void)presentContactlessInterfaceForDefaultPassFromSource:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005569d
- (void)paymentPassWithAssociatedAccountIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000553fc
- (void)presentPaymentSetupRequest:(id)arg1 orientation:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000551a7
- (void)paymentSetupFeaturesForConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000054ae2
- (_Bool)_isConfigurationValid:(id)arg1;	// IMP=0x0010000000054974
- (void)openPaymentUIWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000005458f
- (void)openWalletUIWithRelevantPass:(id)arg1;	// IMP=0x00100000000543bb
- (void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forPassWithUniqueID:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000542d0
- (void)canAddFelicaPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005428d
- (void)usingSynchronousProxy:(_Bool)arg1 getPassForProvisioningCredentialHash:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005405b
- (void)usingSynchronousProxy:(_Bool)arg1 getPassesOfStyles:(unsigned long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000053e5c
- (void)getPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000053d94
- (void)getPassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000053cd2
- (void)sendCatalogChanged:(id)arg1;	// IMP=0x0010000000053c50
- (void)sendPassRecovered:(id)arg1 catalog:(id)arg2;	// IMP=0x0010000000053ab7
- (void)sendPassRemoved:(id)arg1 catalog:(id)arg2;	// IMP=0x0010000000053998
- (void)sendPassUpdated:(id)arg1 catalog:(id)arg2;	// IMP=0x00100000000537ff
- (void)sendPassAdded:(id)arg1 catalog:(id)arg2;	// IMP=0x0010000000053666
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000053628
- (id)remoteObjectProxy;	// IMP=0x00100000000535ea
- (void)clearConnectionReference;	// IMP=0x001000000005342f
@property(readonly, nonatomic) _Bool willSanitizePasses;
- (void)activated;	// IMP=0x001000000005329d
- (void)dealloc;	// IMP=0x001000000005326e
- (id)initWithConnection:(id)arg1 server:(id)arg2;	// IMP=0x00100000000530d6
- (id)initWithConnection:(id)arg1;	// IMP=0x00100000000530c8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

