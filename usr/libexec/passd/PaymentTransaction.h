//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface PaymentTransaction
{
}

+ (id)_propertySettersForTransactionAuthenticationContext;	// IMP=0x00400000004cc3c8
+ (id)_propertySettersForTransactionAuthenticationResult;	// IMP=0x00100000004cc2bc
+ (id)_propertySettersForForeignExchangeInformation;	// IMP=0x00100000004cc192
+ (id)_propertySettersForMerchant;	// IMP=0x00100000004cbbbe
+ (id)_propertySettersForPaymentTransaction;	// IMP=0x00100000004c9762
+ (id)_closestTransactionInDatabase:(id)arg1 withTransactionDate:(id)arg2 withinWindow:(double)arg3 forTransactionSourceIdentifiers:(id)arg4 additionalPredicates:(id)arg5;	// IMP=0x00100000004c9252
+ (id)_paymentTransactionsWithQuery:(id)arg1 regions:(id *)arg2 tags:(id *)arg3;	// IMP=0x00100000004c7262
+ (id)_paymentTransactionsWithQuery:(id)arg1;	// IMP=0x00100000004c724b
+ (void)_count:(unsigned long long *)arg1 totalAmount:(id *)arg2 currencyCode:(id)arg3 forPredicate:(id)arg4 inDatabase:(id)arg5;	// IMP=0x00100000004c7065
+ (id)_paymentTransactionsInDatabase:(id)arg1 matchingPredicate:(id)arg2;	// IMP=0x00100000004c6fd4
+ (id)_predicateForTransactionFundingSourceType:(long long)arg1;	// IMP=0x00100000004c6f63
+ (id)_predicateForRewardsValue:(id)arg1 unit:(unsigned long long)arg2;	// IMP=0x00100000004c6e8b
+ (id)_predicateForTransactionTag:(id)arg1;	// IMP=0x00100000004c6c29
+ (id)_predicateForAmount:(id)arg1 comparison:(long long)arg2;	// IMP=0x00100000004c6923
+ (id)_predicateForPANIdentifier:(id)arg1;	// IMP=0x00100000004c6900
+ (id)_predicateForCurrencyCode:(id)arg1;	// IMP=0x00100000004c68dd
+ (id)_predicateForWorldRegionIdentifier:(id)arg1;	// IMP=0x00100000004c68ba
+ (id)_predicateForNoWorldRegion;	// IMP=0x00100000004c689a
+ (id)_predicateForWorldRegion;	// IMP=0x00100000004c687a
+ (id)_predicateForMerchant:(id)arg1;	// IMP=0x00100000004c6070
+ (id)_predicateForMerchantCategory:(long long)arg1;	// IMP=0x00100000004c5d2b
+ (id)_predicateForMapsBrandCategory:(long long)arg1;	// IMP=0x00100000004c5be6
+ (id)_predicateForMapsMerchantCategory:(long long)arg1;	// IMP=0x00100000004c5aa1
+ (id)_predicateForFallbackCategory:(long long)arg1;	// IMP=0x00100000004c5a30
+ (id)_predicateForLastMerchantReprocessingDateBeforeDate:(id)arg1;	// IMP=0x00100000004c58f9
+ (id)_predicateForMapsMatch;	// IMP=0x00100000004c57f7
+ (id)_predicateForIsProcessedByTransactionProcessor;	// IMP=0x00100000004c56bd
+ (id)_predicateForHasCityAndCountry;	// IMP=0x00100000004c55bb
+ (id)_predicateForHasLocation;	// IMP=0x00100000004c559b
+ (id)_predicateForHasPOIMatch;	// IMP=0x00100000004c557b
+ (id)_predicateForNoMapsMatch;	// IMP=0x00100000004c5479
+ (id)_predicateForRequiresMerchantReprocessing:(_Bool)arg1;	// IMP=0x00100000004c5408
+ (id)_predicateForOriginatedOnDevice:(_Bool)arg1;	// IMP=0x00100000004c5397
+ (id)_predicateForMapsBrandIdentifier:(unsigned long long)arg1;	// IMP=0x00100000004c5326
+ (id)_predicateForMapsIdentifier:(unsigned long long)arg1;	// IMP=0x00100000004c52b5
+ (id)_predicateForLifecycleIdentifier:(id)arg1;	// IMP=0x00100000004c5292
+ (id)_predicateForTransactionTypes:(id)arg1;	// IMP=0x00100000004c502b
+ (id)_predicateForPeerPaymentSubType:(long long)arg1;	// IMP=0x00100000004c4fba
+ (id)_predicateForTransactionType:(long long)arg1;	// IMP=0x00000000004c4e80
+ (id)_predicateForPeerPaymentCounterpartHandles:(id)arg1;	// IMP=0x00100000004c4c60
+ (id)_predicateForPeerPaymentCounterpartHandle:(id)arg1;	// IMP=0x00100000004c4c3d
+ (id)_predicateForGreaterThanTransactionPID:(id)arg1;	// IMP=0x00100000004c4c1a
+ (id)_predicateForMapsBrandPID:(id)arg1;	// IMP=0x00100000004c4bf7
+ (id)_predicateForMapsMerchantPID:(id)arg1;	// IMP=0x00100000004c4bd4
+ (id)_predicateForSourcePID:(id)arg1;	// IMP=0x00100000004c4bb1
+ (id)_predicateForMapsBrandName:(id)arg1;	// IMP=0x00100000004c4b8e
+ (id)_predicateForMapsMerchantName:(id)arg1;	// IMP=0x00100000004c4b6b
+ (id)_predicateForMapsBrandIdentifiers:(id)arg1;	// IMP=0x00100000004c4b48
+ (id)_predicateForMapsIdentifiers:(id)arg1;	// IMP=0x00100000004c4b25
+ (id)_predicateForMerchantIdentifiers:(id)arg1;	// IMP=0x00100000004c4b02
+ (id)_predicateForMerchantWebMerchantIdentifier:(id)arg1;	// IMP=0x00100000004c4adf
+ (id)_predicateForMerchantAdamIdentifier:(long long)arg1;	// IMP=0x00100000004c4a6e
+ (id)_predicateForMerchantRawCANL:(id)arg1;	// IMP=0x00100000004c4a4b
+ (id)_predicateForMerchantRawName:(id)arg1;	// IMP=0x00100000004c4a28
+ (id)_predicateForMerchantName:(id)arg1;	// IMP=0x00100000004c4a05
+ (id)_predicateForTransactionStatus:(long long)arg1;	// IMP=0x00100000004c4994
+ (id)_predicateForTransactionDateNewerThanDate:(id)arg1;	// IMP=0x00100000004c4913
+ (id)_predicateForTransactionDate:(id)arg1 withinWindow:(double)arg2;	// IMP=0x00100000004c4765
+ (id)_predicateForPaymentHash:(id)arg1;	// IMP=0x00100000004c44a6
+ (id)_predicateForUnansweredQuestions;	// IMP=0x00100000004c42c9
+ (id)_predicateForAccountType:(long long)arg1;	// IMP=0x00100000004c4258
+ (id)_predicateForAccountIdentifier:(id)arg1;	// IMP=0x00100000004c4235
+ (id)_predicateForRedemptionType:(unsigned long long)arg1;	// IMP=0x00100000004c41c4
+ (id)_predicateForSuppressFromUI:(_Bool)arg1;	// IMP=0x00100000004c406a
+ (id)_predicateForNoReferenceIdentifier;	// IMP=0x00100000004c404a
+ (id)_predicateForReferenceIdentifier:(id)arg1;	// IMP=0x00100000004c4027
+ (id)_predicateForAdjustmentType:(long long)arg1;	// IMP=0x00100000004c3fb6
+ (id)_predicateForServiceIdentifier:(id)arg1;	// IMP=0x00100000004c3f93
+ (id)_predicateForIdentifier:(id)arg1;	// IMP=0x00100000004c3f70
+ (id)_predicateForWithNotificationServiceData:(unsigned long long)arg1;	// IMP=0x00100000004c3ee8
+ (id)_predicateForEndStatusChangedDate:(id)arg1;	// IMP=0x00100000004c3e67
+ (id)_predicateForStartStatusChangedDate:(id)arg1;	// IMP=0x00100000004c3de6
+ (id)_predicateForRedemptionEndDate:(id)arg1;	// IMP=0x00100000004c3d65
+ (id)_predicateForRedemptionStartDate:(id)arg1;	// IMP=0x00100000004c3ce4
+ (id)_predicateForEndDate:(id)arg1;	// IMP=0x00100000004c3c63
+ (id)_predicateForStartDate:(id)arg1;	// IMP=0x00100000004c3be2
+ (id)_predicateForWithBackingData:(unsigned long long)arg1;	// IMP=0x00100000004c39bc
+ (id)_predicateForWithTransactionSource:(unsigned long long)arg1 excludeCardType:(_Bool)arg2;	// IMP=0x00100000004c37d5
+ (id)_predicateForTransactionsWithTransactionSource:(unsigned long long)arg1 withBackingData:(unsigned long long)arg2;	// IMP=0x00100000004c36b8
+ (id)_predicateForTransactionSource:(unsigned long long)arg1;	// IMP=0x00100000004c3558
+ (id)_predicateForPID:(id)arg1;	// IMP=0x00100000004c3535
+ (id)_predicateForTransactionSourceType:(unsigned long long)arg1;	// IMP=0x00100000004c34c4
+ (id)_predicateForTransactionSourceIdentifier:(id)arg1;	// IMP=0x00100000004c346e
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1;	// IMP=0x00100000004c3252
+ (id)_predicateForTransactionArchivePID:(long long)arg1;	// IMP=0x00100000004c31e1
+ (id)_predicateForTransactionSourcePID:(long long)arg1;	// IMP=0x00100000004c3170
+ (unsigned long long)_countOfTransactionsWithMapsBrandPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00100000004c30f0
+ (unsigned long long)_countOfTransactionsWithMapsMerchantPID:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00100000004c3070
+ (void)_associateRecurringPeerPaymentToTransaction:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00100000004c2c36
+ (id)authenticationContextFromProperties:(id)arg1 values:(const id *)arg2;	// IMP=0x00100000004c2b9d
+ (id)foreignExchangeInformationFromProperties:(id)arg1 values:(const id *)arg2;	// IMP=0x00100000004c1c44
+ (id)merchantFromProperties:(id)arg1 values:(const id *)arg2;	// IMP=0x00100000004c1656
+ (unsigned long long)suppressionBehaviorForTransactionSourceIdentifier:(id)arg1 serviceIdentifier:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00100000004be6bb
+ (id)rewardsTierSummaryForTransactionSourceIdentifiers:(id)arg1 currencyCode:(id)arg2 startDate:(id)arg3 endDate:(id)arg4 inDatabase:(id)arg5;	// IMP=0x00100000004b9f47
+ (id)rewardsValuesForUnit:(unsigned long long)arg1 inDatabase:(id)arg2;	// IMP=0x00100000004b9ce4
+ (void)updateTransactionsWithTransactionSource:(id)arg1 toTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00100000004b98bd
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x00100000004b9831
+ (void)allPassTransactionIdentifiersWithAccountIdentifiers:(id)arg1 inDatabase:(id)arg2 fromPID:(long long)arg3 batchHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000004b8e47
+ (void)allPassTransactionIdentifiersWithAccountIdentifiers:(id)arg1 inDatabase:(id)arg2 batchHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000004b8e21
+ (void)allPassTransactionIdentifiersInDatabase:(id)arg1 batchHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b8e07
+ (id)transactionsInDatabase:(id)arg1 forInstallmentPlanIdentifier:(id)arg2;	// IMP=0x00100000004b8c49
+ (id)transactionsRequiringMerchantCleanupInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withLastReprocessingDateBeforeDate:(id)arg3 transactionDateWithinWindow:(double)arg4;	// IMP=0x00100000004b8911
+ (_Bool)hasPaymentTransactionInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3;	// IMP=0x00100000004b8782
+ (id)_predicateForHasAssociatedReceipt;	// IMP=0x00100000004b8685
+ (id)transactionReceiptUniqueIDsInDatabase:(id)arg1;	// IMP=0x00100000004b83e5
+ (unsigned long long)numberOfPaymentTransactionsInDatabaseWithAssociatedReceipt:(id)arg1;	// IMP=0x00100000004b8374
+ (unsigned long long)numberOfPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 newerThanDate:(id)arg4;	// IMP=0x00100000004b81da
+ (id)paymentTransactionsInDatabase:(id)arg1 originatedOnDevice:(_Bool)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00100000004b805a
+ (id)_predicateForWorldRegionType:(unsigned long long)arg1;	// IMP=0x00100000004b7fe9
+ (id)_predicateForWorldRegionLocaleIdentifier:(id)arg1;	// IMP=0x00100000004b7fc6
+ (id)_predicateForWorldRegionNamePattern:(id)arg1;	// IMP=0x00100000004b7e04
+ (id)_predicateForWorldRegionLocalizedContent;	// IMP=0x00100000004b7ddd
+ (id)regionIdentifiersInDatabase:(id)arg1 matchingName:(id)arg2 types:(id)arg3 localeIdentifier:(id)arg4 withRequest:(id)arg5 limit:(unsigned long long)arg6;	// IMP=0x00100000004b77d6
+ (id)_predicateForTransactionsMissingWorldRegionOnlyEligibleForProcessing:(_Bool)arg1;	// IMP=0x00100000004b70ca
+ (id)paymentTransactionsForTokenizedTransactionsWithRegionsInDatabase:(id)arg1;	// IMP=0x00100000004b6e10
+ (_Bool)hasTransactionsMissingWorldRegionEligibleForProcessingInDatabase:(id)arg1;	// IMP=0x00100000004b6d5c
+ (id)paymentTransactionsInDatabase:(id)arg1 missingWorldRegionWithLimit:(unsigned long long)arg2 onlyEligibleForProcessing:(_Bool)arg3;	// IMP=0x00100000004b6c5f
+ (id)paymentTransactionsRequiringReviewInDatabase:(id)arg1 forAccountIdentifier:(id)arg2;	// IMP=0x00100000004b6a63
+ (id)installmentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 installmentPlan:(id)arg3 redeemed:(_Bool)arg4 withRedemptionType:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7;	// IMP=0x00100000004b65b5
+ (id)installmentPlanTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2;	// IMP=0x00100000004b6416
+ (id)predicateForRequest:(id)arg1;	// IMP=0x00100000004b4f31
+ (void)totalAmount:(id *)arg1 forTransactionsWithRequest:(id)arg2 count:(unsigned long long *)arg3 inDatabase:(id)arg4;	// IMP=0x00100000004b4e68
+ (id)paymentTransactionsInDatabase:(id)arg1 forPredicate:(id)arg2 limit:(long long)arg3;	// IMP=0x00100000004b4c33
+ (unsigned long long)countInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x00100000004b4ba2
+ (id)paymentTransactionsInDatabase:(id)arg1 forRequest:(id)arg2;	// IMP=0x00100000004b49e8
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withRedemptionType:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00100000004b470c
+ (id)transactionServiceIdentifiersInDatabase:(id)arg1 withTransactionType:(long long)arg2 withPeerPaymentSubtype:(long long)arg3 forTransactionSourceIdentifiers:(id)arg4 withTransactionSource:(unsigned long long)arg5 withBackingData:(unsigned long long)arg6 startDate:(id)arg7 endDate:(id)arg8;	// IMP=0x00100000004b4234
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionType:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x00100000004b3e74
+ (id)paymentTransactionsInDatabase:(id)arg1 withMerchantCategory:(long long)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 startDate:(id)arg6 endDate:(id)arg7 limit:(long long)arg8;	// IMP=0x00100000004b3ab4
+ (id)peerPaymentCounterpartHandlesforSource:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 inDatabase:(id)arg4;	// IMP=0x00100000004b36ce
+ (unsigned long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withPeerPaymentCounterpartHandles:(id)arg3 forPeerPaymentSubtype:(long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x00100000004b33ef
+ (unsigned long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withPeerPaymentCounterpartHandles:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00100000004b3139
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMerchant:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x00100000004b2e20
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifierWithoutRegion:(unsigned long long)arg2 limit:(unsigned long long)arg3;	// IMP=0x00100000004b2c8e
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsMerchantIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00100000004b2afa
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingMapsBrandIdentifier:(unsigned long long)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00100000004b2966
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingPeerPaymentCounterpartHandles:(id)arg2 forPeerPaymentSubtype:(long long)arg3 forTransactionSourceIdentifiers:(id)arg4 withTransactionSource:(unsigned long long)arg5 withBackingData:(unsigned long long)arg6 limit:(long long)arg7;	// IMP=0x00100000004b260f
+ (id)paymentTransactionsInDatabase:(id)arg1 matchingPeerPaymentCounterpartHandles:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 withTransactionSource:(unsigned long long)arg4 withBackingData:(unsigned long long)arg5 limit:(long long)arg6;	// IMP=0x00100000004b22fe
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionTypes:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5;	// IMP=0x00100000004b20f0
+ (id)paymentTransactionsInDatabase:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4;	// IMP=0x00100000004b1f54
+ (long long)countInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6;	// IMP=0x00100000004b1eb8
+ (id)pendingPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x00100000004b1a85
+ (id)approvedPaymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x00100000004b1705
+ (id)paymentTransactionsInDatabase:(id)arg1 forTransactionSourceIdentifiers:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 orderedByDate:(long long)arg7 limit:(long long)arg8;	// IMP=0x00100000004b1532
+ (id)_predicateForTransactionSourceIdentifiers:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00100000004b1362
+ (id)transactionsForAdjustmentType:(long long)arg1 limit:(long long)arg2 inDatabase:(id)arg3;	// IMP=0x00100000004b1296
+ (id)paymentTransactionsInDatabase:(id)arg1 withServiceIdentifier:(id)arg2;	// IMP=0x00100000004b11b0
+ (id)closestPendingTransactionInDatabase:(id)arg1 fromTransactionDate:(id)arg2 withNotificationServiceData:(unsigned long long)arg3 forMerchantName:(id)arg4 forTransactionSourceIdentifiers:(id)arg5;	// IMP=0x00100000004b1019
+ (id)closestTransactionInDatabase:(id)arg1 fromTransaction:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00100000004b05a3
+ (id)paymentTransactionsInDatabase:(id)arg1 withIdentifiers:(id)arg2 regions:(id *)arg3 tags:(id *)arg4;	// IMP=0x00100000004b0306
+ (id)anyInDatabase:(id)arg1 withPaymentHash:(id)arg2 withTransactionSource:(unsigned long long)arg3 withNotificationServiceData:(unsigned long long)arg4 transactionSourceIdentifiers:(id)arg5;	// IMP=0x00100000004b0106
+ (id)mostRecentActiveTransactionInDatabase:(id)arg1;	// IMP=0x00100000004afdbd
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withTransactionType:(long long)arg2;	// IMP=0x00100000004afd0f
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00100000004afa05
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00100000004af9df
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsBrandIdentifiers:(id)arg2;	// IMP=0x00100000004af9ca
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00100000004af6c0
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00100000004af69a
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMapsIdentifiers:(id)arg2;	// IMP=0x00100000004af685
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3 startDate:(id)arg4 endDate:(id)arg5;	// IMP=0x00100000004af37b
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2 forTransactionSourceIdentifiers:(id)arg3;	// IMP=0x00100000004af355
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1 withMerchantIdentifiers:(id)arg2;	// IMP=0x00100000004af340
+ (_Bool)hasAnyTransactionsInDatabase:(id)arg1;	// IMP=0x00100000004af28f
+ (id)anyInDatabase:(id)arg1 withReferenceIdentifier:(id)arg2;	// IMP=0x00100000004af203
+ (id)anyInDatabase:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x00100000004af177
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 forTransactionSourceIdentifier:(id)arg3;	// IMP=0x00100000004af01b
+ (id)anyInDatabase:(id)arg1 withServiceIdentifier:(id)arg2 accountIdentifier:(id)arg3 accountType:(long long)arg4;	// IMP=0x00100000004aee8f
+ (id)anyInDatabase:(id)arg1 withTransactionSourceIdentifier:(id)arg2;	// IMP=0x00100000004aee03
+ (id)anyInDatabase:(id)arg1 withPID:(id)arg2;	// IMP=0x00100000004aed77
+ (void)deleteEntitiesForTransactionSource:(id)arg1 inDatabase:(id)arg2;	// IMP=0x00100000004ae582
+ (id)truncateEntitiesForTransactionSourceIdentifiers:(id)arg1 withNotificationServiceData:(unsigned long long)arg2 suppressedFromUI:(unsigned long long)arg3 inDatabase:(id)arg4 toCount:(long long)arg5;	// IMP=0x00100000004ae1ab
+ (id)insertPaymentTransaction:(id)arg1 withTransactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00100000004ae11f
+ (id)disambiguatedSQLForProperty:(id)arg1;	// IMP=0x00100000004ae02d
+ (void)addJoinClausesForProperty:(id)arg1 toJoins:(id)arg2;	// IMP=0x00100000004ad7a1
+ (id)associationPropertyForEntityClass:(Class)arg1;	// IMP=0x00100000004ad724
+ (id)databaseTable;	// IMP=0x00100000004ad717
- (void)_createPaymentTransactionAuthentication;	// IMP=0x00400000004c96f8
- (_Bool)_hasValidMerchantData;	// IMP=0x00100000004c9680
- (id)_transactionSourceIdentifierObject;	// IMP=0x00100000004c2fd2
- (id)transactionAuthenticationContext;	// IMP=0x00100000004c2a2e
- (id)transactionAuthenticationResult;	// IMP=0x00100000004c2889
- (long long)accountType;	// IMP=0x00100000004c283e
- (id)passUniqueIdentifier;	// IMP=0x00100000004c2677
- (unsigned long long)mapsMerchantIdentifier;	// IMP=0x00100000004c262c
- (long long)transactionType;	// IMP=0x00100000004c25e1
- (id)dbPaymentTransactionArchive;	// IMP=0x00100000004c25b7
- (id)transactionSourceIdentifier;	// IMP=0x00100000004c2567
- (id)transactionArchive;	// IMP=0x00100000004c24dd
- (id)paymentApplication;	// IMP=0x00100000004c2446
- (id)accountIdentifier;	// IMP=0x00100000004c242d
- (id)allRecordTypesAndNames;	// IMP=0x00100000004c23c5
- (id)serviceIdentifier;	// IMP=0x00100000004c23ac
- (id)identifier;	// IMP=0x00100000004c2393
- (id)foreignExchangeInformation;	// IMP=0x00100000004c1ee5
- (id)merchant;	// IMP=0x00100000004c1895
- (id)paymentTransaction;	// IMP=0x00100000004bfbaf
- (void)updateWithReleasedData:(id)arg1;	// IMP=0x00100000004bfb16
- (void)updateWithPaymentTransactionAmountModifiers:(id)arg1;	// IMP=0x00100000004bfa73
- (void)updateWithPaymentTransactionAwards:(id)arg1;	// IMP=0x00100000004bf9d0
- (void)removeMapsDataForIssueReportIdentifier:(id)arg1;	// IMP=0x00100000004bf934
- (void)updateWithMapsBrand:(id)arg1;	// IMP=0x00100000004bf5e1
- (void)updateWithMapsMerchant:(id)arg1;	// IMP=0x00100000004bf28e
- (void)updateWithPaymentTransactionQuestions:(id)arg1;	// IMP=0x00100000004bf210
- (void)updateWithPaymentTransactionRewards:(id)arg1 rewardsInProgress:(id)arg2;	// IMP=0x00100000004bf13e
- (void)updateWithPaymentTransactionFees:(id)arg1;	// IMP=0x00100000004bf0c0
- (void)updateWithCommutePlanUnits:(id)arg1;	// IMP=0x00100000004bf01d
- (void)updateWithPaymentAmounts:(id)arg1;	// IMP=0x00100000004bef7a
- (void)updateWithMerchant:(id)arg1;	// IMP=0x00100000004be9ae
- (void)updateRedemptionType:(unsigned long long)arg1;	// IMP=0x00100000004be954
- (void)updateRequiresMerchantReprocessing:(_Bool)arg1;	// IMP=0x00100000004be661
- (void)updateSuppressBehavior:(unsigned long long)arg1;	// IMP=0x00100000004be607
- (void)updateWithPaymentTransactionSource:(id)arg1;	// IMP=0x00100000004be310
- (void)updateWithPaymentTransaction:(id)arg1;	// IMP=0x00100000004bb763
- (void)replaceWithPaymentTransaction:(id)arg1;	// IMP=0x00100000004bb51a
- (void)_applyRewardsValuesToDictionary:(id)arg1 forTransaction:(id)arg2;	// IMP=0x00100000004b9bd8
- (_Bool)deleteFromDatabase;	// IMP=0x00100000004ae628
- (id)initWithPaymentTransaction:(id)arg1 transactionSource:(id)arg2 inDatabase:(id)arg3;	// IMP=0x00100000004ab72d

@end

