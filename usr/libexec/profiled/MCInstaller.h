//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ManagedConfiguration/MCInstallerReader.h>

@class FLFollowUpController, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject, NSTimer;
@protocol OS_dispatch_queue;

@interface MCInstaller : MCInstallerReader
{
    NSMutableArray *_queuedProfiles;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_purgatoryWorkerQueue;	// 16 = 0x10
    NSDictionary *_currentlyInstallingRestrictions;	// 24 = 0x18
    NSMutableDictionary *_setAsideAccountIdentifiersByPayloadClass;	// 32 = 0x20
    NSMutableDictionary *_setAsideDictionariesByPayloadClass;	// 40 = 0x28
    FLFollowUpController *_followUpController;	// 48 = 0x30
    NSTimer *_purgatoryTimer;	// 56 = 0x38
}

+ (void)_enumerateProfilesWithCriteria:(CDUnknownBlockType)arg1 filterFlags:(int)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00200000000572ed
+ (id)considerProfilesInstalledDuringBuddyForManagement;	// IMP=0x0010000000056c3d
+ (id)_installationFailureErrorWithUnderlyingError:(id)arg1;	// IMP=0x0010000000056750
+ (void)_setPathsSystemProfileStorageDirectory:(id)arg1 userProfileStorageDirectory:(id)arg2;	// IMP=0x00100000000566e4
+ (unsigned long long)targetDeviceTypeForCurrentDevice;	// IMP=0x00100000000520bb
+ (id)notSupportedUnderMultiUserModeError;	// IMP=0x001000000004aa31
+ (id)notInstalledByMDMError;	// IMP=0x001000000004a9b0
+ (id)deviceIsSupervisedError;	// IMP=0x001000000004a912
+ (id)deviceNotSupervisedError;	// IMP=0x001000000004a874
+ (id)sharedInstaller;	// IMP=0x0010000000046b10
- (void).cxx_destruct;	// IMP=0x0020000000058b85
@property(retain, nonatomic) NSTimer *purgatoryTimer; // @synthesize purgatoryTimer=_purgatoryTimer;
@property(retain, nonatomic) FLFollowUpController *followUpController; // @synthesize followUpController=_followUpController;
@property(retain, nonatomic) NSMutableDictionary *setAsideDictionariesByPayloadClass; // @synthesize setAsideDictionariesByPayloadClass=_setAsideDictionariesByPayloadClass;
@property(retain, nonatomic) NSMutableDictionary *setAsideAccountIdentifiersByPayloadClass; // @synthesize setAsideAccountIdentifiersByPayloadClass=_setAsideAccountIdentifiersByPayloadClass;
- (_Bool)isCertificateReference:(id)arg1 aliasedInDependencyManager:(id)arg2;	// IMP=0x0010000000058649
- (id)peekProfileDataFromPurgatoryForDeviceType:(unsigned long long)arg1;	// IMP=0x001000000005857b
- (void)_purgatoryWorkerQueue_didPurgePurgatory:(_Bool)arg1;	// IMP=0x00100000000583d6
- (void)purgeProfileWithIdentifier:(id)arg1 fromPurgatoryForTargetDeviceType:(unsigned long long)arg2;	// IMP=0x0010000000058183
- (void)purgeProfilesFromPurgatoryForTargetDeviceType:(unsigned long long)arg1;	// IMP=0x0010000000057f29
- (_Bool)sendProfileData:(id)arg1 withIdentifier:(id)arg2 toPurgatoryForTargetDeviceType:(unsigned long long)arg3 outError:(id *)arg4;	// IMP=0x0010000000057581
- (void)_sendMDMEnrollmentEventWithInstallationOptions:(id)arg1;	// IMP=0x0010000000056a10
- (id)_installedProfileWithIdentifier:(id)arg1 installationType:(long long)arg2;	// IMP=0x001000000005685d
- (void)recomputeProfileRestrictionsWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000055c12
- (id)verifiedMDMProfileIdentifierWithCleanUp;	// IMP=0x00100000000556ee
- (void)removeManagedProfilesIfNecessary;	// IMP=0x00100000000555e4
- (void)removeUninstalledProfileWithIdentifier:(id)arg1 installationType:(long long)arg2 targetDeviceType:(unsigned long long)arg3;	// IMP=0x00100000000554e2
- (void)removeProfileWithIdentifier:(id)arg1 installationType:(long long)arg2 options:(id)arg3 source:(id)arg4;	// IMP=0x00100000000551ec
- (void)removeProfileWithIdentifier:(id)arg1 installationType:(long long)arg2 source:(id)arg3;	// IMP=0x00100000000551d4
- (void)_cleanUpAfterRemovingProfileWithIdentifier:(id)arg1 installedForUser:(_Bool)arg2 profileHandler:(id)arg3 oldRestrictions:(id)arg4;	// IMP=0x0010000000054b52
- (id)_reallyRemoveProfileWithIdentifier:(id)arg1 installationType:(long long)arg2 profileInstalled:(_Bool)arg3 targetDeviceType:(unsigned long long)arg4 options:(id)arg5 source:(id)arg6;	// IMP=0x00100000000542da
- (void)removeAllProfilesFromInstallationQueue;	// IMP=0x00100000000542bd
- (id)_managingProfileIdentifierForProfileIdentifier:(id)arg1;	// IMP=0x00100000000541ef
- (void)_removeOrphanedCertificateDependencyManager:(id)arg1 persistentID:(id)arg2 persona:(id)arg3;	// IMP=0x0010000000053eff
- (void)_removeOrphanedResourcesOptions:(id)arg1 includingAccounts:(_Bool)arg2;	// IMP=0x0010000000053620
- (_Bool)interactionClient:(id)arg1 didRequestPreflightUserInputResponses:(id)arg2 forPayloadIndex:(unsigned long long)arg3 outError:(id *)arg4;	// IMP=0x001000000005340f
- (id)updateProfileWithIdentifier:(id)arg1 interactionClient:(id)arg2 installForSystem:(_Bool)arg3 source:(id)arg4 outError:(id *)arg5;	// IMP=0x0010000000052b6a
- (id)updateProfileWithIdentifier:(id)arg1 interactionClient:(id)arg2 source:(id)arg3 outError:(id *)arg4;	// IMP=0x0010000000052b3f
- (id)_profileNotEligibleErrorWithProfile:(id)arg1;	// IMP=0x0010000000052a8d
- (id)_watchInformationOutIsCellularSupported:(_Bool *)arg1;	// IMP=0x0010000000052a85
- (id)_preflightProfileForInstallationOnWatch:(id)arg1;	// IMP=0x00100000000524cc
- (id)_preflightProfileForInstallationOnHomePod:(id)arg1;	// IMP=0x00100000000521d0
- (id)_errorUnacceptablePayload:(id)arg1;	// IMP=0x001000000005211e
- (_Bool)_overrideProfileValidation;	// IMP=0x00100000000520cf
- (id)_assumeOwnershipProfileHandler:(id)arg1 options:(id)arg2 source:(id)arg3 outError:(id *)arg4;	// IMP=0x0010000000051946
- (id)installProfileData:(id)arg1 options:(id)arg2 interactionClient:(id)arg3 source:(id)arg4 outError:(id *)arg5;	// IMP=0x001000000004f5bc
- (id)existingProfileContainingPayloadClass:(Class)arg1 inProfilesWithFilterFlags:(int)arg2 excludingProfileIdentifier:(id)arg3;	// IMP=0x001000000004f39a
- (id)existingProfileContainingPayloadClass:(Class)arg1 excludingProfileIdentifier:(id)arg2;	// IMP=0x001000000004f380
- (_Bool)_showWarnings:(id)arg1 interactionClient:(id)arg2 outError:(id *)arg3;	// IMP=0x001000000004f2b6
- (_Bool)_showWarningsForUpdatingProfile:(id)arg1 originalProfile:(id)arg2 interactionClient:(id)arg3 outError:(id *)arg4;	// IMP=0x001000000004f1ce
- (_Bool)_showWarningsForProfile:(id)arg1 interactionClient:(id)arg2 outError:(id *)arg3;	// IMP=0x001000000004f150
- (id)setAsideDictionariesForPayloadHandlerClass:(Class)arg1;	// IMP=0x001000000004f0f8
- (void)addSetAsideDictionary:(id)arg1 forPayloadHandlerClass:(Class)arg2;	// IMP=0x001000000004f024
- (id);	// IMP=0x001000000004ef7f
- (void)addSetAsideAccountIdentifier:(id)arg1 forPayloadClass:(Class)arg2;	// IMP=0x001000000004ee78
- (_Bool)deviceSupervisionRequiredForPayload:(id)arg1;	// IMP=0x001000000004eca7
- (id)_installProfileHandler:(id)arg1 options:(id)arg2 interactionClient:(id)arg3 source:(id)arg4 outError:(id *)arg5;	// IMP=0x001000000004aab2
- (id)_deviceLockedError;	// IMP=0x001000000004a7f3
- (id)_guardAgainstNoMDMPayloadWithNewProfile:(id)arg1 oldProfile:(id)arg2;	// IMP=0x001000000004a688
- (id)_validateMDMReplacementNewProfile:(id)arg1 oldProfile:(id)arg2 client:(id)arg3;	// IMP=0x0010000000049991
- (id)_validateNewMDMProfile:(id)arg1 installationOption:(id)arg2;	// IMP=0x0010000000049677
- (void)_promptUserForRestoreWithAccountID:(id)arg1 personaID:(id)arg2 interactionClient:(id)arg3;	// IMP=0x00100000000495c3
- (_Bool)_promptUserForMAIDSignIn:(id)arg1 personaID:(id)arg2 handler:(id)arg3 interactionClient:(id)arg4 outError:(id *)arg5;	// IMP=0x00100000000494da
- (_Bool)_promptUserForComplianceWithRestrictions:(id)arg1 handler:(id)arg2 interactionClient:(id)arg3 outError:(id *)arg4;	// IMP=0x0010000000048b99
- (id)_userCancelledErrorWithFriendlyName:(id)arg1;	// IMP=0x0010000000048b15
- (id)_invalidInputError;	// IMP=0x0010000000048a94
- (id)_installationHaltedTopLevelError;	// IMP=0x001000000004898a
- (id)_uiProfileInstallationDisabledTopLevelErrorWithCause:(id)arg1;	// IMP=0x0010000000048859
- (id)_targetDeviceMismatchError;	// IMP=0x00100000000487d8
- (id)_targetDevicePreflightFailedError;	// IMP=0x0010000000048757
- (id)_targetDeviceArchivedError;	// IMP=0x00100000000486d6
- (id)_targetDeviceUnavailableError;	// IMP=0x0010000000048655
- (id)_targetDeviceErrorWithUnderlyingError:(id)arg1;	// IMP=0x00100000000485b0
- (id)_malformedPayloadErrorWithUnderlyingError:(id)arg1;	// IMP=0x001000000004850b
- (id)_malformedPayloadErrorInternal:(_Bool)arg1;	// IMP=0x0010000000048474
- (_Bool)_purgatorySupportedForDevice:(unsigned long long)arg1;	// IMP=0x001000000004845e
- (id)_queueProfileData:(id)arg1 profile:(id)arg2 forDevice:(unsigned long long)arg3;	// IMP=0x0010000000047f40
- (long long)_targetValidationStatusForProfile:(id)arg1;	// IMP=0x0010000000047e00
- (void)queueProfileDataForInstallation:(id)arg1 originalFileName:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000047376
- (id)_badProvisioningProfileError;	// IMP=0x00100000000472f5
- (id)popProfileDataAtHeadOfInstallationQueue;	// IMP=0x0010000000047283
- (id)pathToInstalledProfileByUUID:(id)arg1;	// IMP=0x0010000000046e8a
- (id)pathToUninstalledProfileByIdentifier:(id)arg1 installationType:(long long)arg2 targetDeviceType:(unsigned long long)arg3;	// IMP=0x0010000000046d9a
- (id)pathToInstalledProfileByIdentifier:(id)arg1 installationType:(long long)arg2;	// IMP=0x0010000000046c83
- (id)identifiersOfInstalledProfilesWithFilterFlags:(int)arg1;	// IMP=0x0010000000046c1f
- (id)init;	// IMP=0x0010000000046b65

@end

