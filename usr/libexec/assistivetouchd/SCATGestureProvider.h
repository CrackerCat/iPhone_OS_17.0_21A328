//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSMutableArray, NSString, NSTimer, SBSSystemApertureLayoutMonitor, SCATElementManager, SCATGestureArrowView, SCATGestureDrawingElementManager, SCATGestureFingersElement, SCATMenu, SCATPointPicker;
@protocol SCATElement, SCATGestureProviderDelegate;

@interface SCATGestureProvider
{
    SCATMenu *_menu;	// 8 = 0x8
    NSTimer *_tellMeWhenGestureTimer;	// 16 = 0x10
    SCATPointPicker *_lineGesturePointPicker;	// 24 = 0x18
    SCATGestureDrawingElementManager *_drawingElementManager;	// 32 = 0x20
    NSMutableArray *_continuousGesturePoints;	// 40 = 0x28
    NSMutableArray *_continuousGestureTimes;	// 48 = 0x30
    NSString *_continuousGestureName;	// 56 = 0x38
    _Bool _showsFingers;	// 64 = 0x40
    unsigned long long _numberOfFingersForGestures;	// 72 = 0x48
    _Bool _isReversingContinuousGesture;	// 80 = 0x50
    _Bool _needsScanning;	// 81 = 0x51
    double _currentForce;	// 88 = 0x58
    double _targetForce;	// 96 = 0x60
    double _currentY;	// 104 = 0x68
    long long _currentOrbGestureMode;	// 112 = 0x70
    SCATGestureFingersElement *_elementForFingers;	// 120 = 0x78
    SBSSystemApertureLayoutMonitor *_layoutMonitor;	// 128 = 0x80
    struct CGRect;	// 136 = 0x88
    _Bool _hidden;	// 168 = 0xa8
    _Bool _isPinching;	// 169 = 0xa9
    _Bool _shouldAllowFingersForContinuousGesture;	// 170 = 0xaa
    unsigned int _startingDisplayIDForGestures;	// 172 = 0xac
    id <SCATGestureProviderDelegate> _delegate;	// 176 = 0xb0
    SCATElementManager *_currentSwitchController;	// 184 = 0xb8
    SCATGestureArrowView *_arrowView;	// 192 = 0xc0
    NSArray *_panFingerPositions;	// 200 = 0xc8
    NSArray *_pinchFingerOriginalPositions;	// 208 = 0xd0
    double _pinchRadius;	// 216 = 0xd8
    double _pinchAngle;	// 224 = 0xe0
    unsigned long long _lineGestureState;	// 232 = 0xe8
    unsigned long long _lineGestureType;	// 240 = 0xf0
    double _alphaForFingers;	// 248 = 0xf8
    struct CGPoint _startingScreenPointForGestures;	// 256 = 0x100
    struct CGPoint _pinchFulcrum;	// 272 = 0x110
    struct CGPoint _endPointForLineGesture;	// 288 = 0x120
    struct CGPoint _currentHoldPoint;	// 304 = 0x130
}

- (void).cxx_destruct;	// IMP=0x002000000008e2d9
@property(nonatomic) struct CGPoint currentHoldPoint; // @synthesize currentHoldPoint=_currentHoldPoint;
@property(nonatomic) double alphaForFingers; // @synthesize alphaForFingers=_alphaForFingers;
@property(nonatomic) _Bool shouldAllowFingersForContinuousGesture; // @synthesize shouldAllowFingersForContinuousGesture=_shouldAllowFingersForContinuousGesture;
@property(nonatomic) struct CGPoint endPointForLineGesture; // @synthesize endPointForLineGesture=_endPointForLineGesture;
@property(nonatomic) unsigned long long lineGestureType; // @synthesize lineGestureType=_lineGestureType;
@property(nonatomic) unsigned long long lineGestureState; // @synthesize lineGestureState=_lineGestureState;
@property(nonatomic) double pinchAngle; // @synthesize pinchAngle=_pinchAngle;
@property(nonatomic) double pinchRadius; // @synthesize pinchRadius=_pinchRadius;
@property(nonatomic) struct CGPoint pinchFulcrum; // @synthesize pinchFulcrum=_pinchFulcrum;
@property(retain, nonatomic) NSArray *pinchFingerOriginalPositions; // @synthesize pinchFingerOriginalPositions=_pinchFingerOriginalPositions;
@property(nonatomic) _Bool isPinching; // @synthesize isPinching=_isPinching;
@property(retain, nonatomic) NSArray *panFingerPositions; // @synthesize panFingerPositions=_panFingerPositions;
@property(nonatomic) unsigned int startingDisplayIDForGestures; // @synthesize startingDisplayIDForGestures=_startingDisplayIDForGestures;
@property(retain, nonatomic) SCATGestureArrowView *arrowView; // @synthesize arrowView=_arrowView;
@property(retain, nonatomic) SCATElementManager *currentSwitchController; // @synthesize currentSwitchController=_currentSwitchController;
@property(nonatomic) struct CGPoint startingScreenPointForGestures; // @synthesize startingScreenPointForGestures=_startingScreenPointForGestures;
@property(nonatomic, getter=isHidden) _Bool hidden; // @synthesize hidden=_hidden;
@property(nonatomic) __weak id <SCATGestureProviderDelegate> delegate; // @synthesize delegate=_delegate;
- (void)systemApertureLayoutDidChange:(id)arg1;	// IMP=0x001000000008deb8
- (void)didActivateFingersElement:(id)arg1;	// IMP=0x001000000008de99
- (void)fingersElement:(id)arg1 didBecomeFocused:(_Bool)arg2;	// IMP=0x001000000008de71
- (void)driver:(id)arg1 willUnfocusFromContext:(id)arg2;	// IMP=0x001000000008ddbf
- (void)driver:(id)arg1 didFocusOnContext:(id)arg2 oldContext:(id)arg3;	// IMP=0x001000000008dcf2
- (void)driver:(id)arg1 willFocusOnContext:(id)arg2;	// IMP=0x001000000008dc40
- (_Bool)handleInputAction:(long long)arg1 withElement:(id)arg2;	// IMP=0x001000000008dbc5
- (_Bool)allowsDwellScanningToAbortAfterTimeout;	// IMP=0x001000000008db81
- (_Bool)allowsDwellSelection;	// IMP=0x001000000008db3d
- (_Bool)shouldKeepScannerAwake;	// IMP=0x001000000008daf9
- (void)scannerWillMakeManagerInactive:(id)arg1 activeElementManager:(id)arg2;	// IMP=0x001000000008da6e
- (void)scannerWillMakeManagerActive:(id)arg1 forDisplayID:(unsigned int)arg2;	// IMP=0x001000000008d9f9
- (void)scannerWillMakeManagerActive:(id)arg1;	// IMP=0x001000000008d990
- (id)elementBefore:(id)arg1 didWrap:(_Bool *)arg2 options:(int *)arg3;	// IMP=0x001000000008d904
- (id)elementAfter:(id)arg1 didWrap:(_Bool *)arg2 options:(int *)arg3;	// IMP=0x001000000008d878
- (id)lastElementWithOptions:(int *)arg1;	// IMP=0x001000000008d819
- (id)firstElementWithOptions:(int *)arg1;	// IMP=0x001000000008d7ba
- (_Bool)canBeActiveElementManager;	// IMP=0x001000000008d7aa
- (void)_resignSwitchControllerPrivileges;	// IMP=0x001000000008d763
- (void)_requestSwitchControllerPrivileges;	// IMP=0x001000000008d71c
- (void)drawingViewController:(id)arg1 shouldResetScanningFromElement:(id)arg2;	// IMP=0x001000000008d5d3
- (void)exitDrawingViewController:(id)arg1;	// IMP=0x001000000008d58d
- (_Bool)drawingViewController:(id)arg1 moveFingersToPoints:(id)arg2;	// IMP=0x001000000008d4f7
- (void)touchUpForDrawingViewController:(id)arg1;	// IMP=0x001000000008d4c0
- (void)touchDownForDrawingViewController:(id)arg1;	// IMP=0x001000000008d43e
- (_Bool)pointPicker:(id)arg1 pauseForNumberOfCycles:(unsigned long long)arg2;	// IMP=0x001000000008d436
- (void)pointPicker:(id)arg1 didFinishDwellingOnPoint:(struct CGPoint)arg2;	// IMP=0x001000000008d430
- (void)pointPickerDidFinishSweeping:(id)arg1;	// IMP=0x001000000008d42a
- (void)pointPicker:(id)arg1 didSweepOutOfFocusContext:(id)arg2 isRefiningPoint:(_Bool)arg3;	// IMP=0x001000000008d424
- (void)pointPicker:(id)arg1 didSweepIntoFocusContext:(id)arg2 isRefiningPoint:(_Bool)arg3;	// IMP=0x001000000008d41e
- (void)pointPicker:(id)arg1 didPickPoint:(struct CGPoint)arg2;	// IMP=0x001000000008d40c
- (void)menuDidUpdateTipObject:(id)arg1;	// IMP=0x001000000008d3fa
- (void)menuDidFinishTransition:(id)arg1;	// IMP=0x001000000008d3c3
- (void)menuDidDisappear:(id)arg1;	// IMP=0x001000000008d31d
- (void)menuWillDisappear:(id)arg1;	// IMP=0x001000000008d303
- (void)menuDidAppear:(id)arg1;	// IMP=0x001000000008d28c
- (void)menuWillAppear:(id)arg1;	// IMP=0x001000000008d1f4
- (void)performHoldAtPoint:(struct CGPoint)arg1 isDown:(_Bool)arg2;	// IMP=0x001000000008cebb
- (void)replayGesture:(id)arg1;	// IMP=0x001000000008cdd4
- (id)gesturesSheet;	// IMP=0x001000000008cd2f
- (void)performTap;	// IMP=0x001000000008ccff
- (void)performTapAndHold;	// IMP=0x001000000008cc08
- (void)didChooseCreateInCustomGestureItemsViewController:(id)arg1;	// IMP=0x001000000008cb99
- (void)didChooseAddRecentInCustomGestureItemsViewController:(id)arg1;	// IMP=0x001000000008cb26
- (void)customGestureItemsViewController:(id)arg1 didChooseGesture:(id)arg2;	// IMP=0x001000000008c9a5
- (id)_repositionedGestureFromOriginalGesture:(id)arg1;	// IMP=0x001000000008c8df
- (id)contextForCustomGestureItemsViewController:(id)arg1;	// IMP=0x001000000008c890
- (void)fingerItemsViewController:(id)arg1 didChooseNumberOfFingers:(unsigned long long)arg2;	// IMP=0x001000000008c857
- (void)didCancelGesture:(id)arg1;	// IMP=0x001000000008c845
- (void)didRequestRedoGesture:(id)arg1;	// IMP=0x001000000008c814
- (void)didConfirmGesture:(id)arg1;	// IMP=0x001000000008c7e6
- (id)nameForConfirmationButton:(id)arg1;	// IMP=0x001000000008c7aa
- (struct CGRect)rectToClearForStop:(id)arg1;	// IMP=0x001000000008c73a
- (void)didChooseStop:(id)arg1;	// IMP=0x001000000008c70c
- (struct CGRect)rectToClearForPinchGesture:(id)arg1;	// IMP=0x001000000008c6ed
- (void)willPopPinchItemsViewController:(id)arg1;	// IMP=0x001000000008c6db
- (void)didPushPinchItemsViewController:(id)arg1;	// IMP=0x001000000008c6c9
- (void)didChooseRotateCounterclockwise:(id)arg1;	// IMP=0x001000000008c6a6
- (void)didChooseRotateClockwise:(id)arg1;	// IMP=0x001000000008c683
- (void)didChoosePinchOut:(id)arg1;	// IMP=0x001000000008c660
- (void)didChoosePinchIn:(id)arg1;	// IMP=0x001000000008c63d
- (void)_didChoosePinchItemWithName:(id)arg1 selector:(SEL)arg2;	// IMP=0x001000000008c3db
- (void)didChoosePanDown:(id)arg1;	// IMP=0x001000000008c3b8
- (void)didChoosePanUp:(id)arg1;	// IMP=0x001000000008c395
- (void)didChoosePanRight:(id)arg1;	// IMP=0x001000000008c372
- (void)didChoosePanLeft:(id)arg1;	// IMP=0x001000000008c34f
- (void)_didChoosePanWithName:(id)arg1 selector:(SEL)arg2;	// IMP=0x001000000008c20d
- (void)didChooseForceTouchGesture:(id)arg1;	// IMP=0x001000000008c1df
- (void)didChooseArbitraryFlick:(id)arg1;	// IMP=0x001000000008c1c8
- (void)didChooseFlickRight:(id)arg1;	// IMP=0x001000000008c1a9
- (void)didChooseFlickLeft:(id)arg1;	// IMP=0x001000000008c185
- (void)didChooseFlickUp:(id)arg1;	// IMP=0x001000000008c161
- (void)didChooseFlickDown:(id)arg1;	// IMP=0x001000000008c13d
- (void)_didChooseFlickWithAngle:(double)arg1 name:(id)arg2;	// IMP=0x001000000008c10f
- (unsigned long long)numberOfFingers;	// IMP=0x001000000008c0fe
- (void)didChooseDrawingGesture:(id)arg1;	// IMP=0x001000000008bfd5
- (void)didChooseFingers:(id)arg1;	// IMP=0x001000000008bf1e
- (void)didChooseDoubleTapGesture:(id)arg1;	// IMP=0x001000000008bea2
- (void)didChooseHoldAndDragGesture:(id)arg1;	// IMP=0x001000000008be8b
- (void)didChooseDragGesture:(id)arg1;	// IMP=0x001000000008be77
- (void)didChoosePinchGesture:(id)arg1;	// IMP=0x001000000008be09
- (void)didChoosePanGesture:(id)arg1;	// IMP=0x001000000008bd9b
- (void)didChooseFlickGesture:(id)arg1;	// IMP=0x001000000008bd2d
- (void)didChooseFavorites:(id)arg1;	// IMP=0x001000000008bcbd
- (void)_startConfirmingLineGestureWithEndpoint:(struct CGPoint)arg1;	// IMP=0x001000000008bad0
- (void)_startPickingEndPointForLineGesture:(unsigned long long)arg1;	// IMP=0x001000000008b8d3
- (id)_promptForLineGesture:(unsigned long long)arg1;	// IMP=0x001000000008b8a1
- (void)_clearLineGestureState;	// IMP=0x001000000008b7e3
- (struct CGRect)rectToClearForFingersWithGestureSheet:(_Bool)arg1;	// IMP=0x001000000008b6bb
- (struct CGRect)_rectToClearForPinchGesture;	// IMP=0x001000000008b5b4
- (struct CGRect)_rectForFingers:(id)arg1;	// IMP=0x001000000008b537
- (void)_updateShowsFingers;	// IMP=0x001000000008b478
- (void)_setShowsFingers:(_Bool)arg1;	// IMP=0x001000000008b405
- (unsigned long long)_numberOfFingers;	// IMP=0x001000000008b3c9
- (unsigned long long)_numberOfFingersWithGestureSheet:(_Bool)arg1;	// IMP=0x001000000008b366
- (void)_setNumberOfFingersForGestures:(unsigned long long)arg1;	// IMP=0x001000000008b2bb
- (void)_clearArrowView;	// IMP=0x001000000008b261
- (void)_startTellMeWhenTimerWithSelector:(SEL)arg1 interval:(double)arg2;	// IMP=0x001000000008b168
- (void)_startTellMeWhenTimerWithSelector:(SEL)arg1;	// IMP=0x001000000008b153
- (void)_clearTellMeWhenTimer;	// IMP=0x001000000008b11b
- (void)_updateVisibleFingers;	// IMP=0x001000000008adb9
- (void)_endPinchMode;	// IMP=0x001000000008ad40
- (void)_startPinchMode;	// IMP=0x001000000008ac63
- (void)_finishLineGesture;	// IMP=0x001000000008a973
- (void)_panDown;	// IMP=0x001000000008a956
- (void)_panUp;	// IMP=0x001000000008a939
- (void)_panRight;	// IMP=0x001000000008a91c
- (void)_panLeft;	// IMP=0x001000000008a8ff
- (void)_panByDelta:(struct CGSize)arg1;	// IMP=0x001000000008a6d0
- (id)_panPositionsAdjustedByDelta:(struct CGSize)arg1;	// IMP=0x001000000008a499
- (void)_rotateCounterclockwise;	// IMP=0x001000000008a47c
- (void)_rotateClockwise;	// IMP=0x001000000008a45f
- (void)_pinchIn;	// IMP=0x000000000008a442
- (void)_pinchOut;	// IMP=0x001000000008a425
- (void)_updatePinchPositionsWithAttemptedRadiusDelta:(double)arg1 angleDelta:(double)arg2;	// IMP=0x001000000008a0d7
- (double)_pinchAngleAdjustedByDelta:(double)arg1;	// IMP=0x001000000008a093
- (double)_pinchRadiusAdjustedByDelta:(double)arg1;	// IMP=0x001000000008a04f
- (id)_pinchPositionsWithRadius:(double)arg1 angle:(double)arg2;	// IMP=0x0010000000089ef9
- (void)_performForceTouchGesture;	// IMP=0x0010000000089e5e
- (void)_performFlickGestureWithAngle:(double)arg1 name:(id)arg2;	// IMP=0x0010000000089d73
- (void)_performTapGestureForDoubleTap:(_Bool)arg1;	// IMP=0x0010000000089c99
- (void)_performGesture:(id)arg1;	// IMP=0x0010000000089b76
- (void)_saveRecentGesture:(id)arg1;	// IMP=0x0010000000089a23
- (void)_handleCompletedContinuousGesture;	// IMP=0x00100000000898e1
- (void)_addPointsToContinuousGestureData:(id)arg1;	// IMP=0x001000000008971c
- (void)_initializeContinuousGestureDataWithName:(id)arg1 points:(id)arg2;	// IMP=0x001000000008940f
- (void)_prepareToBeginContinuousGesture;	// IMP=0x00100000000893e2
- (void)_resetContinuousGestureData;	// IMP=0x0010000000089389
- (_Bool)_isPerformingContinuousGesture;	// IMP=0x0010000000089374
- (id)_startingPointsAsStrings;	// IMP=0x001000000008921e
- (struct CGPoint)_startingPointForGestures;	// IMP=0x001000000008911c
- (void)_updateStartingPointForGesturesWithScreenPoint:(id)arg1 forDisplayID:(unsigned int)arg2;	// IMP=0x0010000000088ffc
- (void)_updateStartingPointForGesturesWithScreenPoint:(id)arg1;	// IMP=0x0010000000088fe5
- (id)_fingerController;	// IMP=0x0010000000088f52
- (id)identifier;	// IMP=0x0010000000088f3e
@property(readonly, nonatomic) id <SCATElement> elementForFingers;
- (void)orientationDidChange:(id)arg1;	// IMP=0x0010000000088ce5
- (void)dealloc;	// IMP=0x0010000000088c77
- (id)initWithMenu:(id)arg1;	// IMP=0x0010000000088a74

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

