//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AXDispatchTimer, AXOutputManager, AXSSInterDeviceCommunicator, AXSwitchRecipe, AXUpdateElementVisualsCoalescer, HNDAccessibilityManager, HNDScannerAutoscroller, NSArray, NSMutableSet, NSString, SCATActionHandler, SCATAlternateKeysManager, SCATAutomaticDriver, SCATCandidateBarManager, SCATCursorManager, SCATDriver, SCATDwellDriver, SCATElementManager, SCATElementNavigationController, SCATFocusContext, SCATGestureProvider, SCATInputController, SCATManualDriver, SCATMenu, SCATPointPicker, SCATScrollViewPickerManager;
@protocol OS_dispatch_queue, SCATElement, SCATScannerManagerDelegate;

@interface SCATScannerManager : NSObject
{
    _Bool _isLoaded;	// 8 = 0x8
    _Bool _shouldUseCameraPointPicker;	// 9 = 0x9
    _Bool _forceDisableScreenLock;	// 10 = 0xa
    _Bool _didSetFocusContextForResume;	// 11 = 0xb
    _Bool _didPauseForReasonsToDisableScanning;	// 12 = 0xc
    unsigned int _lockedToDisplayID;	// 16 = 0x10
    AXOutputManager *_outputManager;	// 24 = 0x18
    SCATCursorManager *_cursorManager;	// 32 = 0x20
    AXDispatchTimer *_beginScanningTimer;	// 40 = 0x28
    HNDScannerAutoscroller *_autoscroller;	// 48 = 0x30
    SCATInputController *_inputController;	// 56 = 0x38
    SCATGestureProvider *_gestureProvider;	// 64 = 0x40
    SCATMenu *_menu;	// 72 = 0x48
    SCATPointPicker *_pointPicker;	// 80 = 0x50
    SCATElementNavigationController *_elementNavController;	// 88 = 0x58
    SCATManualDriver *_manualScanningDriver;	// 96 = 0x60
    SCATAutomaticDriver *_autoScanningDriver;	// 104 = 0x68
    SCATDriver *_activeScannerDriver;	// 112 = 0x70
    SCATElementManager *_activeElementManager;	// 120 = 0x78
    id <SCATScannerManagerDelegate> _delegate;	// 128 = 0x80
    SCATActionHandler *_selectActionHandler;	// 136 = 0x88
    SCATActionHandler *_selectAndResumeAutoscanningActionHandler;	// 144 = 0x90
    HNDAccessibilityManager *_testAxManager;	// 152 = 0x98
    NSArray *_recentSpeechOutputStrings;	// 160 = 0xa0
    SCATAlternateKeysManager *_alternateKeysManager;	// 168 = 0xa8
    SCATScrollViewPickerManager *_scrollViewPickerManager;	// 176 = 0xb0
    SCATCandidateBarManager *_candidateBarManager;	// 184 = 0xb8
    SCATDwellDriver *_dwellScanningDriver;	// 192 = 0xc0
    AXUpdateElementVisualsCoalescer *_updateElementVisualsCoalescer;	// 200 = 0xc8
    SCATActionHandler *_activateActionHandler;	// 208 = 0xd0
    SCATFocusContext *_focusContextForResume;	// 216 = 0xd8
    NSMutableSet *_reasonsToDisableScanning;	// 224 = 0xe0
    AXSwitchRecipe *_currentRecipe;	// 232 = 0xe8
    long long _itemMenuState;	// 240 = 0xf0
    long long _currentAction;	// 248 = 0xf8
    AXSSInterDeviceCommunicator *_interDeviceCommunicator;	// 256 = 0x100
    NSObject<OS_dispatch_queue> *_managedConfigurationQueue;	// 264 = 0x108
    NSMutableSet *_scannerObservers;	// 272 = 0x110
    id <SCATElement> _cachedPickerElement;	// 280 = 0x118
}

+ (void)updateElementCacheScheme;	// IMP=0x00200000000e486d
+ (id)sharedManager;	// IMP=0x00100000000e4818
- (void).cxx_destruct;	// IMP=0x00200000000f12a1
@property(retain, nonatomic) id <SCATElement> cachedPickerElement; // @synthesize cachedPickerElement=_cachedPickerElement;
@property(retain, nonatomic) NSMutableSet *scannerObservers; // @synthesize scannerObservers=_scannerObservers;
@property(nonatomic) unsigned int lockedToDisplayID; // @synthesize lockedToDisplayID=_lockedToDisplayID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *managedConfigurationQueue; // @synthesize managedConfigurationQueue=_managedConfigurationQueue;
@property(retain, nonatomic) AXSSInterDeviceCommunicator *interDeviceCommunicator; // @synthesize interDeviceCommunicator=_interDeviceCommunicator;
@property(nonatomic) long long currentAction; // @synthesize currentAction=_currentAction;
@property(nonatomic) long long itemMenuState; // @synthesize itemMenuState=_itemMenuState;
@property(retain, nonatomic) AXSwitchRecipe *currentRecipe; // @synthesize currentRecipe=_currentRecipe;
@property(nonatomic) _Bool didPauseForReasonsToDisableScanning; // @synthesize didPauseForReasonsToDisableScanning=_didPauseForReasonsToDisableScanning;
@property(retain, nonatomic) NSMutableSet *reasonsToDisableScanning; // @synthesize reasonsToDisableScanning=_reasonsToDisableScanning;
@property(nonatomic) _Bool didSetFocusContextForResume; // @synthesize didSetFocusContextForResume=_didSetFocusContextForResume;
@property(retain, nonatomic) SCATFocusContext *focusContextForResume; // @synthesize focusContextForResume=_focusContextForResume;
@property(nonatomic) _Bool forceDisableScreenLock; // @synthesize forceDisableScreenLock=_forceDisableScreenLock;
@property(retain, nonatomic) SCATActionHandler *activateActionHandler; // @synthesize activateActionHandler=_activateActionHandler;
@property(retain, nonatomic) AXUpdateElementVisualsCoalescer *updateElementVisualsCoalescer; // @synthesize updateElementVisualsCoalescer=_updateElementVisualsCoalescer;
@property(retain, nonatomic) SCATDwellDriver *dwellScanningDriver; // @synthesize dwellScanningDriver=_dwellScanningDriver;
@property(retain, nonatomic) SCATCandidateBarManager *candidateBarManager; // @synthesize candidateBarManager=_candidateBarManager;
@property(retain, nonatomic) SCATScrollViewPickerManager *scrollViewPickerManager; // @synthesize scrollViewPickerManager=_scrollViewPickerManager;
@property(retain, nonatomic) SCATAlternateKeysManager *alternateKeysManager; // @synthesize alternateKeysManager=_alternateKeysManager;
@property(retain, nonatomic) NSArray *recentSpeechOutputStrings; // @synthesize recentSpeechOutputStrings=_recentSpeechOutputStrings;
@property(retain, nonatomic) HNDAccessibilityManager *testAxManager; // @synthesize testAxManager=_testAxManager;
@property(readonly, nonatomic) _Bool shouldUseCameraPointPicker; // @synthesize shouldUseCameraPointPicker=_shouldUseCameraPointPicker;
@property(retain, nonatomic) SCATActionHandler *selectAndResumeAutoscanningActionHandler; // @synthesize selectAndResumeAutoscanningActionHandler=_selectAndResumeAutoscanningActionHandler;
@property(retain, nonatomic) SCATActionHandler *selectActionHandler; // @synthesize selectActionHandler=_selectActionHandler;
@property(nonatomic) __weak id <SCATScannerManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SCATElementManager *activeElementManager; // @synthesize activeElementManager=_activeElementManager;
@property(retain, nonatomic) SCATDriver *activeScannerDriver; // @synthesize activeScannerDriver=_activeScannerDriver;
@property(retain, nonatomic) SCATAutomaticDriver *autoScanningDriver; // @synthesize autoScanningDriver=_autoScanningDriver;
@property(retain, nonatomic) SCATManualDriver *manualScanningDriver; // @synthesize manualScanningDriver=_manualScanningDriver;
- (void)setElementNavController:(id)arg1;	// IMP=0x00100000000f0f8a
- (id)elementNavController;	// IMP=0x00100000000f0f80
@property(retain, nonatomic) SCATPointPicker *pointPicker; // @synthesize pointPicker=_pointPicker;
@property(retain, nonatomic) SCATMenu *menu; // @synthesize menu=_menu;
@property(retain, nonatomic) SCATGestureProvider *gestureProvider; // @synthesize gestureProvider=_gestureProvider;
@property(retain, nonatomic) SCATInputController *inputController; // @synthesize inputController=_inputController;
@property(retain, nonatomic) HNDScannerAutoscroller *autoscroller; // @synthesize autoscroller=_autoscroller;
@property(retain, nonatomic) AXDispatchTimer *beginScanningTimer; // @synthesize beginScanningTimer=_beginScanningTimer;
@property(retain, nonatomic) SCATCursorManager *cursorManager; // @synthesize cursorManager=_cursorManager;
@property(retain, nonatomic) AXOutputManager *outputManager; // @synthesize outputManager=_outputManager;
- (struct CGPoint)_startingPointForGesturesForPointPicker:(id)arg1;	// IMP=0x00100000000f0e93
- (void)_notifyObserversScannerDidPause;	// IMP=0x00100000000f0d39
- (void)_notifyObserversScannerDidBecomeInactive;	// IMP=0x00100000000f0bdf
- (void)_notifyObserversScannerDidBecomeActive;	// IMP=0x00100000000f0a85
- (void)_notifyObserversScannerWillUnfocusFromContext:(id)arg1;	// IMP=0x00100000000f08f3
- (void)_notifyObserversScannerDidFocusOnContext:(id)arg1 oldContext:(id)arg2;	// IMP=0x00100000000f074e
- (void)_notifyObserversScannerWillFocusOnContext:(id)arg1;	// IMP=0x00100000000f05cd
- (void)removeObserver:(id)arg1;	// IMP=0x00100000000f0564
- (void)addObserver:(id)arg1;	// IMP=0x00100000000f04fb
- (void)showUIContext:(_Bool)arg1;	// IMP=0x00100000000f0331
- (void)hideUIContext:(_Bool)arg1;	// IMP=0x00100000000f013f
- (_Bool)isUIContextHidden;	// IMP=0x00100000000f0062
- (id)scatBackCursorUIContextForDisplayID:(unsigned int)arg1;	// IMP=0x00100000000effdd
- (id)scatFrontCursorUIContextForDisplayID:(unsigned int)arg1;	// IMP=0x00100000000eff58
- (id)scatUIContextForDisplayID:(unsigned int)arg1;	// IMP=0x00100000000efed3
- (id)scatFrontCursorUIContext;	// IMP=0x00100000000efe44
- (id)scatBackCursorUIContext;	// IMP=0x00100000000efdb5
- (id)scatUIContext;	// IMP=0x00100000000efd26
- (void)presentPostScanningMenuForElementNavigationController:(id)arg1;	// IMP=0x00100000000efce5
- (_Bool)candidateBarManager:(id)arg1 hasValidTypingCandidates:(id)arg2;	// IMP=0x00100000000efc77
- (id)_typingCandidates;	// IMP=0x00100000000efbca
- (void)alternateKeysManager:(id)arg1 didSelectAlternateKey:(id)arg2;	// IMP=0x00100000000efb18
- (id)focusContextForActionHandler:(id)arg1;	// IMP=0x00100000000efaaf
- (void)actionHandlerDidCancelPendingAction:(id)arg1;	// IMP=0x00100000000efa9b
- (void)actionHandlerDidFireAction:(id)arg1;	// IMP=0x00100000000ef618
- (_Bool)actionHandler:(id)arg1 shouldActImmediatelyOnActionCount:(unsigned long long)arg2;	// IMP=0x00100000000ef584
- (id)_focusContextAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000000ef494
- (long long)_dwellSwitchAssignedAction;	// IMP=0x00100000000ef48c
- (void)pointPicker:(id)arg1 didFinishDwellingOnPoint:(struct CGPoint)arg2;	// IMP=0x00100000000ef44f
- (_Bool)pointPicker:(id)arg1 pauseForNumberOfCycles:(unsigned long long)arg2;	// IMP=0x00100000000ef3fe
- (void)pointPickerDidFinishSweeping:(id)arg1;	// IMP=0x00100000000ef3f8
- (void)pointPicker:(id)arg1 didSweepOutOfFocusContext:(id)arg2 isRefiningPoint:(_Bool)arg3;	// IMP=0x00100000000ef3b1
- (void)pointPicker:(id)arg1 didSweepIntoFocusContext:(id)arg2 isRefiningPoint:(_Bool)arg3;	// IMP=0x00100000000ef2db
- (void)pointPicker:(id)arg1 didPickPoint:(struct CGPoint)arg2;	// IMP=0x00100000000eefb7
- (void)didChooseCreateCustomGestureFromGestureProvider:(id)arg1;	// IMP=0x00100000000eef07
- (void)gestureProvider:(id)arg1 shouldResetScanningFromElement:(id)arg2;	// IMP=0x00100000000eee2d
- (id)contentViewForGestureProvider:(id)arg1;	// IMP=0x00100000000eedfd
- (void)gestureProvider:(id)arg1 didShowFingers:(_Bool)arg2;	// IMP=0x00100000000eedf7
- (void)shouldEndScanningGestureProvider:(id)arg1;	// IMP=0x00100000000eedbe
- (void)shouldStartScanningGestureProvider:(id)arg1;	// IMP=0x00100000000eed85
- (void)menuDidUpdateTipObject:(id)arg1;	// IMP=0x00100000000eed7f
- (void)menuDidFinishTransition:(id)arg1;	// IMP=0x00100000000eed2c
- (void)menuWillBeginTransition:(id)arg1;	// IMP=0x00100000000eece8
- (void)menuDidDisappear:(id)arg1;	// IMP=0x00100000000eea65
- (void)menuDidAppear:(id)arg1;	// IMP=0x00100000000eea5f
- (void)menuWillAppear:(id)arg1;	// IMP=0x00000000000eea59
- (void)menu:(id)arg1 playSoundEffect:(int)arg2;	// IMP=0x00100000000ee9ed
- (void)menu:(id)arg1 speakAnnouncement:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000000ee947
- (void)menu:(id)arg1 showSysdiagnoseDisplayString:(id)arg2;	// IMP=0x00100000000ee932
- (id)interDeviceCommunicatorForMenu:(id)arg1;	// IMP=0x00100000000ee920
- (void)returnControlToForwarderDevice:(id)arg1;	// IMP=0x00100000000ee8e3
- (_Bool)canReturnControlToForwarderDevice:(id)arg1;	// IMP=0x00100000000ee89f
- (void)searchForControllableDevicesWithMenu:(id)arg1;	// IMP=0x00100000000ee862
- (_Bool)canSearchForControllableDevicesWithMenu:(id)arg1;	// IMP=0x00100000000ee81e
- (void)menu:(id)arg1 showScrollViewPickerForScrollViews:(id)arg2 elementsToScroll:(id)arg3 scrollAction:(int)arg4;	// IMP=0x00100000000ee6dc
- (_Bool)shouldShowAppWideScrollActionsInMenu:(id)arg1;	// IMP=0x00100000000ee6ca
- (void)menu:(id)arg1 setItemMenuState:(long long)arg2;	// IMP=0x00100000000ee6b5
- (long long)itemMenuStateForMenu:(id)arg1;	// IMP=0x00100000000ee6a3
- (_Bool)shouldAddItemSpecificMenuOptionsToMenu:(id)arg1;	// IMP=0x00100000000ee691
- (_Bool)_isPostScanningMenu:(id)arg1;	// IMP=0x00100000000ee65b
- (void)menu:(id)arg1 activateRecipe:(id)arg2;	// IMP=0x00100000000ee646
- (id)exitActionElementForFingersInMenu:(id)arg1;	// IMP=0x00100000000ee5f6
- (void)didPressScreenChangingButtonInMenu:(id)arg1;	// IMP=0x00100000000ee5aa
- (id)gesturesSheetForMenu:(id)arg1;	// IMP=0x00100000000ee55a
- (struct CGRect)menu:(id)arg1 rectToClearForFingersWithGestureSheet:(_Bool)arg2;	// IMP=0x00100000000ee4ee
- (void)menu:(id)arg1 showTypingCandidates:(id)arg2;	// IMP=0x00100000000ee485
- (void)menu:(id)arg1 showAlternateKeysForKey:(id)arg2;	// IMP=0x00100000000ee41c
- (void)inputController:(id)arg1 didReceivePoint:(struct CGPoint)arg2;	// IMP=0x00100000000ee3c3
- (void)performSysdiagnoseForInputController:(id)arg1;	// IMP=0x00100000000ee3bd
- (id)userInterfaceClientForInputController:(id)arg1;	// IMP=0x00100000000ee33c
- (void)inputController:(id)arg1 didReceiveRecipeHoldAtPoint:(struct CGPoint)arg2 isDown:(_Bool)arg3;	// IMP=0x00100000000ee2cb
- (void)inputController:(id)arg1 didReceiveRecipeActionForMappingAtIndex:(unsigned long long)arg2 isLongPressAction:(_Bool)arg3;	// IMP=0x00100000000edee8
- (void)inputController:(id)arg1 didReceiveAction:(long long)arg2;	// IMP=0x00100000000ed3d6
- (void)didEndLongPressForInputController:(id)arg1;	// IMP=0x00100000000ed312
- (void)didBeginLongPressForInputController:(id)arg1;	// IMP=0x00100000000ed284
- (void)accessibilityManagerShouldResumeScanning:(id)arg1;	// IMP=0x00100000000ed26b
- (void)accessibilityManagerShouldPauseScanning:(id)arg1;	// IMP=0x00100000000ed252
- (void)_updateElementVisuals;	// IMP=0x00100000000ed0ad
- (void)accessibilityManager:(id)arg1 mediaDidBegin:(struct __CFData *)arg2;	// IMP=0x00100000000ed09b
- (void)_waitForApplication:(id)arg1;	// IMP=0x00100000000ecbef
- (void)accessibilityManager:(id)arg1 applicationWasActivated:(id)arg2;	// IMP=0x00100000000eca7b
- (void)accessibilityManager:(id)arg1 updateElementVisuals:(id)arg2;	// IMP=0x00100000000eca3e
- (void)accessibilityManager:(id)arg1 nativeFocusElementDidChange:(id)arg2;	// IMP=0x00100000000ec8c5
- (void)accessibilityManager:(id)arg1 didFetchElementsForEvent:(long long)arg2 foundNewElements:(_Bool)arg3;	// IMP=0x00100000000ec4e4
- (void)_updateMenuAfterElementFetchFoundNewElements:(_Bool)arg1;	// IMP=0x00100000000ec252
- (void)handleStopSpeaking:(id)arg1;	// IMP=0x00100000000ec1bd
- (void)handleScreenChange:(id)arg1;	// IMP=0x00100000000ec0e5
- (void)handleAlertDidAppear:(id)arg1;	// IMP=0x00100000000ec01a
- (void)handleAnnouncement:(id)arg1;	// IMP=0x00100000000ebf1e
- (int)_validatedSelectBehaviorForCurrentSelectBehavior:(int)arg1 replacementElement:(id)arg2;	// IMP=0x00100000000ebeec
- (void)accessibilityManager:(id)arg1 willFetchElementsForEvent:(long long)arg2;	// IMP=0x00100000000ebee6
- (void)accessibilityManager:(id)arg1 didScheduleFetchEvent:(long long)arg2;	// IMP=0x00100000000ebee0
- (void)accessibilityManager:(id)arg1 screenWillChange:(struct __CFData *)arg2;	// IMP=0x00100000000ebe94
- (void)accessibilityManager:(id)arg1 didReceiveEvent:(long long)arg2 data:(id)arg3;	// IMP=0x00100000000ebbe2
- (_Bool)cursorManagerShouldHideMenuCursor:(id)arg1;	// IMP=0x00100000000ebb9e
- (void)actionHandlerForUI:(id)arg1 willPerformDelayedActionOnContext:(id)arg2 withCount:(unsigned long long)arg3;	// IMP=0x00100000000eba4a
- (void)actionHandlerForUIWillFireAction:(id)arg1;	// IMP=0x00100000000eb95c
- (void)actionHandlerForUIDidCancelPendingAction:(id)arg1;	// IMP=0x00100000000eb86e
- (unsigned long long)minimumPointPickerNumberOfCyclesForDriver:(id)arg1;	// IMP=0x00100000000eb855
- (void)driver:(id)arg1 indicateDwellScanningWillAbort:(_Bool)arg2;	// IMP=0x00100000000eb7a3
- (void)driverDidBecomeActive:(id)arg1 didChange:(_Bool)arg2;	// IMP=0x00100000000eb6f2
- (void)driverDidBecomeInactive:(id)arg1;	// IMP=0x00100000000eb69d
- (void)driverDidPause:(id)arg1;	// IMP=0x00100000000eb648
- (void)driver:(id)arg1 willUnfocusFromContext:(id)arg2;	// IMP=0x00100000000eb633
- (void)driver:(id)arg1 didFocusOnContext:(id)arg2 oldContext:(id)arg3;	// IMP=0x00100000000eb475
- (void)driver:(id)arg1 willFocusOnContext:(id)arg2;	// IMP=0x00100000000eb460
- (void)_driver:(id)arg1 outputAudioForContext:(id)arg2;	// IMP=0x00100000000eb05a
- (id)activeElementManagerForDriver:(id)arg1;	// IMP=0x00100000000eb048
- (void)highlightAsPotentialReceiverForDeviceWithName:(id)arg1;	// IMP=0x00100000000eaede
- (void)_disableUserInterfaceClientForPotentialReceiver;	// IMP=0x00100000000eae66
- (void)didBecomeIdle;	// IMP=0x00100000000eae29
- (void)didDisconnectAsReceiver;	// IMP=0x00100000000ead92
- (void)didDisconnectAsForwarderFromDeviceWithName:(id)arg1;	// IMP=0x00100000000eac8a
- (void)didConnectAsReceiverWithSettings:(id)arg1;	// IMP=0x00100000000eaaee
- (void)didConnectAsForwarderToDeviceWithName:(id)arg1;	// IMP=0x00100000000ea9ec
- (_Bool)canAdvertise;	// IMP=0x00100000000ea74f
- (void)_handleVolumeUpAction;	// IMP=0x00100000000ea70b
- (void)_handleTripleClickAction;	// IMP=0x00100000000ea6c7
- (void)_handleDictationAction;	// IMP=0x00100000000ea658
- (void)_handleForceTouchAction;	// IMP=0x00100000000ea44c
- (void)_handleVolumeDownAction;	// IMP=0x00100000000ea408
- (void)_handleSiriAction;	// IMP=0x00100000000ea3c4
- (void)_handleControlCenterAction;	// IMP=0x00100000000ea380
- (void)_handleNotificationCenterAction;	// IMP=0x00100000000ea33c
- (void)_handleHomeAction;	// IMP=0x00100000000ea2ea
- (void)_handleAppSwitcherAction;	// IMP=0x00100000000ea2a6
- (void)_setCurrentRecipe:(id)arg1 shouldShowAlert:(_Bool)arg2;	// IMP=0x00100000000e9ee0
- (void)_applyLaunchRecipeUUID;	// IMP=0x00100000000e9c59
- (void)_exitRecipeOnTimeout;	// IMP=0x00100000000e9bdb
- (void)_resetRecipeTimeoutIfApplicable;	// IMP=0x00100000000e9a64
- (void)resumeAutoscanning;	// IMP=0x00100000000e9a52
- (void)_showSimpleBannerWithText:(id)arg1;	// IMP=0x00100000000e999e
- (void)_updateScanningStyle;	// IMP=0x00100000000e991e
- (_Bool)shouldBypassShowingMenuForElement:(id)arg1;	// IMP=0x00100000000e9872
- (void)selectElementAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000000e97ea
- (void)selectElement:(id)arg1;	// IMP=0x00100000000e97b9
- (_Bool)activateElement:(id)arg1;	// IMP=0x00100000000e94cc
- (void)useFocusContextOnResume:(id)arg1;	// IMP=0x00100000000e9499
- (_Bool)_shouldIgnoreAllScannerControlMessages;	// IMP=0x00100000000e9451
- (void)removeReasonToDisableScanning:(id)arg1;	// IMP=0x00100000000e9186
- (void)addReasonToDisableScanning:(id)arg1;	// IMP=0x00100000000e8d45
- (void)pauseScanningWithScreenLockDisabled:(_Bool)arg1;	// IMP=0x00100000000e8c7e
- (void)pauseScanning;	// IMP=0x00100000000e8c6a
- (void)endScanning;	// IMP=0x00100000000e8bd4
- (void)resumeScanning;	// IMP=0x00100000000e8a30
- (void)_beginOrContinueScanningWithFocusContext:(id)arg1 shouldBegin:(_Bool)arg2 foundNewElements:(_Bool)arg3;	// IMP=0x00100000000e864a
- (void)continueScanningWithFocusContext:(id)arg1 foundNewElements:(_Bool)arg2;	// IMP=0x00100000000e8633
- (void)beginScanningWithFocusContext:(id)arg1;	// IMP=0x00100000000e8619
@property(readonly, nonatomic) _Bool isInactive;
@property(readonly, nonatomic) _Bool isPaused;
@property(readonly, nonatomic) _Bool isActive;
- (id)axManager;	// IMP=0x00100000000e8485
- (void)switchCurrentDisplayContext;	// IMP=0x00100000000e826f
- (_Bool)isExternalDisplayConnected;	// IMP=0x00100000000e81f5
- (unsigned int)currentDisplayID;	// IMP=0x00100000000e7eb6
@property(readonly, nonatomic) id <SCATElement> currentElement;
@property(readonly, nonatomic) SCATFocusContext *currentFocusContext;
- (_Bool)isSystemSleeping;	// IMP=0x00100000000e7dcb
@property(readonly, nonatomic) _Bool isLandscape;
@property(readonly, nonatomic) unsigned long long immediateSelectActionCount;
@property(readonly, nonatomic) _Bool isUsingPointMode;
- (_Bool)isSwitchWithSource:(id)arg1;	// IMP=0x00100000000e7bfb
@property(readonly, nonatomic) _Bool isSpeechEnabled;
@property(readonly, nonatomic) _Bool areSoundEffectsEnabled;
@property(readonly, nonatomic) long long scanningMode;
@property(readonly, nonatomic) _Bool isGroupingEnabled;
@property(readonly, nonatomic) _Bool isAutoscanEnabled;
- (void)_updateAudioSessionState;	// IMP=0x00100000000e78d6
- (void)_deactivateAudioSession;	// IMP=0x00100000000e7851
- (_Bool)_isScannerControlledByDriver:(id)arg1;	// IMP=0x00100000000e77e3
- (void)_updateActiveElementManager:(CDUnknownBlockType)arg1;	// IMP=0x00100000000e7778
- (void)_updateActiveElementManager;	// IMP=0x00100000000e7764
- (id)_primaryElementManagerForScannerState;	// IMP=0x00100000000e7456
- (id)_elementManagerForScannerState;	// IMP=0x00100000000e72eb
- (void)setActiveElementManager:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000e6ec8
- (id)_driverForScannerState;	// IMP=0x00100000000e6e15
@property(readonly, nonatomic) _Bool isControllingOtherDevice;
@property(readonly, nonatomic) _Bool isHandlingInterDeviceCommunication;
@property(readonly, nonatomic) _Bool isLoaded;
- (void)_scanningModePreferenceDidChange;	// IMP=0x00100000000e6a9f
@property(readonly, copy) NSString *description;
- (void)unloadScanner;	// IMP=0x00100000000e639f
- (void)loadScanner;	// IMP=0x00100000000e505a
- (void)_performAccessibilityValidations;	// IMP=0x00100000000e5054
- (void)handleUSBMFiDeviceConnected;	// IMP=0x00100000000e4dcf
- (void)_setUSBRMPreferenceDisabled;	// IMP=0x00100000000e4d70
- (_Bool)_userHasDisabledUSBRM;	// IMP=0x00100000000e4d17
- (_Bool)waitingForSecureIntent;	// IMP=0x00100000000e4ccc
- (void)performDrop;	// IMP=0x00100000000e4c5b
- (void)moveDragSessionToFixedSpaceScreenPoint:(struct CGPoint)arg1;	// IMP=0x00100000000e4bd3
- (void)cancelDrag;	// IMP=0x00100000000e4b62
- (_Bool)isDragActive;	// IMP=0x00100000000e4aed
- (void)waitForDragStartFromPid:(int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000e4a57
- (void)dealloc;	// IMP=0x00100000000e49fe
- (id)init;	// IMP=0x00100000000e48df

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

