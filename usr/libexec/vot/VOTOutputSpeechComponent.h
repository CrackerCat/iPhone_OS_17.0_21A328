//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AXIndexMap, AXSSPunctuationGroup, NSArray, NSDictionary, NSMutableDictionary, NSNumber, NSString, SCRCTargetSelectorTimer, SCRCThread, TTSSpeechSynthesizer;
@protocol BSInvalidatable;

@interface VOTOutputSpeechComponent
{
    SCRCThread *_speechThread;	// 24 = 0x18
    AXIndexMap *_allPunctuationTable;	// 32 = 0x20
    AXIndexMap *_selectedLanguageAllPunctuationTable;	// 40 = 0x28
    AXIndexMap *_somePunctuationTable;	// 48 = 0x30
    AXIndexMap *_selectedLanguageSomePunctuationTable;	// 56 = 0x38
    AXIndexMap *_noPunctuationTable;	// 64 = 0x40
    AXIndexMap *_selectedLanguageNoPunctuationTable;	// 72 = 0x48
    AXIndexMap *_specialPunctionTable;	// 80 = 0x50
    AXIndexMap *_noneTableOverrides;	// 88 = 0x58
    NSString *_spokenLanguage;	// 96 = 0x60
    NSDictionary *_languageExceptions;	// 104 = 0x68
    _Bool _isSpeaking;	// 112 = 0x70
    _Bool _userStopped;	// 113 = 0x71
    _Bool _isPaused;	// 114 = 0x72
    _Bool _isVolumeCapped;	// 115 = 0x73
    float _rawVolume;	// 116 = 0x74
    NSMutableDictionary *_speechStatistics;	// 120 = 0x78
    double _lastTimeSpeechStarted;	// 128 = 0x80
    AXIndexMap *_currentActionVariants;	// 136 = 0x88
    id _currentRequest;	// 144 = 0x90
    NSArray *_userSubstitutions;	// 152 = 0x98
    NSArray *_transientSubstitutions;	// 160 = 0xa0
    SCRCTargetSelectorTimer *_stopSpeakingAfterLongPauseTimer;	// 168 = 0xa8
    unsigned long long _lastSetOptions;	// 176 = 0xb0
    AXSSPunctuationGroup *_fileSystemPunctuationGroup;	// 184 = 0xb8
    NSString *_lastSelectedLanguage;	// 192 = 0xc0
    NSMutableDictionary *_punctuationFallbacks;	// 200 = 0xc8
    TTSSpeechSynthesizer *_synthesizer;	// 208 = 0xd0
    NSDictionary *_emoticonReplacements;	// 216 = 0xd8
    id <BSInvalidatable> _disableIdleTimerAssertion;	// 224 = 0xe0
    NSNumber *_activityBasedAudioDucking;	// 232 = 0xe8
    TTSSpeechSynthesizer *_synthesizerForTelephonyMixin;	// 240 = 0xf0
}

+ (void)_setOverrideLocale:(id)arg1;	// IMP=0x0020000000038abb
- (void).cxx_destruct;	// IMP=0x002000000004946d
@property(retain, nonatomic) TTSSpeechSynthesizer *synthesizerForTelephonyMixin; // @synthesize synthesizerForTelephonyMixin=_synthesizerForTelephonyMixin;
@property(retain, nonatomic) NSNumber *activityBasedAudioDucking; // @synthesize activityBasedAudioDucking=_activityBasedAudioDucking;
@property(retain, nonatomic) id <BSInvalidatable> disableIdleTimerAssertion; // @synthesize disableIdleTimerAssertion=_disableIdleTimerAssertion;
@property(retain, nonatomic) NSDictionary *emoticonReplacements; // @synthesize emoticonReplacements=_emoticonReplacements;
@property(readonly, nonatomic) _Bool isPaused; // @synthesize isPaused=_isPaused;
@property(readonly, nonatomic) _Bool isSpeaking; // @synthesize isSpeaking=_isSpeaking;
@property(readonly, nonatomic) TTSSpeechSynthesizer *synthesizer; // @synthesize synthesizer=_synthesizer;
- (void)setShouldOutputToHearingAid:(_Bool)arg1;	// IMP=0x0010000000049386
- (_Bool)replacesCharacterAsPunctuation:(unsigned short)arg1;	// IMP=0x0010000000049321
- (void)_didFinishSpeaking:(id)arg1;	// IMP=0x0010000000049025
- (void)speechSynthesizer:(id)arg1 didFinishSpeakingRequest:(id)arg2 successfully:(_Bool)arg3 withError:(id)arg4;	// IMP=0x0010000000048db8
- (void)speechSynthesizer:(id)arg1 willSpeakRangeOfSpeechString:(struct _NSRange)arg2 forRequest:(id)arg3;	// IMP=0x00100000000488f4
- (void)speechSynthesizer:(id)arg1 didStartSpeakingRequest:(id)arg2;	// IMP=0x00100000000488b0
- (void)_didStartSpeakingAction:(id)arg1;	// IMP=0x00100000000485cb
- (void)_uncapVolume:(float)arg1;	// IMP=0x0010000000048591
- (void)_capVolumeForLanguage:(id)arg1 volume:(float)arg2;	// IMP=0x0010000000048516
- (id)_processCaptionTextForMarkup:(id)arg1 regex:(id)arg2 range:(struct _NSRange *)arg3;	// IMP=0x001000000004827f
- (id)_spokenTextForRequest:(id)arg1 range:(struct _NSRange *)arg2;	// IMP=0x0010000000047d6d
- (void)_handlePerformAction:(id)arg1;	// IMP=0x0010000000046ae2
- (void)_updateDuckingBasedOnActivity:(id)arg1;	// IMP=0x0010000000046996
- (double)outputMutedActivityLastToggleTime;	// IMP=0x001000000004697a
- (id)outputMutedActivityValue:(id)arg1;	// IMP=0x0010000000046965
- (void)_updatePitch:(id)arg1;	// IMP=0x0010000000046805
- (void)_updateActionWithCanonicalMappings:(id)arg1;	// IMP=0x0010000000046778
- (id)_preferenceLanguageForLanguage:(id)arg1 selectedLanguage:(id)arg2;	// IMP=0x0010000000046627
- (void)_notifyDidFinishSpeakingWithFakeRequestForEvent:(id)arg1;	// IMP=0x0010000000046578
- (id)stringReplacingBrailleDotRanges:(id)arg1;	// IMP=0x001000000004621f
- (_Bool)stringIsInSupportedCharacters:(id)arg1;	// IMP=0x001000000004618b
- (_Bool)_processActionForLiteralEmojis:(id)arg1;	// IMP=0x0010000000045f78
- (void)preprocessAction:(id)arg1;	// IMP=0x001000000004593b
- (void)_determineEmojiPreferenceForAction:(id)arg1;	// IMP=0x001000000004583f
- (void)_preprocessActionLanguageAndVoice:(id)arg1;	// IMP=0x00100000000451e2
- (void)_configureSynthesizerWithPhonemeSubstitutionsFromAction:(id)arg1;	// IMP=0x0010000000044c54
- (void)_handleAlternatePronunciation:(id)arg1 voiceIdentifier:(id)arg2;	// IMP=0x0010000000044766
- (void)_speakAsMixOfLiteralAndNormalText:(id)arg1 withLiteralRanges:(id)arg2;	// IMP=0x00100000000442bf
- (void)_speakAsNormalText:(id)arg1;	// IMP=0x00100000000441e1
- (id)_stringForNormalText:(id)arg1 action:(id)arg2 allowPausingAtBoundaries:(_Bool)arg3 ignoreLeadingCommas:(_Bool)arg4;	// IMP=0x001000000004343f
- (float)_determineSpeakingRate:(id)arg1 languageCode:(id)arg2;	// IMP=0x0010000000043294
- (float)_determineVolume:(id)arg1;	// IMP=0x00100000000430a6
- (void)_replaceUserSubstitutions:(id)arg1 action:(id)arg2;	// IMP=0x0010000000042cd1
- (_Bool)_makeSubstitution:(id)arg1 withString:(id)arg2 punctuationGroup:(id)arg3;	// IMP=0x0010000000042933
- (void)_processEmoji:(id)arg1 action:(id)arg2;	// IMP=0x001000000004270a
- (void)_replaceEmoticonsWithText:(id)arg1;	// IMP=0x00100000000423da
- (void)_removeRunsOfNewLines:(id)arg1;	// IMP=0x001000000004222f
- (void)_replacePunctuation:(id)arg1 withAction:(id)arg2 languageCode:(id)arg3;	// IMP=0x0010000000041d50
- (id)_urlRangesInString:(id)arg1 languageCode:(id)arg2;	// IMP=0x00100000000418ae
- (id)_determinePunctuationGroupForAction:(id)arg1 isDefault:(_Bool *)arg2;	// IMP=0x0010000000041638
- (id)_determineSpeechSourceForAction:(id)arg1;	// IMP=0x001000000004158f
- (id)_determineVoiceIdentifier:(id)arg1 languageCode:(id)arg2;	// IMP=0x0010000000041408
- (id)replacePunctuation:(id)arg1 punctuationGroup:(id)arg2 replaceCommas:(_Bool)arg3 languageCode:(id)arg4;	// IMP=0x00100000000413db
- (id)_parseNumberInString:(id)arg1 beforeCharacterAtIndex:(long long)arg2 numberRange:(struct _NSRange *)arg3;	// IMP=0x001000000004114c
- (_Bool)_replaceRepeatedPuntuationAndEmoji:(id)arg1 newString:(id)arg2 charReplacementString:(id)arg3 charSequence:(id)arg4 charIndex:(long long *)arg5 speakPunctuationCounts:(_Bool)arg6 languageCode:(id)arg7;	// IMP=0x0010000000040d5f
- (void)_replaceRepeatedEmoji:(id)arg1;	// IMP=0x001000000004081c
- (id)_replacePunctuation:(id)arg1 punctuationGroup:(id)arg2 hasMathContext:(_Bool)arg3 hasPhoneContext:(_Bool)arg4 isText:(_Bool)arg5 replaceCommas:(_Bool)arg6 languageCode:(id)arg7 speakPunctuationCounts:(_Bool)arg8;	// IMP=0x001000000003efce
- (id)baseTableForPunctuationGroup:(id)arg1;	// IMP=0x001000000003eeb5
- (id)punctuationReplacement:(id)arg1 withGroup:(id)arg2 baseTable:(id)arg3 languageCode:(id)arg4 selectedLanguage:(id)arg5 spokenLanguage:(id)arg6;	// IMP=0x001000000003e982
- (id)fileSystemPunctuationGroup;	// IMP=0x001000000003e7ee
- (void)_applyTextualWorkarounds:(id)arg1;	// IMP=0x001000000003e7e8
- (void)_speakAsPhoneticText:(id)arg1;	// IMP=0x001000000003e786
- (void)_speakAsLiteralText:(id)arg1;	// IMP=0x001000000003e67a
- (id)_stringForLiteralText:(id)arg1 action:(id)arg2 allowChangingLanguageForPunctuation:(_Bool)arg3;	// IMP=0x001000000003e0bc
- (id)_literalStringMarkupForString:(id)arg1 languageCode:(id)arg2 action:(id)arg3;	// IMP=0x001000000003dfa1
- (void)_appendLiteralCharacterString:(id)arg1 toString:(id)arg2 hasPhoneContext:(_Bool)arg3 hasMathContext:(_Bool)arg4 action:(id)arg5 punctuationTableLanguageUsed:(_Bool *)arg6;	// IMP=0x001000000003d312
- (void)_formatTimeDuration:(id)arg1 didMatch:(_Bool *)arg2 voiceIdentifier:(id)arg3;	// IMP=0x001000000003c7b7
- (void)_formatExplicitTimeDuration:(id)arg1 isMMSS:(_Bool)arg2 languageCode:(id)arg3;	// IMP=0x001000000003c3b0
- (void)_formatIPAddress:(id)arg1 voiceIdentifier:(id)arg2;	// IMP=0x001000000003bd28
- (void)_formatATVStyleMediaDurations:(id)arg1;	// IMP=0x001000000003b9ee
- (void)_formatUSHeight:(id)arg1 voiceIdentifier:(id)arg2;	// IMP=0x001000000003b510
- (void)_formatNumbers:(id)arg1 action:(id)arg2;	// IMP=0x001000000003b108
- (void)_formatEthernetMacAddress:(id)arg1 voiceIdentifier:(id)arg2;	// IMP=0x001000000003ad6b
- (void)_applyTransliteration:(id)arg1 languageCode:(id)arg2;	// IMP=0x001000000003ac39
- (void)_formatJapaneseYen:(id)arg1;	// IMP=0x001000000003a9d4
- (void)_formatDetectedDates:(id)arg1 voiceIdentifier:(id)arg2 languageCode:(id)arg3;	// IMP=0x001000000003a26e
- (_Bool)_formatDetectedFinnishDates:(id)arg1;	// IMP=0x0010000000039c78
- (void)_formatTelephoneNumber:(id)arg1 languageCode:(id)arg2 voiceIdentifier:(id)arg3;	// IMP=0x0010000000039ae3
- (void)_applyTelephoneFormatting:(id)arg1 withRanges:(id)arg2 languageCode:(id)arg3 voiceIdentifier:(id)arg4;	// IMP=0x00100000000392cc
- (void)_applyCamelCaseSeparation:(id)arg1;	// IMP=0x0010000000038ba1
- (_Bool)_currentLocaleUsesSpaceAsSeparator;	// IMP=0x0010000000038acf
- (void)_insertLongerPausesForSymbol:(id)arg1 withText:(id)arg2 allowPausingAtBoundaries:(_Bool)arg3 onlyApplyWhenFollowedBySpace:(_Bool)arg4 languageCode:(id)arg5 voiceIdentifier:(id)arg6;	// IMP=0x0010000000037879
- (id)pauseStringForType:(int)arg1 voiceIdentifier:(id)arg2;	// IMP=0x001000000003767d
- (long long)_ttsVoiceTypeForPauseCalculationWithVoiceIdentifier:(id)arg1;	// IMP=0x00100000000375f9
- (float)_pauseDelayForType:(int)arg1 speechRate:(float)arg2 voiceType:(long long)arg3;	// IMP=0x00100000000375d0
- (id)expectedVoiceIdentifier:(id)arg1;	// IMP=0x0010000000036d42
- (_Bool)_shouldForceSiriVoice;	// IMP=0x0000000000036d3a
- (_Bool)_stringMatchesSpecialCases:(id)arg1 forSymbol:(id)arg2 ranges:(id *)arg3 langaugeCode:(id)arg4;	// IMP=0x001000000003682f
- (id)_localeSpecificURLRegexForLanguageCode:(id)arg1;	// IMP=0x00100000000365f1
- (id)_localeSpecificURLsForLanguageCode:(id)arg1;	// IMP=0x00100000000365c2
- (id)_secureTextDescription:(id)arg1;	// IMP=0x0010000000036538
- (void)_replaceEmbeddedTTSCommands:(id)arg1;	// IMP=0x0010000000036486
- (void)_speakAllDigits:(id)arg1;	// IMP=0x001000000003632e
- (void)handleEvent:(id)arg1;	// IMP=0x001000000003629f
- (void)dealloc;	// IMP=0x001000000003621c
- (void)_handleStopSpeaking:(id)arg1;	// IMP=0x0010000000035ec0
- (void)_handleContinueSpeaking:(id)arg1;	// IMP=0x0010000000035dea
- (void)_handlePauseSpeaking:(id)arg1;	// IMP=0x0010000000035ca7
- (void)_stopSpeakingAfterLongPause:(id)arg1;	// IMP=0x0010000000035be4
- (void)stopSpeakingAtBoundary:(int)arg1;	// IMP=0x0010000000035bcd
- (void)stopSpeakingAtBoundary:(int)arg1 allRequests:(_Bool)arg2 sessionDeactivationDelay:(id)arg3;	// IMP=0x00100000000359d9
- (void)continueSpeaking;	// IMP=0x001000000003591b
- (void)pauseSpeakingAtBoundary:(int)arg1;	// IMP=0x0010000000035822
- (void)setVoice:(id)arg1;	// IMP=0x00100000000357e0
- (void)_setVoice:(id)arg1;	// IMP=0x00100000000356df
- (void)setRate:(float)arg1;	// IMP=0x001000000003565d
- (float)rate;	// IMP=0x0010000000035640
- (void)_setRate:(id)arg1;	// IMP=0x001000000003551b
- (float)volume;	// IMP=0x0010000000035509
- (void)setVolume:(float)arg1;	// IMP=0x0010000000035487
- (void)_setVolume:(id)arg1;	// IMP=0x0010000000035430
- (void)_loadPunctuationTable:(id)arg1 withLevel:(long long)arg2 language:(id)arg3;	// IMP=0x00100000000353b6
- (void)_saveSpeechStats;	// IMP=0x0010000000035334
- (id)currentAllPunctuationTable;	// IMP=0x00100000000352da
- (id)currentNonePunctuationTable;	// IMP=0x0010000000035280
- (id)currentSomePunctuationTable;	// IMP=0x0010000000035226
- (void)_resetLanguageDataOnSpeechThread:(id)arg1 language:(id)arg2;	// IMP=0x0010000000034f39
- (void)_selectedLanguageChanged:(id)arg1;	// IMP=0x0010000000034b07
- (void)_initializePunctuationData;	// IMP=0x0010000000034994
- (id)init;	// IMP=0x00100000000346b5
- (void)_loadNoneTableOverrides;	// IMP=0x001000000003460f
- (void)_loadSpecialPunctuation;	// IMP=0x00100000000344cc
- (void)_updateChannelLayout;	// IMP=0x0010000000034051
- (void)_updateAudioSessionProperties;	// IMP=0x0010000000033122
- (void)updateAudioSessionProperties:(id)arg1;	// IMP=0x00100000000330ef
- (void)audioSessionWasInterrupted:(id)arg1;	// IMP=0x00100000000330b9
- (void)_audioSessionWasInterrupted:(id)arg1;	// IMP=0x0010000000032f29
- (void)updateAccurateWordCallbacks;	// IMP=0x0010000000032e6d
- (_Bool)_usingAllChannels;	// IMP=0x0010000000032b0e
- (void)_callStatusChanged;	// IMP=0x00100000000329cb
- (void)callStatusChanged;	// IMP=0x0010000000032998
- (void)_initializeSynthesizer;	// IMP=0x001000000003220f
- (void)_createTelephonySynthesizer;	// IMP=0x00100000000320da
- (void)_tearDownTelephonySynthesizer;	// IMP=0x001000000003201d
- (void)_updateUserSubstitutions:(id)arg1;	// IMP=0x0010000000031f22
- (id)_internalVoiceOverSubstitutions;	// IMP=0x0010000000031e13
- (void)_initializeThread;	// IMP=0x0010000000031d8f
- (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 waitTime:(double)arg3 cancelMask:(unsigned int)arg4 count:(unsigned int)arg5 objects:(id)arg6;	// IMP=0x0010000000031d4f
- (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 count:(unsigned int)arg3 objects:(id)arg4;	// IMP=0x0010000000031d29

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

