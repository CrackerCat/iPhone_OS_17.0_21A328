//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@protocol NSXPCProxyCreating;

@interface CuttlefishXPCWrapper : NSObject
{
    id <NSXPCProxyCreating> _cuttlefishXPCConnection;	// 8 = 0x8
}

+ (_Bool)retryable:(id)arg1;	// IMP=0x0020000000028048
- (void).cxx_destruct;	// IMP=0x0020000000022ab5
@property(readonly) id <NSXPCProxyCreating> cuttlefishXPCConnection; // @synthesize cuttlefishXPCConnection=_cuttlefishXPCConnection;
- (void)fetchTrustedPeerCountWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000228d2
- (void)preflightRecoverOctagonUsingRecoveryKey:(id)arg1 recoveryKey:(id)arg2 salt:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00100000000226cb
- (void)testSemaphoreWithSpecificUser:(id)arg1 arg:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000022608
- (void)performATOPRVActionsWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000022439
- (void)removeRecoveryKey:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002226a
- (void)isRecoveryKeySet:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002209b
- (void)recoverTLKSharesForInheritorWithSpecificUser:(id)arg1 crk:(id)arg2 tlkShares:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000021e94
- (void)prepareInheritancePeerWithSpecificUser:(id)arg1 epoch:(unsigned long long)arg2 machineID:(id)arg3 bottleSalt:(id)arg4 bottleID:(id)arg5 modelID:(id)arg6 deviceName:(id)arg7 serialNumber:(id)arg8 osVersion:(id)arg9 policyVersion:(id)arg10 policySecrets:(id)arg11 syncUserControllableViews:(int)arg12 secureElementIdentity:(id)arg13 signingPrivKeyPersistentRef:(id)arg14 encPrivKeyPersistentRef:(id)arg15 crk:(id)arg16 reply:(CDUnknownBlockType)arg17;	// IMP=0x0010000000021b04
- (void)fetchAccountSettingsWithSpecificUser:(id)arg1 forceFetch:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000021927
- (void)fetchRecoverableTLKSharesWithSpecificUser:(id)arg1 peerID:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000002173e
- (void)resetAccountCDPContentsWithSpecificUser:(id)arg1 idmsTargetContext:(id)arg2 idmsCuttlefishPassword:(id)arg3 notifyIdMS:(_Bool)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000002152b
- (void)removeEscrowCacheWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002135c
- (void)fetchViableEscrowRecordsWithSpecificUser:(id)arg1 source:(long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000021182
- (void)getSupportAppInfoWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000020fb3
- (void)requestHealthCheckWithSpecificUser:(id)arg1 requiresEscrowCheck:(_Bool)arg2 repair:(_Bool)arg3 knownFederations:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0010000000020db1
- (void)pushHealthInquiryWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000020be2
- (void)reportHealthWithSpecificUser:(id)arg1 stateMachineState:(id)arg2 trustState:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00100000000209db
- (void)findCustodianRecoveryKeyWithSpecificUser:(id)arg1 uuid:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000207f2
- (void)removeCustodianRecoveryKeyWithSpecificUser:(id)arg1 uuid:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000020609
- (void)createCustodianRecoveryKeyWithSpecificUser:(id)arg1 recoveryKey:(id)arg2 salt:(id)arg3 ckksKeys:(id)arg4 uuid:(id)arg5 kind:(int)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x00100000000203bd
- (void)setRecoveryKeyWithSpecificUser:(id)arg1 recoveryKey:(id)arg2 salt:(id)arg3 ckksKeys:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000002019a
- (void)fetchTrustStateWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001ffcb
- (void)fetchCurrentPolicyWithSpecificUser:(id)arg1 modelIDOverride:(id)arg2 isInheritedAccount:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001fdd1
- (void)fetchPolicyDocumentsWithSpecificUser:(id)arg1 versions:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001fbe8
- (void)fetchEscrowContentsWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001fa19
- (void)fetchViableBottlesWithSpecificUser:(id)arg1 source:(long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001f83f
- (void)updateTLKsWithSpecificUser:(id)arg1 ckksKeys:(id)arg2 tlkShares:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001f638
- (void)setPreapprovedKeysWithSpecificUser:(id)arg1 preapprovedKeys:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001f44f
- (void)updateWithSpecificUser:(id)arg1 forceRefetch:(_Bool)arg2 deviceName:(id)arg3 serialNumber:(id)arg4 osVersion:(id)arg5 policyVersion:(id)arg6 policySecrets:(id)arg7 syncUserControllableViews:(id)arg8 secureElementIdentity:(id)arg9 walrusSetting:(id)arg10 webAccess:(id)arg11 reply:(CDUnknownBlockType)arg12;	// IMP=0x001000000001f15c
- (void)attemptPreapprovedJoinWithSpecificUser:(id)arg1 ckksKeys:(id)arg2 tlkShares:(id)arg3 preapprovedKeys:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001ef39
- (void)preflightPreapprovedJoinWithSpecificUser:(id)arg1 preapprovedKeys:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001ed50
- (void)joinWithSpecificUser:(id)arg1 voucherData:(id)arg2 voucherSig:(id)arg3 ckksKeys:(id)arg4 tlkShares:(id)arg5 preapprovedKeys:(id)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x001000000001eaf1
- (void)vouchWithCustodianRecoveryKeyWithSpecificUser:(id)arg1 crk:(id)arg2 tlkShares:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001e8ea
- (void)vouchWithRecoveryKeyWithSpecificUser:(id)arg1 recoveryKey:(id)arg2 salt:(id)arg3 tlkShares:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001e6c7
- (void)preflightVouchWithCustodianRecoveryKeyWithSpecificUser:(id)arg1 crk:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001e4de
- (void)preflightVouchWithRecoveryKeyWithSpecificUser:(id)arg1 recoveryKey:(id)arg2 salt:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000001e2d7
- (void)vouchWithBottleWithSpecificUser:(id)arg1 bottleID:(id)arg2 entropy:(id)arg3 bottleSalt:(id)arg4 tlkShares:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x001000000001e092
- (void)preflightVouchWithBottleWithSpecificUser:(id)arg1 bottleID:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001dea9
- (void)vouchWithSpecificUser:(id)arg1 peerID:(id)arg2 permanentInfo:(id)arg3 permanentInfoSig:(id)arg4 stableInfo:(id)arg5 stableInfoSig:(id)arg6 ckksKeys:(id)arg7 reply:(CDUnknownBlockType)arg8;	// IMP=0x001000000001dc23
- (void)establishWithSpecificUser:(id)arg1 ckksKeys:(id)arg2 tlkShares:(id)arg3 preapprovedKeys:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001da00
- (void)prepareWithSpecificUser:(id)arg1 epoch:(unsigned long long)arg2 machineID:(id)arg3 bottleSalt:(id)arg4 bottleID:(id)arg5 modelID:(id)arg6 deviceName:(id)arg7 serialNumber:(id)arg8 osVersion:(id)arg9 policyVersion:(id)arg10 policySecrets:(id)arg11 syncUserControllableViews:(int)arg12 secureElementIdentity:(id)arg13 setting:(id)arg14 signingPrivKeyPersistentRef:(id)arg15 encPrivKeyPersistentRef:(id)arg16 reply:(CDUnknownBlockType)arg17;	// IMP=0x001000000001d670
- (void)fetchEgoEpochWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001d4a1
- (void)fetchAllowedMachineIDsWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001d2d2
- (void)removeAllowedMachineIDsWithSpecificUser:(id)arg1 machineIDs:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001d0e9
- (void)addAllowedMachineIDsWithSpecificUser:(id)arg1 machineIDs:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001cf00
- (void)setAllowedMachineIDsWithSpecificUser:(id)arg1 allowedMachineIDs:(id)arg2 honorIDMSListChanges:(_Bool)arg3 version:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000001ccee
- (void)localResetWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001cb1f
- (void)resetWithSpecificUser:(id)arg1 resetReason:(long long)arg2 idmsTargetContext:(id)arg3 idmsCuttlefishPassword:(id)arg4 notifyIdMS:(_Bool)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x001000000001c906
- (void)trustStatusWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001c737
- (void)dropPeerIDsWithSpecificUser:(id)arg1 peerIDs:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001c674
- (void)distrustPeerIDsWithSpecificUser:(id)arg1 peerIDs:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000001c48b
- (void)departByDistrustingSelfWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001c2bc
- (void)dumpWithSpecificUser:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001c0ed
- (void)pingWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000001bf5c
- (id)initWithCuttlefishXPCConnection:(id)arg1;	// IMP=0x001000000001bef1

@end

