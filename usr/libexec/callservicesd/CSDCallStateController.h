//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSDAudioArbitrationController, CSDAudioController, CSDCallController, CSDCallFilterController, CSDCallHistoryManager, CSDCallHistoryManagerXPCServer, CSDCallProviderManager, CSDCallProviderManagerXPCServer, CSDCarPlayManager, CSDClientManager, CSDProviderCallDataSource, CSDRecentsController, CSDRelayCallDataSource, CSDRelayCallDelegate, CSDRouteController, CSDVoIPApplicationController, IMNicknameProvider, NSArray, NSMutableDictionary, NSNumber, NSString, NSXPCListenerEndpoint, TUCallCenter, TUHardwareControlsBroadcaster;
@protocol CSDCallContainer, CSDConversationServerBag, CSDProcessObserverProtocol, CSDRelayMessagingController, OS_dispatch_queue, TUFeatureFlags;

@interface CSDCallStateController : NSObject
{
    CSDCallHistoryManager *_callHistoryManager;	// 8 = 0x8
    CSDCallProviderManager *_callProviderManager;	// 16 = 0x10
    CSDCallController *_callController;	// 24 = 0x18
    CSDVoIPApplicationController *_voipApplicationController;	// 32 = 0x20
    id <CSDRelayMessagingController> _relayMessagingController;	// 40 = 0x28
    CSDRecentsController *_recentsController;	// 48 = 0x30
    CSDAudioController *_audioController;	// 56 = 0x38
    CSDAudioArbitrationController *_audioArbitrationController;	// 64 = 0x40
    CSDRouteController *_localRouteController;	// 72 = 0x48
    CSDRouteController *_pairedHostDeviceRouteController;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_queue;	// 88 = 0x58
    id <CSDConversationServerBag> _serverBag;	// 96 = 0x60
    NSString *_currentlyTrackedA2DPRouteIdentifier;	// 104 = 0x68
    CSDCallHistoryManagerXPCServer *_callHistoryManagerXPCServer;	// 112 = 0x70
    CSDCallProviderManagerXPCServer *_callProviderManagerXPCServer;	// 120 = 0x78
    CSDRelayCallDataSource *_relayCallDataSource;	// 128 = 0x80
    CSDRelayCallDelegate *_relayCallDelegate;	// 136 = 0x88
    CSDClientManager *_clientManager;	// 144 = 0x90
    TUHardwareControlsBroadcaster *_hardwareControlsBroadcaster;	// 152 = 0x98
    id <CSDProcessObserverProtocol> _processObserver;	// 160 = 0xa0
    IMNicknameProvider *_nicknameProvider;	// 168 = 0xa8
    NSArray *_currentUpdatesForScreening;	// 176 = 0xb0
    NSMutableDictionary *_pendingCallInfoDict;	// 184 = 0xb8
    CSDCarPlayManager *_carPlayManager;	// 192 = 0xc0
    NSXPCListenerEndpoint *_uiXPCEndpoint;	// 200 = 0xc8
    id <TUFeatureFlags> _featureFlags;	// 208 = 0xd0
    CDUnknownBlockType _clientInvalidationHandler;	// 216 = 0xd8
    CSDProviderCallDataSource *_providerCallDataSource;	// 224 = 0xe0
    NSNumber *_shouldHandleSecureMicrophoneEvents;	// 232 = 0xe8
}

+ (void)sanitizeJoinConversationRequest:(id)arg1;	// IMP=0x0020000000174397
- (void).cxx_destruct;	// IMP=0x0020000000184a4d
@property(retain, nonatomic) NSNumber *shouldHandleSecureMicrophoneEvents; // @synthesize shouldHandleSecureMicrophoneEvents=_shouldHandleSecureMicrophoneEvents;
@property(readonly, nonatomic) CSDProviderCallDataSource *providerCallDataSource; // @synthesize providerCallDataSource=_providerCallDataSource;
@property(copy, nonatomic) CDUnknownBlockType clientInvalidationHandler; // @synthesize clientInvalidationHandler=_clientInvalidationHandler;
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(retain, nonatomic) NSXPCListenerEndpoint *uiXPCEndpoint; // @synthesize uiXPCEndpoint=_uiXPCEndpoint;
@property(readonly, nonatomic) CSDCarPlayManager *carPlayManager; // @synthesize carPlayManager=_carPlayManager;
@property(retain, nonatomic) NSMutableDictionary *pendingCallInfoDict; // @synthesize pendingCallInfoDict=_pendingCallInfoDict;
@property(retain, nonatomic) NSArray *currentUpdatesForScreening; // @synthesize currentUpdatesForScreening=_currentUpdatesForScreening;
@property(retain, nonatomic) IMNicknameProvider *nicknameProvider; // @synthesize nicknameProvider=_nicknameProvider;
@property(readonly, nonatomic) id <CSDProcessObserverProtocol> processObserver; // @synthesize processObserver=_processObserver;
@property(readonly, nonatomic) TUHardwareControlsBroadcaster *hardwareControlsBroadcaster; // @synthesize hardwareControlsBroadcaster=_hardwareControlsBroadcaster;
@property(readonly, nonatomic) CSDClientManager *clientManager; // @synthesize clientManager=_clientManager;
@property(readonly, nonatomic) CSDRelayCallDelegate *relayCallDelegate; // @synthesize relayCallDelegate=_relayCallDelegate;
@property(readonly, nonatomic) CSDRelayCallDataSource *relayCallDataSource; // @synthesize relayCallDataSource=_relayCallDataSource;
@property(readonly, nonatomic) CSDCallProviderManagerXPCServer *callProviderManagerXPCServer; // @synthesize callProviderManagerXPCServer=_callProviderManagerXPCServer;
@property(readonly, nonatomic) CSDCallHistoryManagerXPCServer *callHistoryManagerXPCServer; // @synthesize callHistoryManagerXPCServer=_callHistoryManagerXPCServer;
@property(copy, nonatomic) NSString *currentlyTrackedA2DPRouteIdentifier; // @synthesize currentlyTrackedA2DPRouteIdentifier=_currentlyTrackedA2DPRouteIdentifier;
@property(readonly, nonatomic) id <CSDConversationServerBag> serverBag; // @synthesize serverBag=_serverBag;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) CSDRouteController *pairedHostDeviceRouteController; // @synthesize pairedHostDeviceRouteController=_pairedHostDeviceRouteController;
@property(readonly, nonatomic) CSDRouteController *localRouteController; // @synthesize localRouteController=_localRouteController;
@property(retain, nonatomic) CSDAudioArbitrationController *audioArbitrationController; // @synthesize audioArbitrationController=_audioArbitrationController;
@property(retain, nonatomic) CSDAudioController *audioController; // @synthesize audioController=_audioController;
@property(readonly, nonatomic) CSDRecentsController *recentsController; // @synthesize recentsController=_recentsController;
@property(retain, nonatomic) id <CSDRelayMessagingController> relayMessagingController; // @synthesize relayMessagingController=_relayMessagingController;
@property(retain, nonatomic) CSDVoIPApplicationController *voipApplicationController; // @synthesize voipApplicationController=_voipApplicationController;
@property(readonly, nonatomic) CSDCallController *callController; // @synthesize callController=_callController;
@property(readonly, nonatomic) CSDCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDCallHistoryManager *callHistoryManager; // @synthesize callHistoryManager=_callHistoryManager;
- (_Bool)isInCallUIActive;	// IMP=0x00100000001846d4
- (void)updateAudioArbitration;	// IMP=0x00100000001846ce
- (_Bool)_hasAlreadyDeniedSendingNameAndPhotoToHandles:(id)arg1;	// IMP=0x0010000000184334
- (_Bool)_sharingAudienceAllowsAutoSendNameAndPhoto;	// IMP=0x001000000018432c
- (_Bool)_nameAndPhotoSharingEnabled;	// IMP=0x00100000001842e1
- (id)_contactForHandle:(id)arg1 contactStore:(id)arg2;	// IMP=0x00100000001842cc
- (_Bool)shouldAutomaticallySendNameAndPhotoToHandles:(id)arg1 isDefaultProvider:(_Bool)arg2;	// IMP=0x0010000000183bba
- (_Bool)shouldAutomaticallySendNameAndPhotoToHandles:(id)arg1 conversationProvider:(id)arg2;	// IMP=0x0010000000183b02
- (_Bool)shouldAutomaticallySendNameAndPhotoToHandles:(id)arg1 callProvider:(id)arg2;	// IMP=0x0010000000183a4a
- (void)sendNameAndPhotoToHandles:(id)arg1;	// IMP=0x0010000000183651
- (void)sendNameAndPhotoToHandle:(id)arg1;	// IMP=0x001000000018355c
- (void)didChangeFaceTimeCallingAvailability;	// IMP=0x0010000000183401
- (void)didChangeRelayCallingCapabilities;	// IMP=0x001000000018338b
- (void)providersChangedForProviderManager:(id)arg1;	// IMP=0x0010000000183322
- (void)callHistoryManager:(id)arg1 recentCallRequestedFor:(id)arg2 withStartDate:(id)arg3;	// IMP=0x0010000000183297
- (oneway void)defaultGreeting:(CDUnknownBlockType)arg1;	// IMP=0x0010000000183215
- (oneway void)deleteCustomGreetingForAccountUUID:(id)arg1;	// IMP=0x00100000001831b9
- (oneway void)saveCustomSandboxedURLGreeting:(id)arg1 forAccountUUID:(id)arg2;	// IMP=0x001000000018315d
- (oneway void)reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x0010000000183023
- (oneway void)requestInitialState:(CDUnknownBlockType)arg1;	// IMP=0x0010000000182efd
- (_Bool)isTrackingVoIPCallForBundleIdentifier:(id)arg1;	// IMP=0x0010000000182bdc
- (id)currentCallsForClient:(id)arg1;	// IMP=0x0010000000182b18
- (id)callForClient:(id)arg1 usingCall:(id)arg2;	// IMP=0x0010000000182a83
- (id)currentProxyCalls;	// IMP=0x0010000000182867
- (void)propertiesChangedForCall:(id)arg1;	// IMP=0x00100000001827fe
- (void)messagingConnectionCouldNotEstablishLinkForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x00100000001826c2
- (void)messagingConnectionFailedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x00100000001825c7
- (void)messagingConnectionEndedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x001000000018245b
- (oneway void)setClientCapabilities:(id)arg1;	// IMP=0x0010000000182356
- (oneway void)filterStatusForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000018214f
- (oneway void)isUnknownAddress:(id)arg1 normalizedAddress:(id)arg2 forBundleIdentifier:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000181f33
- (oneway void)shouldRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000181e38
- (oneway void)willRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000181c31
- (oneway void)policyForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000181b31
- (oneway void)containsRestrictedHandle:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000181946
- (oneway void)pickPairedHostDeviceRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x001000000018177a
- (oneway void)pickLocalRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x00100000001815ae
- (oneway void)pairedHostDeviceRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x0010000000181454
- (oneway void)localRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x00100000001812ca
- (oneway void)setCurrentAudioOutputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x00100000001810e9
- (oneway void)setCurrentAudioInputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x0010000000180f08
- (oneway void)joinConversationWithRequest:(id)arg1;	// IMP=0x0010000000180d6f
- (oneway void);	// IMP=0x0010000000180c78
- (oneway void)activateInCallUIWithActivityContinuationIdentifier:(id)arg1;	// IMP=0x0010000000180736
- (oneway void)shouldAllowRingingCallStatusIndicator:(_Bool)arg1;	// IMP=0x00100000001804fc
- (oneway void)shouldSuppressInCallStatusBar:(_Bool)arg1;	// IMP=0x00100000001802ba
- (oneway void)setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:(id)arg1 bluetoothAudioFormat:(long long)arg2;	// IMP=0x001000000018004e
- (oneway void)setSharingScreen:(_Bool)arg1 attributes:(id)arg2 forCallWithUniqueProxyIdentifier:(id)arg3;	// IMP=0x001000000017fe0d
- (oneway void)setScreenShareAttributesForCallWithUniqueProxyIdentifier:(id)arg1 attributes:(id)arg2;	// IMP=0x001000000017fbe2
- (oneway void)setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:(id)arg1 presentationState:(int)arg2;	// IMP=0x001000000017f9e7
- (oneway void)setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x001000000017f7ae
- (oneway void)enteredBackgroundForAllCalls;	// IMP=0x001000000017f691
- (oneway void)willEnterBackgroundForAllCalls;	// IMP=0x001000000017f568
- (oneway void)enteredForegroundForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000017f32a
- (oneway void)updateCallWithProxy:(id)arg1;	// IMP=0x001000000017f199
- (oneway void)sendHardPauseDigitsForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000017efbc
- (oneway void)pullHostedCallsFromPairedHostDevice;	// IMP=0x001000000017ee93
- (oneway void)pushHostedCallsToDestination:(id)arg1;	// IMP=0x001000000017ed02
- (oneway void)setSharingScreen:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000017ea3c
- (oneway void)setMixesVoiceWithMedia:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000017e776
- (oneway void)setIsSendingVideo:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000017e465
- (oneway void)setDownlinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000017e19f
- (oneway void)setUplinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000017ded5
- (oneway void)sendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x001000000017dd44
- (oneway void)pullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000017da29
- (oneway void)pushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x001000000017d898
- (oneway void)pullRelayingGFTCallsFromClientIfNecessary;	// IMP=0x001000000017d75f
- (oneway void)pullRelayingCallsFromClient;	// IMP=0x001000000017d62c
- (oneway void)setTTYType:(int)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000017d42d
- (oneway void)disconnectAllCalls;	// IMP=0x001000000017d304
- (oneway void)disconnectCurrentCallAndActivateHeld;	// IMP=0x001000000017d1db
- (oneway void)playDTMFToneForCallWithUniqueProxyIdentifier:(id)arg1 key:(unsigned char)arg2;	// IMP=0x001000000017cf11
- (oneway void)swapCalls;	// IMP=0x001000000017cde8
- (oneway void)ungroupCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000017cb3a
- (oneway void)groupCallWithUniqueProxyIdentifier:(id)arg1 withOtherCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x001000000017c761
- (oneway void)disconnectCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000017c48b
- (oneway void)requestVideoUpgradeForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000017be94
- (oneway void)unholdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000017bbe6
- (oneway void)holdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000017b938
- (oneway void)answerCallWithRequest:(id)arg1;	// IMP=0x001000000017b4fe
- (void)_dial:(id)arg1 displayContext:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000017b414
- (oneway void)dialWithRequest:(id)arg1 displayContext:(id)arg2;	// IMP=0x001000000017b236
- (oneway void)dialWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000017aeaa
- (void)screenUpdate:(id)arg1 withProvider:(id)arg2 callSource:(id)arg3 callUUID:(id)arg4;	// IMP=0x001000000017ad08
- (oneway void)fetchAnonymousXPCEndpoint:(CDUnknownBlockType)arg1;	// IMP=0x001000000017ac29
- (oneway void)registerAnonymousXPCEndpoint:(id)arg1;	// IMP=0x001000000017a928
- (oneway void)screenWithRequest:(id)arg1;	// IMP=0x001000000017a3c3
- (oneway void)fetchCurrentCallUpdates:(CDUnknownBlockType)arg1;	// IMP=0x001000000017a182
- (void)_launchICSForScreeningIfNeeded;	// IMP=0x0010000000179fdd
- (void)_handleMessagingConnectionEndForCalls:(id)arg1 withDisconnectedReason:(int)arg2 didStartConnecting:(_Bool)arg3;	// IMP=0x0010000000179c83
- (void)performUpdateCallWithProxy:(id)arg1;	// IMP=0x0010000000179bcf
- (void)performPullHostedCallsFromPairedHostDevice;	// IMP=0x0010000000179966
- (void)performPushHostedCallsToDestination:(id)arg1;	// IMP=0x0010000000179713
- (void)performPushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x00100000001796aa
- (void)performPullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001795a7
- (void)performSetUplinkMuted:(_Bool)arg1 forCall:(id)arg2;	// IMP=0x0010000000179339
- (void)performSetTTYType:(int)arg1 forCall:(id)arg2;	// IMP=0x0010000000179158
- (void)performPlayDTMFToneForCall:(id)arg1 key:(unsigned char)arg2;	// IMP=0x00100000001790d4
- (void)performSendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x001000000017906b
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2 onlyIfNeedsEndpointGFTRelaySupport:(_Bool)arg3;	// IMP=0x0010000000178d5d
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2;	// IMP=0x0010000000178d48
- (void)performDisconnectAllCalls;	// IMP=0x0010000000178a51
- (void)performDisconnectCurrentCallAndActivateHeld;	// IMP=0x0010000000177e91
- (void)performDisconnectCall:(id)arg1;	// IMP=0x0010000000177ad8
- (void)performAnswerCallAsAudioDowngrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000177a52
- (void)performAnswerCallAsVideoUpgrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x00100000001779cc
- (void)performHoldActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000177164
- (void)performEndHeldAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000176960
- (void)performEndActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000017619d
- (id)callWithUniqueProxyIdentifier:(id)arg1 fromCallsToAnswer:(id)arg2;	// IMP=0x0010000000175fcc
- (void)performAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000175d63
- (void)performSwapCalls;	// IMP=0x0010000000175748
- (void)performUngroupCall:(id)arg1;	// IMP=0x001000000017539a
- (void)performGroupCall:(id)arg1 withCall:(id)arg2;	// IMP=0x0010000000174fa3
- (void)performUnholdCall:(id)arg1;	// IMP=0x0010000000174db4
- (void)performHoldCall:(id)arg1;	// IMP=0x0010000000174bc5
- (id)performJoinConversation:(id)arg1;	// IMP=0x00100000001749da
- (id)performDialCall:(id)arg1 displayContext:(id)arg2;	// IMP=0x0010000000173fa5
- (void)setCallDelegatesIfNeeded:(id)arg1;	// IMP=0x0010000000173d3e
- (id)outgoingCallFromJoinRequest:(id)arg1;	// IMP=0x0010000000173c74
- (id)outgoingCallFromDialRequest:(id)arg1;	// IMP=0x0010000000173bc1
- (void)_updateBluetoothAudioFormatIfNecessaryDueToMVMChange:(_Bool)arg1;	// IMP=0x00100000001734af
- (void)_handleDisconnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000173370
- (void)_updateRoutesForDisconnectedCall;	// IMP=0x00100000001732ef
- (void)_handleDisconnectedCallStatusChangeForVoicemailCall;	// IMP=0x0010000000173229
- (void)_handleHeldCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x00100000001731b5
- (void)_handleCallRemoteParticipantHandlesChangedNotification:(id)arg1;	// IMP=0x0010000000173076
- (void)_handleActiveCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000172f91
- (void)_handleConnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000172e7a
- (void)_handleConnectingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000172ca7
- (void)_handleSendingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000172c0a
- (void)_handleGroupUUIDChangeForHostedCall:(id)arg1;	// IMP=0x0010000000172b4b
- (void)_handleRingingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000172704
- (_Bool)_nonRingingCallExistsOnThisDevice;	// IMP=0x001000000017248a
- (void)_handlePreferredRouteChangedNotification:(id)arg1;	// IMP=0x0010000000171fb0
- (void)_handleCSDRelayPairedDeviceConnectedNotification:(id)arg1;	// IMP=0x0010000000171d4b
- (void)_handleCSDRelayIDSActiveAccountsChanged:(id)arg1;	// IMP=0x0010000000171bf0
- (void)_handleInvitationSentNotification:(id)arg1;	// IMP=0x0010000000171aae
- (void)_handleFaceTimeAvailabilityChangedNotification:(id)arg1;	// IMP=0x0010000000171966
- (void)_handleCallIsUsingBasebandChangedNotification:(id)arg1;	// IMP=0x00100000001717d3
- (void)_handleHardPauseStateChangedNotification:(id)arg1;	// IMP=0x0010000000171674
- (void)_handleResetCallStateNotification:(id)arg1;	// IMP=0x001000000017156a
- (void)_handleCallModelChangedNotification:(id)arg1;	// IMP=0x0010000000171428
- (void)_handleCallShouldSuppressRingtoneChangedNotification:(id)arg1;	// IMP=0x0010000000171254
- (void)_handleCallWantsHoldMusicChangedNotification:(id)arg1;	// IMP=0x00100000001710fe
- (void)_handleNeedsManualInCallSoundsChangedNotification:(id)arg1;	// IMP=0x0010000000170fbc
- (void)_handleCallConnectedNotification:(id)arg1;	// IMP=0x0010000000170e98
- (void)_handleCallStartedConnectingNotification:(id)arg1;	// IMP=0x0010000000170d50
- (void)_handleCallStartedOutgoingNotification:(id)arg1;	// IMP=0x0010000000170bec
- (void)_handleCallStatusChangedNotification:(id)arg1;	// IMP=0x001000000017085b
- (void)_handleGroupUUIDChangedNotification:(id)arg1;	// IMP=0x0010000000170737
- (void)_handleSupportsEmergencyFallbackChangedNotification:(id)arg1;	// IMP=0x00100000001705c2
- (void)_handleFailureExpectedChangedNotification:(id)arg1;	// IMP=0x001000000017044d
- (void)_handleMixesVoiceWithMediaChangedNotification:(id)arg1;	// IMP=0x001000000017032d
- (void)_handleTUCallTTYTypeChangedNotification:(id)arg1;	// IMP=0x00100000001701a9
- (void)_handleTUCallSupportsTTYWithVoiceChangedNotification:(id)arg1;	// IMP=0x0010000000170034
- (void)_handleUpdateRemoteUplinkMutedChangedNotification:(id)arg1;	// IMP=0x001000000016fef2
- (void)_handleCallDisplayContextChangedNotification:(id)arg1;	// IMP=0x001000000016fdb0
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2 userInfo:(id)arg3;	// IMP=0x001000000016fb28
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2;	// IMP=0x001000000016fb13
- (void)sendClientsNotificationName:(id)arg1;	// IMP=0x001000000016fafc
- (void)resetClientCallProvisionalStates;	// IMP=0x001000000016f9ff
- (void)updateClientsWithMeterLevel:(float)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x001000000016f757
- (void)updateClientsWithFrequency:(id)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x001000000016f443
- (_Bool)isCallEligible:(id)arg1 forClient:(id)arg2;	// IMP=0x001000000016f1b0
- (_Bool)shouldSendCall:(id)arg1 forClient:(id)arg2;	// IMP=0x001000000016eea4
- (_Bool)shouldFilterClient:(id)arg1;	// IMP=0x001000000016ee42
- (id)eligibleCallsByFilteringCalls:(id)arg1 forClient:(id)arg2;	// IMP=0x001000000016ec5b
- (void)updateClientsWithCall:(id)arg1;	// IMP=0x001000000016e396
- (void)_endProxyCallsForConnectingVideoCall;	// IMP=0x001000000016e144
- (_Bool)_shouldLaunchInCallApplicationForProviderOfCall:(id)arg1;	// IMP=0x001000000016e048
- (void)_launchInCallApplicationForCall:(id)arg1 withURL:(id)arg2;	// IMP=0x001000000016dccc
- (void)_launchInCallApplicationForAnsweringCallIfNecessary:(id)arg1;	// IMP=0x001000000016dcc6
- (void)_launchInCallApplicationForExistingCall;	// IMP=0x001000000016daef
- (void)_launchInCallApplicationForOutgoingCallIfNecessary:(id)arg1;	// IMP=0x001000000016d8cc
- (void)_launchInCallApplicationForOutgoingConversationIfNecessary:(id)arg1;	// IMP=0x001000000016d8c6
- (void)_launchInCallApplicationForIncomingCallIfNecessary:(id)arg1;	// IMP=0x001000000016d76d
- (void)_answerIncomingCallAsConversation:(id)arg1;	// IMP=0x001000000016d599
- (void)_answerIncomingCall:(id)arg1 withBehavior:(long long)arg2;	// IMP=0x001000000016d442
- (void)_handleCarPlayControlEventNotification:(id)arg1;	// IMP=0x001000000016cbc5
- (void)_handleAudioSessionInterruptionNotification:(id)arg1;	// IMP=0x001000000016c93a
- (_Bool)shouldHandleCarPlayControlEvents;	// IMP=0x001000000016c888
- (void)_requestCallStateFromHost;	// IMP=0x001000000016c882
- (void)_handleRelayCallingChanged;	// IMP=0x001000000016c2fd
@property(readonly, nonatomic) _Bool shouldRelayToOtherDevices;
@property(readonly, nonatomic) CSDCallFilterController *callFilterController;
@property(readonly, nonatomic) id <CSDCallContainer> callContainer;
@property(readonly, nonatomic) TUCallCenter *callCenter;
- (void)registerForSecureMicEvents;	// IMP=0x001000000016bf0c
- (void)dealloc;	// IMP=0x001000000016be29
- (void)invalidate;	// IMP=0x001000000016b884
- (id)initWithQueue:(id)arg1 featureFlags:(id)arg2 serverBag:(id)arg3 chManager:(id)arg4;	// IMP=0x001000000016a52f
- (id)init;	// IMP=0x0010000000169d24
- (id)initWithQueue:(id)arg1;	// IMP=0x0010000000169c85
- (id)initWithQueue:(id)arg1 featureFlags:(id)arg2 chManager:(id)arg3;	// IMP=0x0010000000169be6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

