//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CPActivityAuthorizationManager, CPApplicationController, CPSystemStateObserver, CSDConversationLinkManager, CSDConversationNoticeManager, CSDConversationPersistenceController, CSDConversationProviderManager, CSDDeviceLockStateObserver, CSDFileTransferController, CSDIDSService, CSDPendingMembershipTracker, CSDReportingController, CSDScreenSharingActivityManager, CSDSecureImageTranscoder, CSDSharedConversationServerBag, FTDeviceSupport, MISSING_TYPE, NSDictionary, NSMapTable, NSMutableDictionary, NSString, TUCallProviderManager;
@protocol CSDConduitIDSProxy, CSDConversationInvitationResolving, CSDParticipantUpdateSanitizer, CSDVoucherManager, OS_dispatch_queue, OS_dispatch_source, TUFeatureFlags;

@interface CSDConversationManager : NSObject
{
    CSDPendingMembershipTracker *_pendingMembershipTracker;	// 8 = 0x8
    NSMutableDictionary *_mutableConversationsByUUID;	// 16 = 0x10
    NSMutableDictionary *_mutablePendingConversationsByPseudonym;	// 24 = 0x18
    NSMutableDictionary *_mutablePseudonymsByCallUUID;	// 32 = 0x20
    NSMutableDictionary *_mutablePseudonymsByRequestIdentifiers;	// 40 = 0x28
    NSMutableDictionary *_mutableSendDataCallbacksByRequestIdentifiers;	// 48 = 0x30
    NSMutableDictionary *_mutableConversationsRequestingUpgradeWithPreferences;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_pendingConversationCleanupTimer;	// 64 = 0x40
    NSMapTable *_delegateToQueue;	// 72 = 0x48
    NSMapTable *_observerToQueue;	// 80 = 0x50
    CSDScreenSharingActivityManager *_screenSharingActivityManager;	// 88 = 0x58
    CPSystemStateObserver *_sharePlaySystemStateObserver;	// 96 = 0x60
    CSDFileTransferController *_fileTransferController;	// 104 = 0x68
    NSMutableDictionary *_resourceTransferCallbacks;	// 112 = 0x70
    CSDConversationPersistenceController *_persistenceController;	// 120 = 0x78
    CSDDeviceLockStateObserver *_lockStateObserver;	// 128 = 0x80
    TUCallProviderManager *_callProviderManager;	// 136 = 0x88
    CSDConversationLinkManager *_linkManager;	// 144 = 0x90
    CSDReportingController *_reportingController;	// 152 = 0x98
    id <TUFeatureFlags> _featureFlags;	// 160 = 0xa0
    CSDConversationNoticeManager *_conversationNoticeManger;	// 168 = 0xa8
    CSDSharedConversationServerBag *_serverBag;	// 176 = 0xb0
    id <CSDConversationInvitationResolving> _invitationResolver;	// 184 = 0xb8
    NSMutableDictionary *_screenCaptureQueue;	// 192 = 0xc0
    id <CSDVoucherManager> _voucherManager;	// 200 = 0xc8
    id <CSDParticipantUpdateSanitizer> _participantUpdateSanitizer;	// 208 = 0xd0
    NSObject<OS_dispatch_queue> *_queue;	// 216 = 0xd8
    CSDIDSService *_service;	// 224 = 0xe0
    CDUnknownBlockType _groupSessionProviderCreationBlock;	// 232 = 0xe8
    FTDeviceSupport *_deviceSupport;	// 240 = 0xf0
    CDUnknownBlockType _conversationCreationBlock;	// 248 = 0xf8
    CDUnknownBlockType _sendDataBlock;	// 256 = 0x100
    CDUnknownBlockType _getPersonalNicknameBlock;	// 264 = 0x108
    CSDConversationProviderManager *_conversationProviderManager;	// 272 = 0x110
    CDUnknownBlockType _lockdownModeEnabled;	// 280 = 0x118
    CDUnknownBlockType _activeLocalHandles;	// 288 = 0x120
    CDUnknownBlockType _activeLocalHandlesForProvider;	// 296 = 0x128
    CDUnknownBlockType _localCallerID;	// 304 = 0x130
    CDUnknownBlockType _notifyPendingMembershipTrackerOfDelegatedMember;	// 312 = 0x138
    CDUnknownBlockType _localCallerIDForProvider;	// 320 = 0x140
    CSDSecureImageTranscoder *_imageTranscoder;	// 328 = 0x148
    CDUnknownBlockType _isConversationRelayPreferred;	// 336 = 0x150
    CPApplicationController *_cpApplicationController;	// 344 = 0x158
    CPActivityAuthorizationManager *_activityAuthorizationManager;	// 352 = 0x160
    id <CSDConduitIDSProxy> _messageProxy;	// 360 = 0x168
}

- (void).cxx_destruct;	// IMP=0x002000000014db52
@property(nonatomic) __weak id <CSDConduitIDSProxy> messageProxy; // @synthesize messageProxy=_messageProxy;
@property(retain, nonatomic) CPActivityAuthorizationManager *activityAuthorizationManager; // @synthesize activityAuthorizationManager=_activityAuthorizationManager;
@property(readonly, nonatomic) CPApplicationController *cpApplicationController; // @synthesize cpApplicationController=_cpApplicationController;
@property(copy, nonatomic) CDUnknownBlockType isConversationRelayPreferred; // @synthesize isConversationRelayPreferred=_isConversationRelayPreferred;
@property(retain, nonatomic) CSDSecureImageTranscoder *imageTranscoder; // @synthesize imageTranscoder=_imageTranscoder;
@property(copy, nonatomic) CDUnknownBlockType localCallerIDForProvider; // @synthesize localCallerIDForProvider=_localCallerIDForProvider;
@property(copy, nonatomic) CDUnknownBlockType notifyPendingMembershipTrackerOfDelegatedMember; // @synthesize notifyPendingMembershipTrackerOfDelegatedMember=_notifyPendingMembershipTrackerOfDelegatedMember;
@property(copy, nonatomic) CDUnknownBlockType localCallerID; // @synthesize localCallerID=_localCallerID;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandlesForProvider; // @synthesize activeLocalHandlesForProvider=_activeLocalHandlesForProvider;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandles; // @synthesize activeLocalHandles=_activeLocalHandles;
@property(copy, nonatomic) CDUnknownBlockType lockdownModeEnabled; // @synthesize lockdownModeEnabled=_lockdownModeEnabled;
@property(retain, nonatomic) CSDConversationProviderManager *conversationProviderManager; // @synthesize conversationProviderManager=_conversationProviderManager;
@property(copy, nonatomic) CDUnknownBlockType getPersonalNicknameBlock; // @synthesize getPersonalNicknameBlock=_getPersonalNicknameBlock;
@property(copy, nonatomic) CDUnknownBlockType sendDataBlock; // @synthesize sendDataBlock=_sendDataBlock;
@property(copy, nonatomic) CDUnknownBlockType conversationCreationBlock; // @synthesize conversationCreationBlock=_conversationCreationBlock;
@property(retain, nonatomic) FTDeviceSupport *deviceSupport; // @synthesize deviceSupport=_deviceSupport;
@property(copy, nonatomic) CDUnknownBlockType groupSessionProviderCreationBlock; // @synthesize groupSessionProviderCreationBlock=_groupSessionProviderCreationBlock;
@property(retain, nonatomic) CSDIDSService *service; // @synthesize service=_service;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) id <CSDParticipantUpdateSanitizer> participantUpdateSanitizer; // @synthesize participantUpdateSanitizer=_participantUpdateSanitizer;
- (void);	// IMP=0x001000000014d90a
@property(retain, nonatomic) id <CSDVoucherManager> voucherManager; // @synthesize voucherManager=_voucherManager;
@property(readonly, nonatomic) NSMutableDictionary *screenCaptureQueue; // @synthesize screenCaptureQueue=_screenCaptureQueue;
@property(retain, nonatomic) id <CSDConversationInvitationResolving> invitationResolver; // @synthesize invitationResolver=_invitationResolver;
@property(retain, nonatomic) CSDSharedConversationServerBag *serverBag; // @synthesize serverBag=_serverBag;
@property(readonly, nonatomic) CSDConversationNoticeManager *conversationNoticeManger; // @synthesize conversationNoticeManger=_conversationNoticeManger;
@property(retain, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(retain, nonatomic) CSDConversationLinkManager *linkManager; // @synthesize linkManager=_linkManager;
@property(retain, nonatomic) TUCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDDeviceLockStateObserver *lockStateObserver; // @synthesize lockStateObserver=_lockStateObserver;
@property(readonly, nonatomic) CSDConversationPersistenceController *persistenceController; // @synthesize persistenceController=_persistenceController;
@property(retain, nonatomic) NSMutableDictionary *resourceTransferCallbacks; // @synthesize resourceTransferCallbacks=_resourceTransferCallbacks;
@property(retain, nonatomic) CSDFileTransferController *fileTransferController; // @synthesize fileTransferController=_fileTransferController;
@property(retain, nonatomic) CPSystemStateObserver *sharePlaySystemStateObserver; // @synthesize sharePlaySystemStateObserver=_sharePlaySystemStateObserver;
@property(readonly, nonatomic) CSDScreenSharingActivityManager *screenSharingActivityManager; // @synthesize screenSharingActivityManager=_screenSharingActivityManager;
@property(retain, nonatomic) NSMapTable *observerToQueue; // @synthesize observerToQueue=_observerToQueue;
@property(retain, nonatomic) NSMapTable *delegateToQueue; // @synthesize delegateToQueue=_delegateToQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *pendingConversationCleanupTimer; // @synthesize pendingConversationCleanupTimer=_pendingConversationCleanupTimer;
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsRequestingUpgradeWithPreferences; // @synthesize mutableConversationsRequestingUpgradeWithPreferences=_mutableConversationsRequestingUpgradeWithPreferences;
@property(readonly, nonatomic) NSMutableDictionary *mutableSendDataCallbacksByRequestIdentifiers; // @synthesize mutableSendDataCallbacksByRequestIdentifiers=_mutableSendDataCallbacksByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByRequestIdentifiers; // @synthesize mutablePseudonymsByRequestIdentifiers=_mutablePseudonymsByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByCallUUID; // @synthesize mutablePseudonymsByCallUUID=_mutablePseudonymsByCallUUID;
@property(readonly, nonatomic) NSMutableDictionary *mutablePendingConversationsByPseudonym; // @synthesize mutablePendingConversationsByPseudonym=_mutablePendingConversationsByPseudonym;
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsByUUID; // @synthesize mutableConversationsByUUID=_mutableConversationsByUUID;
@property(retain, nonatomic) CSDPendingMembershipTracker *pendingMembershipTracker; // @synthesize pendingMembershipTracker=_pendingMembershipTracker;
- (void)fileTransferer:(id)arg1 didTransferFileAtURL:(id)arg2 successfully:(_Bool)arg3;	// IMP=0x001000000014d502
- (void)fileTransferer:(id)arg1 didReceiveResourcesAtURL:(id)arg2 withMetadata:(id)arg3 isZipped:(_Bool)arg4 fromIDSDestination:(id)arg5;	// IMP=0x001000000014ce0e
- (void)systemStateObserver:(id)arg1 screenSharingAllowedStateChanged:(_Bool)arg2;	// IMP=0x001000000014c90a
- (void)systemStateObserver:(id)arg1 sharePlayAllowedStateChanged:(_Bool)arg2;	// IMP=0x001000000014c406
- (void)applicationPolicyManager:(id)arg1 authorizationChangedForBundleIdentifier:(id)arg2;	// IMP=0x001000000014c155
- (void)screenSharingActivityManager:(id)arg1 invalidatedSessionWithReason:(id)arg2 wasLocallySharing:(_Bool)arg3;	// IMP=0x001000000014bd4e
- (void)screenSharingActivityManager:(id)arg1 receivedUpdatedRemoteAttributes:(id)arg2 isLocallySharing:(_Bool)arg3;	// IMP=0x001000000014bbc6
- (void)_sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5 withMessage:(id)arg6;	// IMP=0x001000000014b325
- (void)sendDelegationResponseMessageTo:(id)arg1 conversation:(id)arg2 transactionUUID:(id)arg3 forMember:(id)arg4 withResponse:(_Bool)arg5;	// IMP=0x001000000014b15c
- (void)sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5;	// IMP=0x001000000014afca
- (void)pendingMembershipTracker:(id)arg1 willNotAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x001000000014ac85
- (void)pendingMembershipTracker:(id)arg1 didTrack:(id)arg2 forGroupUUID:(id)arg3;	// IMP=0x001000000014ab00
- (void)pendingMembershipTracker:(id)arg1 willAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x001000000014a7cc
- (void)handleRemovedLinkDescriptors:(id)arg1;	// IMP=0x001000000014a5ee
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromValidityCheck:(id)arg2;	// IMP=0x001000000014a482
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x001000000014a307
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x001000000014a19b
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromSync:(id)arg2;	// IMP=0x001000000014a02f
- (id)pickInitiatorFromParticipants:(id)arg1 forUpdate:(id)arg2;	// IMP=0x0010000000149c9b
- (void)prepareAdditionOfActiveParticipant:(id)arg1 toInvitedMembersForLinkOnConversation:(id)arg2;	// IMP=0x00100000001493fe
- (void)removePendingMemberMatchingActiveParticipant:(id)arg1 conversation:(id)arg2;	// IMP=0x0010000000149069
- (void)handleParticipantWithIdentifier:(unsigned long long)arg1 leftConversationWithGroupUUID:(id)arg2 fromHandle:(id)arg3 withGroupSessionUpdate:(id)arg4;	// IMP=0x0010000000148cfb
- (void)handleParticipants:(id)arg1 joinedConversationWithUpdate:(id)arg2 joinContext:(id)arg3 fromHandle:(id)arg4;	// IMP=0x001000000014558b
- (void)processParticipantDataUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000144d25
- (void)processUpdateMembersUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000144846
- (id)pushTokenForSelf;	// IMP=0x00100000001447ef
- (void)processJoinUpdate:(id)arg1 fromHandle:(id)arg2 senderCorrelationIdentifier:(id)arg3;	// IMP=0x00100000001440b4
- (void)processGroupSessionParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x0010000000143800
- (void)sanitizeAndProcessParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x00100000001435b7
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantDataUpdate:(id)arg3;	// IMP=0x00100000001434d4
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantUpdate:(id)arg3 context:(id)arg4;	// IMP=0x00100000001433d8
- (void)_service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5 attemptCount:(unsigned long long)arg6;	// IMP=0x0010000000141f2f
- (void)enqueueMessageRetryAttemptForMessageID:(id)arg1 message:(id)arg2 attemptCount:(unsigned long long)arg3 messageProcessingBlock:(CDUnknownBlockType)arg4;	// IMP=0x001000000014198e
- (void)processProxiedGroupUpdate:(id)arg1;	// IMP=0x0010000000141918
- (void)processProxiedResource:(id)arg1 metadata:(id)arg2 fromID:(id)arg3 context:(id)arg4;	// IMP=0x001000000014185d
- (void)processProxiedMessage:(id)arg1 fromID:(id)arg2 context:(id)arg3;	// IMP=0x00100000001417a1
- (void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x00100000001414e7
- (void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 metadata:(id)arg4 fromID:(id)arg5 context:(id)arg6;	// IMP=0x001000000014103f
- (_Bool)shouldCreatePendingChatForMessageType:(long long)arg1 fromHandle:(id)arg2;	// IMP=0x001000000014101e
- (void)service:(id)arg1 account:(id)arg2 incomingPendingMessageOfType:(long long)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x0010000000140bd4
- (void)_runCallbackIfNecessaryForMessage:(id)arg1;	// IMP=0x0010000000140a97
- (void)service:(id)arg1 account:(id)arg2 messageIdentifier:(id)arg3 alternateCallbackID:(id)arg4 updatedWithResponseCode:(long long)arg5 error:(id)arg6 lastCall:(_Bool)arg7 messageContext:(id)arg8;	// IMP=0x0010000000140a1d
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;	// IMP=0x001000000014086a
- (void)conversation:(id)arg1 screenShareAttributesDidChange:(id)arg2;	// IMP=0x00100000001407d2
- (void)conversation:(id)arg1 screenShareAttributesUpdated:(id)arg2;	// IMP=0x0010000000140719
- (void)conversation:(id)arg1 screenShareAttributesSelected:(id)arg2;	// IMP=0x001000000014065b
- (void)conversation:(id)arg1 requestedEndpointWithIdentifier:(id)arg2 activitySession:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000013ff2e
- (void)conversationDidTriggerJoin:(id)arg1;	// IMP=0x001000000013fcf7
- (void)conversation:(id)arg1 addedMembers:(id)arg2 triggeredLocally:(_Bool)arg3;	// IMP=0x001000000013f8c4
- (void)conversation:(id)arg1 sendResourceAtURL:(id)arg2 toParticipants:(id)arg3 metadata:(id)arg4 activitySessionUUID:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x001000000013f1d8
- (void)conversation:(id)arg1 activitySessionRemoved:(id)arg2 userOriginated:(_Bool)arg3;	// IMP=0x001000000013ee0e
- (void)conversation:(id)arg1 changedBytesOfDataUsed:(long long)arg2;	// IMP=0x001000000013e9ab
- (void)conversation:(id)arg1 activityChangedOnSession:(id)arg2;	// IMP=0x001000000013e514
- (void)conversation:(id)arg1 appLaunchState:(unsigned long long)arg2 forActivitySession:(id)arg3;	// IMP=0x001000000013dfc9
- (void)conversation:(id)arg1 didChangeSceneAssociationForActivitySession:(id)arg2;	// IMP=0x001000000013dadb
- (void)conversation:(id)arg1 didChangeStateForActivitySession:(id)arg2;	// IMP=0x001000000013d5ee
- (void)conversation:(id)arg1 activitySessionChanged:(id)arg2;	// IMP=0x001000000013d337
- (void)conversation:(id)arg1 receivedActivitySessionEvent:(id)arg2;	// IMP=0x001000000013ce6f
- (void)conversation:(id)arg1 failedWithContext:(id)arg2;	// IMP=0x001000000013c9e5
- (void)conversation:(id)arg1 sendDeclineMessageToParticipantDestination:(id)arg2;	// IMP=0x001000000013c83a
- (void)conversation:(id)arg1 requestBlobRecoveryForParticipantDestination:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000013c64e
- (void)conversation:(id)arg1 participantDidStopReacting:(id)arg2;	// IMP=0x001000000013c184
- (void)conversation:(id)arg1 participant:(id)arg2 didReact:(id)arg3;	// IMP=0x001000000013bc89
- (void)conversation:(id)arg1 mediaPrioritiesChangedForParticipant:(id)arg2;	// IMP=0x001000000013b7bf
- (void)conversationDidStopScreenCapture:(id)arg1;	// IMP=0x001000000013b6c4
- (void)conversation:(id)arg1 updatedActiveParticipantWithScreenSharing:(id)arg2;	// IMP=0x001000000013b20c
- (void)conversation:(id)arg1 updatedActiveParticipant:(id)arg2;	// IMP=0x001000000013ad65
- (void)conversation:(id)arg1 removedActiveParticipant:(id)arg2 withLeaveReason:(unsigned long long)arg3;	// IMP=0x001000000013a5ff
- (void)conversation:(id)arg1 didChangeLocalParticipant:(id)arg2 broadcastActivitySession:(_Bool)arg3;	// IMP=0x0010000000139bb9
- (void)conversation:(id)arg1 addedActiveParticipant:(id)arg2;	// IMP=0x0010000000138a49
- (void)conversationInvalidated:(id)arg1;	// IMP=0x00100000001386cd
- (void)conversationConnectionDidStart:(id)arg1;	// IMP=0x0010000000138221
- (void)conversationChanged:(id)arg1;	// IMP=0x0010000000137adc
- (void)cleanupExpiredPendingConversations;	// IMP=0x0010000000137696
- (void)setupPendingConversationCleanupTimer;	// IMP=0x00100000001373b6
- (void)registerMessagesGroupUUIDForConversationUUID:(id)arg1;	// IMP=0x0010000000137030
- (void)updateLocalParticipantToAVLessWithPresentationMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000137019
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2 presentationMode:(unsigned long long)arg3;	// IMP=0x00100000001368a5
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000136889
- (void)includeMetricsReport:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000013658b
- (void)addAliasesToConversationContainer:(id)arg1 forBundleIdentifier:(id)arg2;	// IMP=0x0010000000136307
- (void)removeConversationWithUUID:(id)arg1;	// IMP=0x001000000013608b
- (void)removeNonIndefiniteLinks;	// IMP=0x0010000000135a3e
- (void)setMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000013578d
- (void)removeConversationNoticeWithUUID:(id)arg1;	// IMP=0x0010000000135684
- (void)activateConversationNoticeWithActionURL:(id)arg1 bundleIdentifier:(id)arg2;	// IMP=0x0010000000135551
- (void)fetchUpcomingNoticeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000013542a
- (oneway void)setIgnoreLetMeInRequests:(_Bool)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000134def
- (void)rejectPendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000134af5
- (void)approvePendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x00100000001347e8
- (void)linkSyncStateIncludeLinks:(_Bool)arg1 WithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000013462c
- (void)recoverLinksForPseudonyms:(id)arg1;	// IMP=0x0010000000134486
- (void)scheduleConversationLinkCheckInInitial:(_Bool)arg1;	// IMP=0x001000000013430c
- (id)undeleteConversationLinkIfNecessary:(id)arg1 withError:(id *)arg2;	// IMP=0x0010000000134283
- (void)setLinkName:(id)arg1 forConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000133d48
- (void)activateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000133a9c
- (void)getInactiveLinkWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000133703
- (void)generateAllInactiveLinks;	// IMP=0x0010000000133583
- (void)checkLinkValidity:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001333f3
- (void)renewLink:(id)arg1 expirationDate:(id)arg2 reason:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000132e63
- (void)renewLinkIfNeeded:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000013292e
- (void)invalidateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001323fe
- (void)addInvitedMemberHandles:(id)arg1 toConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000131e06
- (void)generateLinkWithInvitedMemberHandles:(id)arg1 linkLifetimeScope:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000131293
- (void)setConversationLink:(id)arg1 forConversation:(id)arg2 replyToCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000013107e
- (id)_getActivatedLinkWithHandle:(id)arg1 updateGroupUUID:(id)arg2 updateInvitedHandles:(id)arg3;	// IMP=0x0010000000130dac
- (void)generateLinkForConversationUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001303a0
- (void)getActiveLinksWithCreatedOnly:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000012ffec
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000012fe49
- (void)updateLocalMemberNickname:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x001000000012fa11
- (void)setDownlinkMuted:(_Bool)arg1 forRemoteParticipantsOnConversationWithUUID:(id)arg2;	// IMP=0x001000000012f787
- (void)noticeManager:(id)arg1 conversation:(id)arg2 participant:(id)arg3 addedNotice:(id)arg4;	// IMP=0x001000000012f239
- (void)processUpdatedNickname:(id)arg1 forHandle:(id)arg2 conversationUUID:(id)arg3;	// IMP=0x001000000012e990
- (void)kickMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x001000000012e698
- (void)buzzMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x001000000012dfbf
- (void)updateParticipantPresentationContexts:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000012dd0e
- (void)handleConversation:(id)arg1 updateGuestMode:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000012d56c
- (void)handleConversation:(id)arg1 receivedActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000012cec2
- (void)handleConversation:(id)arg1 receivedEndorsementForMember:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000012cd53
- (void)handleConversation:(id)arg1 updateActivityImage:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000012bc4b
- (void)handleConversation:(id)arg1 removeHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000012bc16
- (void)handleConversation:(id)arg1 addHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000012bbe1
- (void)handleConversation:(id)arg1 updateActivity:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000012b77b
- (void)handleConversation:(id)arg1 removeActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000012b3c1
- (void)handleConversation:(id)arg1 registerMessagesGroupUUIDMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x001000000012b2b8
- (void)handleConversation:(id)arg1 participantUpdateMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x0010000000129ca2
- (void)resetActivitySessionSceneAssociationsForBundleID:(id)arg1;	// IMP=0x0010000000129b1a
- (void)revokeBackgroundPipAuthorizationsForBundleID:(id)arg1;	// IMP=0x0010000000129999
- (void)requestActivityAuthorizationForApplicationWithBundleIdentifier:(id)arg1 overrides:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000129875
- (void)launchApplicationForActivitySessionUUID:(id)arg1 authorizedExternally:(_Bool)arg2 forceBackground:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000001287a7
- (void)joinConversationWithRequest:(id)arg1;	// IMP=0x0010000000128472
- (void)setAutoSharePlayEnabled:(_Bool)arg1;	// IMP=0x0010000000128374
- (void)setActivityAuthorization:(_Bool)arg1 forBundleID:(id)arg2;	// IMP=0x0010000000128279
- (MISSING_TYPE *)sendMessage:forConversation:withActivitySession:additionalOptions: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000127f63
- (void)sendMessage:(id)arg1 forConversation:(id)arg2 withActivitySession:(id)arg3;	// IMP=0x0010000000127f4e
- (void)setUsingAirplay:(_Bool)arg1 onActivitySession:(id)arg2 onConversationWithUUID:(id)arg3;	// IMP=0x0010000000127bf7
- (void)presentDismissalAlertForActivitySessionWithUUID:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000127946
- (void)endActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000012767e
- (void)leaveActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x00100000001273b8
- (void)createActivitySession:(id)arg1 onConversationWithUUID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000126b7d
- (id)createCPActivitySessionForActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000012672f
- (void)updateMessagesGroupPhotoOnConversationWithUUID:(id)arg1;	// IMP=0x00100000001260c0
- (void)updateMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000125a73
- (void)_displaySharePlayUnableToStartWithMessage:(id)arg1;	// IMP=0x001000000012575b
- (void)displaySharePlayUnableToStartAlert;	// IMP=0x001000000012566b
@property(readonly, nonatomic, getter=isScreenSharingAvailable) _Bool screenSharingAvailable;
@property(readonly, nonatomic, getter=isSharePlayAvailable) _Bool sharePlayAvailable;
@property(readonly, nonatomic) _Bool allActiveConversationParticipantsSupportSharePlay;
- (void)addInvitedMemberHandlesFromAddedRemoteMembers:(id)arg1 toConversationLink:(id)arg2;	// IMP=0x0010000000124bfe
- (void)maybeAddComplementaryAssociationVoucherFor:(id)arg1 toLocalMemberOf:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001241fb
- (void)setSharePlayHandedOff:(_Bool)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000123f57
- (void)prepareConversationWithUUID:(id)arg1 withHandoffContext:(id)arg2;	// IMP=0x001000000012384c
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 toConversationWithUUID:(id)arg3;	// IMP=0x0010000000122ef4
- (void)addRemoteMembers:(id)arg1 toConversationWithUUID:(id)arg2;	// IMP=0x0010000000122e62
- (void)removeRemoteMembers:(id)arg1 fromConversationWithUUID:(id)arg2;	// IMP=0x0010000000122baf
- (void)setScreenShareAttributes:(id)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000122a20
- (void)setGridDisplayMode:(unsigned long long)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x00100000001228e7
- (void)setPresentationRect:(struct CGRect)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000122795
- (void)setPresentationState:(int)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000012265e
- (int)presentationStateForConversationWithUUID:(id)arg1;	// IMP=0x00100000001224ce
- (_Bool)isConversationWithUUIDScreening:(id)arg1;	// IMP=0x0010000000122341
- (_Bool)isConversationWithUUIDRelaying:(id)arg1;	// IMP=0x00100000001221b4
- (_Bool)isConversationWithUUIDRedirectingAudio:(id)arg1;	// IMP=0x0010000000122154
- (void)setScreening:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000121fd8
- (void)setRelaying:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000121ea0
- (void)setAudioPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000121d68
- (void)setVideoPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000121c30
- (void)setScreenEnabled:(_Bool)arg1 screenShareAttributes:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x0010000000121293
- (void)setScreenEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000121217
- (void)setVideoEnabled:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x0010000000120d70
- (void)setUplinkMuted:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x00100000001208c9
- (void)setVideoEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000120791
- (void)sendVideoUpgradeMessageforConversationWithUUID:(id)arg1;	// IMP=0x0010000000120499
- (void)setVideo:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000120361
- (void)setUplinkMuted:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000120229
- (void)removePseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x0010000000120120
- (void)addPseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x001000000011ffeb
- (void)leaveAllConversations;	// IMP=0x001000000011fe12
- (void)leaveConversationWithUUID:(id)arg1 withContext:(id)arg2;	// IMP=0x001000000011fcaf
- (void)leaveConversationWithUUID:(id)arg1;	// IMP=0x001000000011fc3e
- (void)_leaveConversation:(id)arg1;	// IMP=0x001000000011fb9d
- (void)_leaveConversation:(id)arg1 withContext:(id)arg2;	// IMP=0x001000000011fa58
- (void)startAudioForConversationWithUUID:(id)arg1;	// IMP=0x001000000011f7e0
- (void)sendInvitationMessageToMember:(id)arg1 forConversation:(id)arg2 includeAllAttributes:(_Bool)arg3 invitationPreferences:(id)arg4 additionalOptions:(id)arg5;	// IMP=0x001000000011ef09
- (void)updateLetMeInRequestState:(long long)arg1 addLink:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x001000000011e8a8
- (void)sendLetMeInResponseToPendingMember:(id)arg1 forConversation:(id)arg2 usingResponseKeyData:(id)arg3 approved:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;	// IMP=0x001000000011e0fd
- (void)requestLetMeInApprovalForPseudonym:(id)arg1;	// IMP=0x001000000011d2c2
- (id)initiatePendingConversationForLink:(id)arg1 localMember:(id)arg2 isVideoEnabled:(_Bool)arg3;	// IMP=0x001000000011cacc
- (void)joinExistingConversationWithUUID:(id)arg1 context:(id)arg2;	// IMP=0x001000000011beed
- (id)findOrCreateConversationWithGroupUUID:(id)arg1 messagesGroupUUID:(id)arg2 remoteMembers:(id)arg3 otherInvitedHandles:(id)arg4 localMember:(id)arg5 remotePushTokens:(id)arg6 link:(id)arg7 activity:(id)arg8 avMode:(unsigned long long)arg9 presentationMode:(unsigned long long)arg10 conversationProvider:(id)arg11;	// IMP=0x001000000011ae79
- (void)removeAllConversations;	// IMP=0x001000000011ae3c
- (void)retreiveActiveConversations;	// IMP=0x001000000011a3ee
- (void)beginListeningOnService:(id)arg1;	// IMP=0x001000000011a193
- (void)addObserver:(id)arg1 queue:(id)arg2;	// IMP=0x001000000011a060
- (void)removeDelegate:(id)arg1;	// IMP=0x0010000000119f56
- (void)addDelegate:(id)arg1 queue:(id)arg2;	// IMP=0x0010000000119e23
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifierState;
- (id)deletedConversationLinksWithError:(id *)arg1;	// IMP=0x0010000000119c9d
- (id)activatedConversationLinksWithError:(id *)arg1;	// IMP=0x0010000000119c1e
- (id)conversationsByUUIDIncludingStorageConversations:(_Bool)arg1;	// IMP=0x001000000011969b
@property(readonly, copy, nonatomic) NSDictionary *pseudonymsByCallUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByUUID;
- (id)_incomingPendingConversationsByGroupUUID;	// IMP=0x0010000000118f86
@property(readonly, copy, nonatomic) NSDictionary *incomingPendingConversationsByGroupUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByGroupUUID;
- (void)refreshActiveParticipantsList;	// IMP=0x0010000000118636
- (_Bool)verifyEndorseRepresentsMemberFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x0010000000118159
- (_Bool)verifyLightweightMessageTypeFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x0010000000117fc4
- (_Bool)verifyGroupSessionParticipantUpdateAllowedFromHandle:(id)arg1 participantUpdate:(id)arg2 message:(id)arg3 existingConversation:(id)arg4 lightweightMembers:(id)arg5;	// IMP=0x0010000000117b59
- (_Bool)verifyAllLightweightmembersAssociated:(id)arg1 remoteMembers:(id)arg2;	// IMP=0x0010000000117859
- (_Bool)verifyBlobResponseFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x00100000001172f1
- (_Bool)verifyMessageIntentKeyFromContext:(id)arg1 message:(id)arg2;	// IMP=0x00100000001171e1
- (_Bool)verifyActivitySessionOriginatorFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x0010000000116e4d
- (_Bool)verifyKickMemberPermittedFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x0010000000116b34
- (_Bool)shouldAcceptMembershipUpdateFromHandle:(id)arg1 joinContext:(id)arg2 participantUpdate:(id)arg3 existingConversation:(id)arg4;	// IMP=0x0010000000116533
- (_Bool)shouldAcceptMessageFromHandle:(id)arg1 messageContext:(id)arg2 message:(id)arg3 existingConversation:(id)arg4;	// IMP=0x00100000001162f0
- (id)memberExistsForParticipantDestination:(id)arg1 groupSessionParticipantUpdate:(id)arg2;	// IMP=0x0010000000115e62
- (id)memberExistsForParticipantDestination:(id)arg1 members:(id)arg2;	// IMP=0x0010000000115ac4
- (void)broadcastLightweightEndorsementForAddedMembers:(id)arg1 onConversation:(id)arg2;	// IMP=0x0010000000115750
- (void)broadcastImageForSession:(id)arg1 onConversation:(id)arg2;	// IMP=0x0010000000114ef7
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2;	// IMP=0x0010000000114ee2
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x00100000001147be
- (_Bool)broadcastFile:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x0010000000113f5e
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3;	// IMP=0x0010000000113f49
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3 additionalOptions:(id)arg4;	// IMP=0x0010000000113d90
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3 isBlobResponse:(_Bool)arg4;	// IMP=0x0010000000113c22
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3;	// IMP=0x0010000000113c0d
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3;	// IMP=0x0010000000113b57
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4;	// IMP=0x0010000000113b36
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4 additionalOptions:(id)arg5 isBlobResponse:(_Bool)arg6 callback:(CDUnknownBlockType)arg7;	// IMP=0x00100000001133fd
- (void)handleReceivedUpdateJoinedMetadataMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000112aab
- (_Bool)sendMessagesForInvalidatedLink:(id)arg1;	// IMP=0x0010000000112634
- (_Bool)sendMessagesForCreatedOrChangedLink:(id)arg1 conversation:(id)arg2 messageType:(int)arg3;	// IMP=0x0010000000111a4b
- (void)handleDelegatedPendingMemberIfNecessary:(id)arg1 conversation:(id)arg2 groupUUID:(id)arg3 fromHandle:(id)arg4 transactionUUID:(id)arg5;	// IMP=0x0010000000111716
- (void)handleReceivedLMIDelegateMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000110e4e
- (void)removeLink:(id)arg1 withConversation:(id)arg2;	// IMP=0x0010000000110c16
- (void)removeLink:(id)arg1;	// IMP=0x0010000000110c02
- (void)handleReceivedLinkInvalidatedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000001105e2
- (void)handleReceivedLinkCreatedOrChangedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x001000000010f672
- (void)handleReceivedLetMeInResponse:(id)arg1 pendingConversation:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010ef31
- (void)handleReceivedLetMeInRequest:(id)arg1 toPseudonym:(id)arg2 fromHandle:(id)arg3 responseKeyData:(id)arg4 dateInitiated:(id)arg5;	// IMP=0x001000000010dd30
- (void)handleEncryptedLetMeInResponse:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x001000000010d6a2
- (void)handleEncryptedLetMeInRequest:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x001000000010d00d
- (void)handleEncryptedMessageWithin:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x001000000010ce68
- (id)createActivitySession:(id)arg1 onConversation:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010ccca
- (id)temporaryFilePath;	// IMP=0x001000000010cc4e
- (_Bool)_linksEnabled;	// IMP=0x001000000010cc41
- (void)postEndEventForSession:(id)arg1 originator:(id)arg2 conversation:(id)arg3;	// IMP=0x001000000010ca53
- (void)postSessionStartedForSession:(id)arg1 originator:(id)arg2 conversation:(id)arg3;	// IMP=0x001000000010c865
- (void)handleConversationHandoffRouteIdentifierChangedNotification:(id)arg1;	// IMP=0x001000000010bd7e
- (void)updateConversationHandoffEligibility:(id)arg1;	// IMP=0x001000000010b2e4
- (void)handleConversationHandoffRecommendationChangedNotification:(id)arg1;	// IMP=0x001000000010b204
- (void)handleConversation:(id)arg1 receivedBlobRecoveryResponse:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010ae89
- (void)handleConversation:(id)arg1 receivedBlobRecoveryRequest:(id)arg2 fromHandle:(id)arg3;	// IMP=0x001000000010aaec
- (void)notifyDelegatesOfInvalidLinkForPendingConversation:(id)arg1;	// IMP=0x001000000010a6bd
- (void)notifyDelegatesOfLetMeInRejectedForPendingConversation:(id)arg1;	// IMP=0x001000000010a28e
- (void)notifyDelegatesOfRemoteScreenShareEndedWithReason:(id)arg1;	// IMP=0x0010000000109faf
- (void)notifyDelegatesOfRemoteScreenShareAttributes:(id)arg1 isLocallySharing:(_Bool)arg2;	// IMP=0x0010000000109cb5
- (void)notifyDelegatesOfChangedLink:(id)arg1 conversation:(id)arg2;	// IMP=0x0010000000109623
- (void)notifyDelegatesOfChangedLinkDescriptors:(id)arg1;	// IMP=0x001000000010951f
- (void)notifyDelegatesOfUpdatePendingConversations;	// IMP=0x0010000000109260
- (void)notifyDelegatesOfTrackedPendingMember:(id)arg1 forConversationLink:(id)arg2;	// IMP=0x0010000000108f61
- (void)notifyDelegatesOfRemovedConversationWithUUID:(id)arg1;	// IMP=0x0010000000108cd9
- (void)notifyDelegatesOfAVModeChanged:(unsigned long long)arg1 toAVMode:(unsigned long long)arg2 forConversation:(id)arg3;	// IMP=0x0010000000108861
- (void)notifyDelegatesOfNewConversation:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000001083d5
- (void)notifyDelegatesOfMessage:(id)arg1 fromHandle:(id)arg2 forConversation:(id)arg3 withUpdate:(id)arg4;	// IMP=0x0010000000107e5e
- (id)conversationWithGroupUUID:(id)arg1 orMemberIdentifiers:(id)arg2 orRemoteMembers:(id)arg3 andLink:(id)arg4 andVideo:(_Bool)arg5;	// IMP=0x0010000000107a1f
- (id)createConversationIfNecessaryWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 remoteMembers:(id)arg6 pendingMembers:(id)arg7 otherInvitedHandles:(id)arg8 remotePushTokens:(id)arg9 lightweightMembers:(id)arg10 link:(id)arg11 activity:(id)arg12 avMode:(unsigned long long)arg13 presentationMode:(unsigned long long)arg14 provider:(id)arg15;	// IMP=0x0010000000107650
- (id)conversationLinkForGroupUUID:(id)arg1;	// IMP=0x0010000000107450
- (id)conversationLinkForPseudonym:(id)arg1;	// IMP=0x00100000001072cf
- (id)findConversationLinkMatchingPseudonym:(id)arg1;	// IMP=0x00100000001070cf
- (id)pendingConversationWithPseudonym:(id)arg1;	// IMP=0x0010000000106e71
- (id)activeApprovedConversationWithLink:(id)arg1;	// IMP=0x0010000000106ad3
- (id)conversationRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;	// IMP=0x0010000000106773
- (id)conversationWithGroupUUID:(id)arg1 orRepresentedByRemoteMembers:(id)arg2 andLink:(id)arg3;	// IMP=0x00100000001064eb
- (id)conversationWithGroupUUID:(id)arg1;	// IMP=0x00100000001062ca
- (id)conversationWithGroupUUID:(id)arg1 andProvider:(id)arg2;	// IMP=0x0010000000105fa7
- (id)activeConversation;	// IMP=0x0010000000105dff
- (void)removeAllPendingConversations;	// IMP=0x0010000000105d4d
- (id)_removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x0010000000105c05
- (id)removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x0010000000105a84
- (id)pendingConversationUUIDWithPseudonym:(id)arg1;	// IMP=0x00100000001056e0
- (id)createConversationWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 initiator:(id)arg6 remoteMembers:(id)arg7 pendingMembers:(id)arg8 otherInvitedHandles:(id)arg9 remotePushTokens:(id)arg10 lightweightMembers:(id)arg11 activity:(id)arg12 link:(id)arg13 report:(id)arg14 fromStorage:(_Bool)arg15 avMode:(unsigned long long)arg16 presentationMode:(unsigned long long)arg17 provider:(id)arg18;	// IMP=0x001000000010451d
- (id)localMemberForProvider:(id)arg1 fromHandle:(id)arg2 members:(id)arg3 lightweightMembers:(id)arg4 activeLocalHandles:(id)arg5;	// IMP=0x0010000000103fe4
- (id)callerIDForLocalMember:(id)arg1;	// IMP=0x0010000000103fd0
- (id)callerIDForLocalMember:(id)arg1 forProvider:(id)arg2;	// IMP=0x0010000000103ead
- (id)callerIDHandleForSenderIdentityUUID:(id)arg1;	// IMP=0x0010000000103c85
- (id)senderIdentityUUIDForCallerIDHandle:(id)arg1;	// IMP=0x0010000000103a5d
- (_Bool)isHandleStringLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x00100000001038b3
- (_Bool)isHandleStringLocalPseudonym:(id)arg1;	// IMP=0x001000000010389f
- (_Bool)isHandleLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x0010000000103822
- (_Bool)isValidLocalHandle:(id)arg1 activeLocalHandles:(id)arg2 provider:(id)arg3;	// IMP=0x001000000010379a
- (_Bool)isValidLocalHandle:(id)arg1;	// IMP=0x0010000000103703
- (_Bool)isValidLocalHandle:(id)arg1 forProvider:(id)arg2;	// IMP=0x00100000001035ab
- (_Bool)shouldIgnoreMessageForConversation:(id)arg1;	// IMP=0x00100000001032d5
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 cpApplicationController:(id)arg5 invitationResolver:(id)arg6 pendingMembershipTracker:(id)arg7 featureFlags:(id)arg8 applicationPolicyManager:(id)arg9;	// IMP=0x0010000000101219
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 invitationResolver:(id)arg5 pendingMembershipTracker:(id)arg6 featureFlags:(id)arg7;	// IMP=0x00100000001010c8
- (id)init;	// IMP=0x001000000010109d
- (id)initWithReportingController:(id)arg1 cpApplicationController:(id)arg2 invitationResolver:(id)arg3;	// IMP=0x0010000000100f70

// Remaining properties
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifiers;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

