//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class AVAudioSession, CSDPauseDigitsQueue, CSDProviderDisplayMonitor, CXAbstractProviderSource, CXCallFailureContext, CXCallSource, CXCallUpdate, LSApplicationRecord, MISSING_TYPE, NSDictionary, NSNotificationCenter, NSString, NSURL, NSUUID, TUCallCenter, TUCallScreenShareAttributes, TUParticipant, TUUserConfiguration;
@protocol CSDProviderCallDelegate, TUFeatureFlags;

@interface CSDProviderCall
{
    _Bool _outgoing;	// 8 = 0x8
    _Bool _wantsStagingArea;	// 9 = 0x9
    _Bool _video;	// 10 = 0xa
    _Bool _conversation;	// 11 = 0xb
    _Bool _sharingScreen;	// 12 = 0xc
    _Bool _expanseProvider;	// 13 = 0xd
    _Bool _mixesVoiceWithMedia;	// 14 = 0xe
    _Bool _mediaPlaybackOnExternalDevice;	// 15 = 0xf
    _Bool _underlyingUplinkMuted;	// 16 = 0x10
    _Bool _prefersToPlayDuringWombat;	// 17 = 0x11
    _Bool _held;	// 18 = 0x12
    _Bool _sendingVideo;	// 19 = 0x13
    _Bool _shouldAcceptDateConnectedProviderUpdates;	// 20 = 0x14
    int _ttyType;	// 24 = 0x18
    int _originatingUIType;	// 28 = 0x1c
    TUParticipant *_activeRemoteParticipant;	// 32 = 0x20
    id <TUFeatureFlags> _featureFlags;	// 40 = 0x28
    NSURL *_imageURL;	// 48 = 0x30
    long long _bluetoothAudioFormat;	// 56 = 0x38
    TUCallScreenShareAttributes *_screenShareAttributes;	// 64 = 0x40
    NSDictionary *_silencingUserInfo;	// 72 = 0x48
    TUCallCenter *_callCenter;	// 80 = 0x50
    MISSING_TYPE *_providerCallDelegate;	// 88 = 0x58
    NSString *_providerIdentifier;	// 96 = 0x60
    CXCallSource *_backingCallSource;	// 104 = 0x68
    CXAbstractProviderSource *_providerSource;	// 112 = 0x70
    long long _endedReason;	// 120 = 0x78
    CXCallFailureContext *_failureContext;	// 128 = 0x80
    CSDProviderDisplayMonitor *_providerDisplayMonitor;	// 136 = 0x88
    CDUnknownBlockType _usesSystemMutingBlock;	// 144 = 0x90
    CDUnknownBlockType _systemControllerUplinkMutedBlock;	// 152 = 0x98
    CDUnknownBlockType _systemControllerSetUplinkMutedBlock;	// 160 = 0xa0
    CXCallUpdate *_mergedCallUpdate;	// 168 = 0xa8
    CSDPauseDigitsQueue *_pauseDigitsQueue;	// 176 = 0xb0
    TUUserConfiguration *_userConfiguration;	// 184 = 0xb8
    NSNotificationCenter *_defaultNotificationCenter;	// 192 = 0xc0
}

- (void).cxx_destruct;	// IMP=0x00200000000651c3
@property(retain, nonatomic) NSNotificationCenter *defaultNotificationCenter; // @synthesize defaultNotificationCenter=_defaultNotificationCenter;
@property(readonly, nonatomic) TUUserConfiguration *userConfiguration; // @synthesize userConfiguration=_userConfiguration;
@property(retain, nonatomic) CSDPauseDigitsQueue *pauseDigitsQueue; // @synthesize pauseDigitsQueue=_pauseDigitsQueue;
@property(retain, nonatomic) CXCallUpdate *mergedCallUpdate; // @synthesize mergedCallUpdate=_mergedCallUpdate;
@property(copy, nonatomic) CDUnknownBlockType systemControllerSetUplinkMutedBlock; // @synthesize systemControllerSetUplinkMutedBlock=_systemControllerSetUplinkMutedBlock;
@property(copy, nonatomic) CDUnknownBlockType systemControllerUplinkMutedBlock; // @synthesize systemControllerUplinkMutedBlock=_systemControllerUplinkMutedBlock;
@property(copy, nonatomic) CDUnknownBlockType usesSystemMutingBlock; // @synthesize usesSystemMutingBlock=_usesSystemMutingBlock;
@property(readonly, nonatomic) CSDProviderDisplayMonitor *providerDisplayMonitor; // @synthesize providerDisplayMonitor=_providerDisplayMonitor;
@property(retain, nonatomic) CXCallFailureContext *failureContext; // @synthesize failureContext=_failureContext;
@property(nonatomic) _Bool shouldAcceptDateConnectedProviderUpdates; // @synthesize shouldAcceptDateConnectedProviderUpdates=_shouldAcceptDateConnectedProviderUpdates;
@property(nonatomic) _Bool sendingVideo; // @synthesize sendingVideo=_sendingVideo;
@property(nonatomic) long long endedReason; // @synthesize endedReason=_endedReason;
@property(nonatomic, getter=isHeld) _Bool held; // @synthesize held=_held;
@property(retain, nonatomic) CXAbstractProviderSource *providerSource; // @synthesize providerSource=_providerSource;
@property(retain, nonatomic) CXCallSource *backingCallSource; // @synthesize backingCallSource=_backingCallSource;
@property(readonly, copy, nonatomic) NSString *providerIdentifier; // @synthesize providerIdentifier=_providerIdentifier;
@property(nonatomic) __weak id <CSDProviderCallDelegate> providerCallDelegate; // @synthesize providerCallDelegate=_providerCallDelegate;
@property(retain, nonatomic) TUCallCenter *callCenter; // @synthesize callCenter=_callCenter;
- (_Bool)prefersToPlayDuringWombat;	// IMP=0x0010000000065005
@property(nonatomic, getter=isUnderlyingUplinkMuted) _Bool underlyingUplinkMuted; // @synthesize underlyingUplinkMuted=_underlyingUplinkMuted;
@property(retain, nonatomic) NSDictionary *silencingUserInfo; // @synthesize silencingUserInfo=_silencingUserInfo;
@property(readonly, nonatomic) _Bool mediaPlaybackOnExternalDevice; // @synthesize mediaPlaybackOnExternalDevice=_mediaPlaybackOnExternalDevice;
@property(readonly, nonatomic) int originatingUIType; // @synthesize originatingUIType=_originatingUIType;
@property(readonly, nonatomic, getter=isExpanseProvider) _Bool expanseProvider; // @synthesize expanseProvider=_expanseProvider;
- (id)screenShareAttributes;	// IMP=0x0010000000064f8f
- (_Bool)isSharingScreen;	// IMP=0x0010000000064f7f
@property(nonatomic, getter=isConversation) _Bool conversation; // @synthesize conversation=_conversation;
@property(nonatomic) _Bool wantsStagingArea; // @synthesize wantsStagingArea=_wantsStagingArea;
- (_Bool)isOutgoing;	// IMP=0x0010000000064f3f
- (id)imageURL;	// IMP=0x0010000000064f2e
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(copy, nonatomic) TUParticipant *activeRemoteParticipant; // @synthesize activeRemoteParticipant=_activeRemoteParticipant;
- (_Bool)isReRing;	// IMP=0x0010000000064eb7
- (id)imageURLForCXSandboxExtendedURL:(id)arg1;	// IMP=0x00100000000649be
- (id)activeRemoteParticipantForCallUpdate:(id)arg1;	// IMP=0x001000000006489a
- (oneway void)handleAudioSessionActivationStateChangedTo:(id)arg1;	// IMP=0x001000000006480a
- (void)pauseDigitsQueueChanged:(id)arg1;	// IMP=0x001000000006474e
- (void)_sendSoftPauseDigitsIfNecessary;	// IMP=0x00100000000645cf
- (void)_sendDTMFDigits:(id)arg1 type:(long long)arg2;	// IMP=0x001000000006447b
- (id)tuScreenShareAttributesForScreenAttributes:(id)arg1;	// IMP=0x001000000006422d
- (id)cxScreenShareAttributesForCallAttributes:(id)arg1;	// IMP=0x0010000000064056
- (void)dequeueNextPauseDigits;	// IMP=0x0010000000063f9d
- (void)setRemoteVideoPresentationState:(int)arg1;	// IMP=0x0010000000063e53
- (void)setRemoteVideoPresentationSize:(struct CGSize)arg1;	// IMP=0x0010000000063cf5
- (void)playRemoteDTMFToneForKey:(unsigned char)arg1;	// IMP=0x0010000000063bc7
- (void)sendHardPauseDigits;	// IMP=0x00100000000639ec
- (void)setDownlinkMuted:(_Bool)arg1;	// IMP=0x001000000006399b
- (void)setUnderlyingUplinkMuted:(_Bool)arg1 bottomUpMute:(_Bool)arg2;	// IMP=0x001000000006374b
@property(nonatomic) int ttyType; // @synthesize ttyType=_ttyType;
- (void)setUplinkMuted:(_Bool)arg1;	// IMP=0x001000000006351d
- (void)setSharingScreen:(_Bool)arg1 attributes:(id)arg2;	// IMP=0x001000000006321f
- (void)setSharingScreen:(_Bool)arg1;	// IMP=0x00100000000630fe
- (void)setScreenShareAttributes:(id)arg1;	// IMP=0x0010000000062f1a
- (void)setIsSendingVideo:(_Bool)arg1;	// IMP=0x0010000000062e46
- (void)setProviderFailureReasonIfNecessary:(long long)arg1;	// IMP=0x0010000000062d5d
- (void)disconnectWithReason:(int)arg1;	// IMP=0x0010000000062c7f
- (void)ungroup;	// IMP=0x0010000000062bb7
- (void)groupWithOtherCall:(id)arg1;	// IMP=0x0010000000062aa2
- (void)_setIsOnHold:(_Bool)arg1;	// IMP=0x0010000000062986
- (void)unhold;	// IMP=0x00100000000628f2
- (void)hold;	// IMP=0x001000000006285b
- (void)answerWithRequest:(id)arg1;	// IMP=0x00100000000625b0
- (void)joinConversationWithRequest:(id)arg1;	// IMP=0x0010000000061c03
- (id)_dialDelayForRequest:(id)arg1;	// IMP=0x0010000000061bfb
- (void)dialWithRequest:(id)arg1 displayContext:(id)arg2;	// IMP=0x0010000000061786
- (id)startCallActionWithDialRequest:(id)arg1;	// IMP=0x0010000000061441
- (void)setMediaPlaybackOnExternalDevice:(_Bool)arg1;	// IMP=0x001000000006139c
- (void)setMixesVoiceWithMedia:(_Bool)arg1;	// IMP=0x00100000000612f7
@property(nonatomic) long long bluetoothAudioFormat; // @synthesize bluetoothAudioFormat=_bluetoothAudioFormat;
- (void)setTTYType:(int)arg1;	// IMP=0x0010000000061146
- (void)setScreening:(_Bool)arg1;	// IMP=0x0010000000061013
- (void)setEndpointOnCurrentDevice:(_Bool)arg1;	// IMP=0x0010000000060f23
- (void)setDateConnected:(id)arg1;	// IMP=0x0010000000060df3
@property(copy, nonatomic) NSUUID *callGroupUUID;
@property(nonatomic, getter=isVideo) _Bool video; // @synthesize video=_video;
- (void)setOutgoing:(_Bool)arg1;	// IMP=0x00100000000609f6
- (_Bool)usesSystemMuting;	// IMP=0x0010000000060923
- (_Bool)accessoryButtonEventsEnabled;	// IMP=0x00100000000608df
- (long long)transmissionMode;	// IMP=0x001000000006088a
- (long long)serviceStatus;	// IMP=0x0010000000060835
- (long long)outputAudioPowerSpectrumToken;	// IMP=0x001000000006075f
- (long long)inputAudioPowerSpectrumToken;	// IMP=0x0010000000060689
- (unsigned long long)initialLinkType;	// IMP=0x00100000000605b3
- (_Bool)isDownlinkMuted;	// IMP=0x0010000000060568
- (_Bool)isUplinkMuted;	// IMP=0x00100000000604c7
- (_Bool)isSendingVideo;	// IMP=0x00100000000604b5
- (_Bool)isDomestic;	// IMP=0x00100000000602de
- (_Bool)isInternational;	// IMP=0x001000000005ff86
- (int)hardPauseDigitsState;	// IMP=0x001000000005fece
- (id)hardPauseDigits;	// IMP=0x001000000005fdf1
- (_Bool)hasEnded;	// IMP=0x001000000005fdbe
- (_Bool)hasConnected;	// IMP=0x001000000005fd8b
- (_Bool)hasStartedConnecting;	// IMP=0x001000000005fd58
- (int)callStatusFromUnderlyingSource;	// IMP=0x001000000005fcb7
- (id)provider;	// IMP=0x001000000005fc37
@property(readonly, nonatomic) LSApplicationRecord *applicationRecord;
- (id)conversationID;	// IMP=0x001000000005fb84
- (_Bool)isMutuallyExclusiveCall;	// IMP=0x001000000005fafc
- (_Bool)shouldSuppressInCallUI;	// IMP=0x001000000005fab8
- (_Bool)prefersExclusiveAccessToCellularNetwork;	// IMP=0x001000000005fa74
- (_Bool)mayRequireBreakBeforeMake;	// IMP=0x001000000005fa30
- (id)remoteParticipantHandles;	// IMP=0x001000000005f92f
- (id)handoffActivityUserInfo;	// IMP=0x001000000005f81f
- (id)handoffDynamicIdentifier;	// IMP=0x001000000005f7a5
- (_Bool)supportsEmergencyFallback;	// IMP=0x001000000005f761
- (_Bool)isFailureExpected;	// IMP=0x001000000005f71d
- (_Bool)isEmergency;	// IMP=0x001000000005f6d9
- (_Bool)supportsTTYWithVoice;	// IMP=0x001000000005f649
- (_Bool)isOneToOneModeEnabled;	// IMP=0x001000000005f5b9
- (id)providerContext;	// IMP=0x001000000005f569
@property(readonly, nonatomic) _Bool ignoresBluetoothDeviceUID;
@property(readonly, nonatomic) _Bool mixesVoiceWithMedia; // @synthesize mixesVoiceWithMedia=_mixesVoiceWithMedia;
- (long long)soundRegion;	// IMP=0x001000000005f492
- (_Bool)needsManualInCallSounds;	// IMP=0x001000000005f433
- (id)audioMode;	// IMP=0x001000000005f35e
- (id)audioCategory;	// IMP=0x001000000005f289
@property(readonly, nonatomic) AVAudioSession *proxyAVAudioSession;
- (long long)audioInterruptionOperationMode;	// IMP=0x001000000005f16c
- (long long)audioInterruptionProviderType;	// IMP=0x001000000005f113
- (id)activeRemoteParticipants;	// IMP=0x001000000005f017
- (id)localSenderIdentityAccountUUID;	// IMP=0x001000000005ef1e
- (id)localSenderIdentityUUID;	// IMP=0x001000000005eece
- (id)isoCountryCode;	// IMP=0x000000000005ee7e
- (_Bool)isRemoteUplinkMuted;	// IMP=0x001000000005ee3a
- (long long)videoStreamToken;	// IMP=0x001000000005edf6
- (_Bool)isThirdPartyVideo;	// IMP=0x001000000005ed70
- (_Bool)isBlocked;	// IMP=0x001000000005ecc6
- (_Bool)isUsingBaseband;	// IMP=0x001000000005ebdb
- (id)handle;	// IMP=0x001000000005e987
- (id)callHistoryIdentifier;	// IMP=0x001000000005e89f
- (_Bool)hasBeenRedirected;	// IMP=0x001000000005e85b
- (id)callerNameFromNetwork;	// IMP=0x001000000005e7bb
- (long long)providerEndedReason;	// IMP=0x001000000005e777
- (long long)providerErrorCode;	// IMP=0x001000000005e733
- (id)endedReasonUserInfo;	// IMP=0x001000000005e6d4
- (void)updateForDisconnection;	// IMP=0x001000000005d6a7
- (int)_switchFromFailureReasonToDisconnectedReason:(long long)arg1;	// IMP=0x001000000005d597
- (void)updateWithCallUpdate:(id)arg1 notifyDelegate:(_Bool)arg2;	// IMP=0x001000000005c84d
- (void)updateWithCallUpdate:(id)arg1;	// IMP=0x001000000005c836
- (void)systemMuteStatusChanged:(id)arg1;	// IMP=0x001000000005c2a9
- (void)performUplinkMuted:(_Bool)arg1;	// IMP=0x001000000005c1fd
- (void)dealloc;	// IMP=0x001000000005c160
- (id)initWithHandoffContext:(id)arg1 backingCallSource:(id)arg2;	// IMP=0x001000000005c03e
- (id)initOutgoingWithJoinConversationRequest:(id)arg1;	// IMP=0x001000000005bd26
- (id)initOutgoingWithRequestedStartCallAction:(id)arg1 backingCallSource:(id)arg2;	// IMP=0x001000000005bbca
- (id)initOutgoingWithDialRequest:(id)arg1 configuration:(id)arg2;	// IMP=0x001000000005ba7a
- (id)initOutgoingWithDialRequest:(id)arg1;	// IMP=0x001000000005b951
- (id)initOutgoingWithUpdate:(id)arg1 callUUID:(id)arg2 backingCallSource:(id)arg3 isExpanseProvider:(_Bool)arg4;	// IMP=0x001000000005b84c
- (id)initOutgoingWithUniqueProxyIdentifier:(id)arg1 backingCallSourceIdentifier:(id)arg2 callUpdate:(id)arg3 isVideo:(_Bool)arg4 endpointOnCurrentDevice:(_Bool)arg5 originatingUIType:(int)arg6 configuration:(id)arg7;	// IMP=0x001000000005b54c
- (id)initOutgoingWithUniqueProxyIdentifier:(id)arg1 backingCallSourceIdentifier:(id)arg2 callUpdate:(id)arg3 isVideo:(_Bool)arg4 endpointOnCurrentDevice:(_Bool)arg5 originatingUIType:(int)arg6;	// IMP=0x001000000005b432
- (id)initIncomingWithBackingCallSource:(id)arg1 UUID:(id)arg2 update:(id)arg3;	// IMP=0x001000000005b240
- (id)initWithUniqueProxyIdentifier:(id)arg1 configuration:(id)arg2;	// IMP=0x001000000005ae1f
- (id)initWithUniqueProxyIdentifier:(id)arg1 endpointOnCurrentDevice:(_Bool)arg2;	// IMP=0x001000000005ad74

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

