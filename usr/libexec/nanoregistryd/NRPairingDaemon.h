//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE, NRLocalPropertyMonitor, NRMutableDevice, NRRemoteObjectClassC, NSError, NSLock, NSMutableArray, NSNumber, NSObject, NSString, NSUUID, NSXPCConnection, NSXPCListener;
@protocol OS_dispatch_queue;

@interface NRPairingDaemon
{
    _Bool _initRemoteProperties;	// 8 = 0x8
    _Bool _isPairingOrUnpairing;	// 9 = 0x9
    _Bool _mirrorOfIsPaired;	// 10 = 0xa
    unsigned int _xpcTransactionHasBegun;	// 12 = 0xc
    int _idsSwitchRetryCounter;	// 16 = 0x10
    int _syncAdviceNotifyToken;	// 20 = 0x14
    NSMutableArray *_xpcClients;	// 24 = 0x18
    NSXPCListener *_xpcListener;	// 32 = 0x20
    NSXPCConnection *_xpcLaunchDConnection;	// 40 = 0x28
    NRLocalPropertyMonitor *_localProperties;	// 48 = 0x30
    NSLock *_xpcTransactionTimerLock;	// 56 = 0x38
    NRRemoteObjectClassC *_idsServiceClassC;	// 64 = 0x40
    long long _maxPairingCompatibilityVersion;	// 72 = 0x48
    long long _minPairingCompatibilityVersion;	// 80 = 0x50
    MISSING_TYPE *_switchCompletionBlockError;	// 88 = 0x58
    NSNumber *_lastDaemonState;	// 96 = 0x60
    NRMutableDevice *_mirrorOfActiveDevice;	// 104 = 0x68
    NSUUID *_mirrorOfActiveDeviceID;	// 112 = 0x70
}

+ (id)sharedInstance;	// IMP=0x002000000000ee37
+ (void)updateActiveFlag:(_Bool)arg1;	// IMP=0x0010000000008ec3
+ (Class)proxyClass;	// IMP=0x0010000000008ca5
- (void).cxx_destruct;	// IMP=0x0020000000012ed8
@property(nonatomic) _Bool mirrorOfIsPaired; // @synthesize mirrorOfIsPaired=_mirrorOfIsPaired;
@property(retain, nonatomic) NSUUID *mirrorOfActiveDeviceID; // @synthesize mirrorOfActiveDeviceID=_mirrorOfActiveDeviceID;
@property(retain, nonatomic) NRMutableDevice *mirrorOfActiveDevice; // @synthesize mirrorOfActiveDevice=_mirrorOfActiveDevice;
@property(nonatomic) int syncAdviceNotifyToken; // @synthesize syncAdviceNotifyToken=_syncAdviceNotifyToken;
@property(nonatomic) _Bool isPairingOrUnpairing; // @synthesize isPairingOrUnpairing=_isPairingOrUnpairing;
@property(retain, nonatomic) NSNumber *lastDaemonState; // @synthesize lastDaemonState=_lastDaemonState;
@property(nonatomic) int idsSwitchRetryCounter; // @synthesize idsSwitchRetryCounter=_idsSwitchRetryCounter;
@property(retain, nonatomic) NSError *switchCompletionBlockError; // @synthesize switchCompletionBlockError=_switchCompletionBlockError;
@property(nonatomic) long long minPairingCompatibilityVersion; // @synthesize minPairingCompatibilityVersion=_minPairingCompatibilityVersion;
@property(nonatomic) long long maxPairingCompatibilityVersion; // @synthesize maxPairingCompatibilityVersion=_maxPairingCompatibilityVersion;
@property(nonatomic) _Bool initRemoteProperties; // @synthesize initRemoteProperties=_initRemoteProperties;
@property(retain, nonatomic) NRRemoteObjectClassC *idsServiceClassC; // @synthesize idsServiceClassC=_idsServiceClassC;
@property(nonatomic) unsigned int xpcTransactionHasBegun; // @synthesize xpcTransactionHasBegun=_xpcTransactionHasBegun;
@property(retain, nonatomic) NSLock *xpcTransactionTimerLock; // @synthesize xpcTransactionTimerLock=_xpcTransactionTimerLock;
@property(retain, nonatomic) NRLocalPropertyMonitor *localProperties; // @synthesize localProperties=_localProperties;
@property(retain, nonatomic) NSXPCConnection *xpcLaunchDConnection; // @synthesize xpcLaunchDConnection=_xpcLaunchDConnection;
@property(retain, nonatomic) NSXPCListener *xpcListener; // @synthesize xpcListener=_xpcListener;
@property(retain, nonatomic) NSMutableArray *xpcClients; // @synthesize xpcClients=_xpcClients;
- (void)xpcUpdateWatchBuddyStage:(unsigned int)arg1 forPairingID:(id)arg2;	// IMP=0x0010000000012c5c
- (void)xpcWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012c56
- (void)xpcSetWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012c50
- (void)xpcClearWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012c4a
- (void)xpcSwitchIndex:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012c1b
- (void)xpcWatchBuddyCompletedSetupSteps:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012c05
- (void)xpcPairingClientSetPairingParentName:(id)arg1 pairingParentAltDSID:(id)arg2 forPairingID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000012bef
- (void)xpcPairingClientSetAltAccountName:(id)arg1 altDSID:(id)arg2 forPairingID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000012bd9
- (void)xpcIsAssertionActive:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000012bc1
- (void)xpcGetInitialSyncCompletedForPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000012ba9
- (void)xpcGetMigrationCountForPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000012b91
- (void)xpcGetLastSwitchIndex:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012b79
- (void)xpcIsPhoneReadyToMigrateDevice:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000012b67
- (void)xpcClearRecoveryFlagWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012b15
- (void)xpcFakePairedSyncIsCompleteWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012ac3
- (void)xpcCheckIfFlaggedForRecoveryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012aab
- (void)xpcSetMigrationConsented:(_Bool)arg1 forDeviceID:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000012a7c
- (void)xpcRetrieveSecureProperties:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x0010000000012a4d
- (void)xpcGetDiffSinceTokenValue:(unsigned long long)arg1 getSecureProperties:(_Bool)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000012a1e
- (void)xpcGetDeviceCollectionWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000129ef
- (void)xpcGetChangeHistoryWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000129c0
- (void)xpcDeviceIDAtSwitchIndex:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000012991
- (void)xpcClientInfo:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012962
- (void)xpcApplyDiff:(id)arg1 withSecureProperties:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x0010000000012933
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *pairingQueue;
- (void)child:(id)arg1 didApplyDiff:(id)arg2;	// IMP=0x00100000000128d6
- (_Bool)setPairingClientCrashMonitoringCache:(_Bool)arg1 proxy:(id)arg2;	// IMP=0x00100000000128ce
- (void)proxyWillInvalidateSwitchAssertion:(id)arg1;	// IMP=0x00100000000128c8
- (void)proxyWillTakeSwitchAssertion:(id)arg1;	// IMP=0x00100000000128c2
- (void)proxyWillEndPushing:(id)arg1;	// IMP=0x00100000000128bc
- (void)proxyWillEndDiscovering:(id)arg1;	// IMP=0x00100000000128b6
- (void)proxyWillEndAdvertising:(id)arg1;	// IMP=0x00100000000128b0
- (void)proxyWillBeginUnpairing:(id)arg1;	// IMP=0x00100000000128aa
- (void)proxyWillBeginPushing:(id)arg1;	// IMP=0x00100000000128a4
- (void)proxyWillBeginPairing:(id)arg1;	// IMP=0x001000000001289e
- (void)proxyWillBeginDiscovering:(id)arg1;	// IMP=0x0010000000012898
- (void)proxyWillBeginAdvertising:(id)arg1;	// IMP=0x0010000000012892
- (void)proxyWillAbortPairing:(id)arg1;	// IMP=0x001000000001288c
- (void)proxyRequestsSuspensionOfCrashMonitoring:(id)arg1;	// IMP=0x0010000000012886
- (void)proxyRequestsResumptionOfCrashMonitoring:(id)arg1;	// IMP=0x0010000000012880
- (void)remoteObject:(id)arg1 receivedCheckTermsEvent:(id)arg2 fromIDSBTUUID:(id)arg3 responseBlock:(CDUnknownBlockType)arg4;	// IMP=0x0010000000012868
- (void)remoteObject:(id)arg1 receivedAddTermsEvent:(id)arg2 fromIDSBTUUID:(id)arg3 responseBlock:(CDUnknownBlockType)arg4;	// IMP=0x0010000000012852
- (void)remoteObject:(id)arg1 receivedPropertyRequestWithRequestIdentifier:(id)arg2 fromIDSBTUUID:(id)arg3;	// IMP=0x00100000000127c6
- (void)remoteObject:(id)arg1 receivedPropertyChanges:(id)arg2 isAllProperties:(_Bool)arg3 fromIDSBTUUID:(id)arg4;	// IMP=0x0010000000012197
- (void)remoteObjectIDSServiceUnavailable:(id)arg1;	// IMP=0x0010000000012191
- (void)remoteObjectIDSServiceAvailable:(id)arg1 withIDSDevice:(id)arg2;	// IMP=0x001000000001218b
- (void)remoteObjectAllowedTrafficClassifiersDidReset:(id)arg1;	// IMP=0x0010000000012185
- (void)initIDSAsyncWithBlock:(CDUnknownBlockType)arg1 shouldConnect:(_Bool)arg2;	// IMP=0x0010000000011d64
- (void)connectIDSDuringPairing;	// IMP=0x0010000000011c86
- (_Bool)_xpcConnectToNanoRegistryLaunchDService;	// IMP=0x0010000000011b10
- (void)notifyStateChangedWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000113bf
- (void)setActiveDeviceWithPairingID:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000000111cf
- (void)setIsPairedAndIsSetup:(_Bool)arg1 withPairingID:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000010b9c
- (void)sendPropertyRequestWithTimeout:(id)arg1 toDeviceID:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000010657
- (void)_updateDeviceID:(id)arg1 withProperties:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000000ff9a
- (void)idsSendProperties:(id)arg1 thisIsAllOfThem:(_Bool)arg2;	// IMP=0x001000000000fd90
- (void)localMonitor:(id)arg1 propertiesDidChange:(id)arg2 thisIsAllOfThem:(_Bool)arg3;	// IMP=0x001000000000fd78
- (void)deleteLocalPairingStore:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000f953
- (void)createLocalPairingStore:(id)arg1 andNotifyPairingBeginning:(_Bool)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000000f4ba
- (void)createLocalPairingStore:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000f4a3
- (void)enableDaemonsWithBool:(_Bool)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000f1f0
- (void)pollProperties;	// IMP=0x001000000000f1de
- (void)refreshPropertyCache;	// IMP=0x001000000000f0ca
- (id)makeLocalPairingStorePairingID:(id)arg1;	// IMP=0x001000000000efa0
- (id)getLocalPairingStorePairingID:(id)arg1;	// IMP=0x001000000000eebc
- (_Bool)isInternalInstall;	// IMP=0x001000000000ee2d
- (void)normalizeDaemonStateWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000ea62
- (void)normalizeDaemonState;	// IMP=0x001000000000e904
- (unsigned long long)readNotifyToken:(int)arg1;	// IMP=0x001000000000e8d3
- (void)updateNotifyToken:(int)arg1 withValue:(unsigned long long)arg2 withNotificationName:(id)arg3;	// IMP=0x001000000000e762
- (int)getNotifyTokenWithName:(id)arg1;	// IMP=0x001000000000e65a
- (void)initLocalProperties;	// IMP=0x001000000000e5de
- (void)ackXPCEvents;	// IMP=0x001000000000e3a1
- (id)init;	// IMP=0x001000000000e0c6
- (void)xpcWaitForWatchPairingExtendedMetadataForAdvertisedName:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000e0b4
- (void)xpcUnpairWithDeviceID:(id)arg1 withOptions:(id)arg2 operationHasBegun:(CDUnknownBlockType)arg3;	// IMP=0x001000000000e0a4
- (void)xpcTriggerVersion4Workaround;	// IMP=0x001000000000e09e
- (void)xpcSwitchActiveDeviceWithDeviceID:(id)arg1 withAssertionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000e08c
- (void)xpcSwitchActiveDeviceWithDeviceID:(id)arg1 isMagicSwitch:(_Bool)arg2 operationHasCompleted:(CDUnknownBlockType)arg3;	// IMP=0x001000000000e07c
- (void)xpcSuspendPairingClientCrashMonitoring:(CDUnknownBlockType)arg1;	// IMP=0x001000000000e071
- (void)xpcSubmitServerRequestReportWithRequestType:(id)arg1 duration:(double)arg2 errorCode:(unsigned int)arg3 block:(CDUnknownBlockType)arg4;	// IMP=0x001000000000e066
- (void)xpcSubmitRTCPairingMetricForMetricID:(id)arg1 withSuccess:(CDUnknownBlockType)arg2;	// IMP=0x001000000000df86
- (void)xpcSubmitAlbertPairingReport:(CDUnknownBlockType)arg1;	// IMP=0x001000000000df7b
- (void)xpcStopWatchSetupPushWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000df70
- (void)xpcStartWatchSetupPushWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000df65
- (void)xpcScanForMigratableWatchesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000df5a
- (void)xpcRetriggerUnpairInfoDialogWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000df4f
- (void)xpcResumePairingClientCrashMonitoring:(CDUnknownBlockType)arg1;	// IMP=0x001000000000df44
- (void)xpcPutMigrationChallengeCharacteristicWriteData:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000df34
- (void)xpcPingActiveGizmoWithPriority:(int)arg1 withMessageSize:(unsigned long long)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000000df1e
- (void)xpcPairingShouldContinue;	// IMP=0x001000000000df18
- (void)xpcPairingClientDidEnterPhase:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000df0d
- (void)xpcNotifyPasscode:(id)arg1 withDeviceID:(id)arg2;	// IMP=0x001000000000df07
- (void)xpcNotifyActivationCompleted:(id)arg1 withSuccess:(_Bool)arg2;	// IMP=0x001000000000df01
- (void)xpcKeepPhoneUnlockedInternalTestSPI:(CDUnknownBlockType)arg1;	// IMP=0x001000000000def6
- (void)xpcInvalidateSwitchAssertionWithIdentifier:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x001000000000dee6
- (void)xpcGizmoPasscodeAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;	// IMP=0x001000000000ded6
- (void)xpcGizmoOOBAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;	// IMP=0x001000000000dec6
- (void)xpcGetMigrationPairingCharacteristicReadDataWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000deb6
- (void)xpcGetLastMigrationRequestPhoneNameWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dea6
- (void)xpcEnterCompatibilityState:(unsigned short)arg1 withDeviceID:(id)arg2;	// IMP=0x001000000000dea0
- (void)xpcEndDiscoveryWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000de95
- (void)xpcCompanionPasscodePairWithDeviceID:(id)arg1 withOptions:(id)arg2 operationHasBegun:(CDUnknownBlockType)arg3;	// IMP=0x001000000000de85
- (void)xpcCompanionOOBDiscoverAndPairWithName:(id)arg1 withOutOfBandPairingKey:(id)arg2 withOptions:(id)arg3 operationHasBegun:(CDUnknownBlockType)arg4;	// IMP=0x001000000000de75
- (void)xpcBeginMigrationWithDeviceID:(id)arg1 passcode:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000000de6a
- (void)xpcBeginMigrationWithDeviceID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000de5a
- (void)xpcBeginMigrationWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000de4a
- (void)xpcBeginDiscoveryWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000de3f
- (void)xpcActiveDeviceAssertions:(CDUnknownBlockType)arg1;	// IMP=0x001000000000de2f
- (void)xpcAbortPairingReason:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000de24
- (void)xpcSwitchToSimulator:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000d36b
- (void)xpcUnpairWithSimulator:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000c74b
- (void)xpcPairWithSimulator:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000a9d9
- (id);	// IMP=0x001000000000a97c
- (id)_idsBTUUIDForDevice:(id)arg1;	// IMP=0x001000000000a96a
- (id)_activeDeviceBTIDSUUID;	// IMP=0x001000000000a8df
- (void)cleanUpDevicesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000a450
- (void)deleteDevice:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000a1ef
- (void)newDeviceForSimulator:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000009b8c
- (void)setUpHistoryCompletionBlocks;	// IMP=0x0010000000009029
- (void)_updateActiveFlag:(id)arg1;	// IMP=0x0010000000008cb6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

