//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class APSConnectionHistory, APSCourierConnection, APSCourierConnectionProtocolConnection, APSEnvironment, APSNetworkMonitor, APSNoOpPowerAssertion, APSOutgoingQueue, APSRateLimiter, APSReachabilityHandler, APSServerTimeTracker, CUTPowerAssertion, NSArray, NSCountedSet, NSDate, NSNumber, NSString, NSTimer, PCCarrierBundleHelper, PCPersistentTimer;
@protocol APSCourierConnectionManagerDelegate;

@interface APSCourierConnectionManager : NSObject
{
    NSNumber *_tcpHandshakeTimeMilliseconds[2];	// 8 = 0x8
    NSNumber *_dnsResolutionTimeMilliseconds[2];	// 24 = 0x18
    NSNumber *_tlsHandshakeTimeMilliseconds[2];	// 40 = 0x28
    _Bool _secureHandshakeEnabled[2];	// 56 = 0x38
    NSCountedSet *_consecutiveConnectionFailureReason[2];	// 64 = 0x40
    NSNumber *_connectionTime[2];	// 80 = 0x50
    APSCourierConnectionProtocolConnection *_protocolConnections[2];	// 96 = 0x60
    NSNumber *_maxMessageSizes[2];	// 112 = 0x70
    NSNumber *_maxLargeMessageSizes[2];	// 128 = 0x80
    NSTimer *_filterMessageTimer[2];	// 144 = 0x90
    _Bool _enabled;	// 160 = 0xa0
    _Bool _enableCriticalReliability;	// 161 = 0xa1
    _Bool _pendingPostSuspensionWWANFlush;	// 162 = 0xa2
    _Bool _remainsConnectedWhenWWANSuspends;	// 163 = 0xa3
    _Bool _shouldUseInternet;	// 164 = 0xa4
    _Bool _shouldRun;	// 165 = 0xa5
    _Bool _handlingFailure;	// 166 = 0xa6
    int _interfacePreference;	// 168 = 0xa8
    int _lastPushRAT;	// 172 = 0xac
    int _lastPushLQ;	// 176 = 0xb0
    id <APSCourierConnectionManagerDelegate> _delegate;	// 184 = 0xb8
    APSCourierConnection *_courierConnection;	// 192 = 0xc0
    PCCarrierBundleHelper *_carrierBundleHelper;	// 200 = 0xc8
    unsigned long long _consecutiveConnectionFailureCount;	// 208 = 0xd0
    unsigned long long _consecutiveTLSConnectionFailureCount;	// 216 = 0xd8
    PCPersistentTimer *_delayedReconnectTimer;	// 224 = 0xe0
    NSDate *_lastConnectionAttempt;	// 232 = 0xe8
    APSNetworkMonitor *_networkMonitor;	// 240 = 0xf0
    unsigned long long _cmaType;	// 248 = 0xf8
    unsigned long long _lastIPCachingPercentage;	// 256 = 0x100
    APSEnvironment *_environment;	// 264 = 0x108
    double _lastIPCachingTTLSeconds;	// 272 = 0x110
    NSTimer *_resetInterfacePreferenceTimer;	// 280 = 0x118
    PCPersistentTimer *_pendingMessageReconnectTimer;	// 288 = 0x120
    double _delayedReconnectIntervalWatchWiFi;	// 296 = 0x128
    double _delayedReconnectInterval;	// 304 = 0x130
    double _delayedReconnectMaxInterval;	// 312 = 0x138
    double _delayedReconnectTLSInterval;	// 320 = 0x140
    long long _delayedReconnectMinIntervalTrigger;	// 328 = 0x148
    long long _delayedReconnectMaxIntervalTrigger;	// 336 = 0x150
    long long _delayedReconnectTLSIntervalTrigger;	// 344 = 0x158
    PCPersistentTimer *_delayedSuspendKeepAliveTimer;	// 352 = 0x160
    double _startedDarkWake;	// 360 = 0x168
    unsigned long long _findKeepAliveProxyInterfaceFailureCount;	// 368 = 0x170
    unsigned long long _forceKeepAliveProxyInterfaceFailureCount;	// 376 = 0x178
    unsigned long long _obtainKeepAliveProxyFailureCount;	// 384 = 0x180
    APSConnectionHistory *_connectionHistory;	// 392 = 0x188
    NSNumber *_serverMaxKeepAliveInterval;	// 400 = 0x190
    NSNumber *_serverExpectedKeepAliveInterval;	// 408 = 0x198
    NSNumber *_serverMinKeepAliveInterval;	// 416 = 0x1a0
    double _delayedSuspendKeepAliveInterval;	// 424 = 0x1a8
    APSRateLimiter *_suspendToggleHourlyLimiter;	// 432 = 0x1b0
    APSRateLimiter *_suspendToggleDailyLimiter;	// 440 = 0x1b8
    long long _suspendToggleHourlyLimit;	// 448 = 0x1c0
    long long _suspendToggleDailyLimit;	// 456 = 0x1c8
    double _keepAliveV2TimeDriftMaximum;	// 464 = 0x1d0
    double _lastClientRequestedKeepaliveTime;	// 472 = 0x1d8
    CUTPowerAssertion *_delayedKeepAlivePowerAssertion;	// 480 = 0x1e0
    NSString *_latestGeoRegion;	// 488 = 0x1e8
    double _filterMessageTimeout;	// 496 = 0x1f0
    struct __SecIdentity *_clientIdentity;	// 504 = 0x1f8
    NSTimer *_criticalFlushTimer;	// 512 = 0x200
    PCPersistentTimer *_criticalReliabilityTimer;	// 520 = 0x208
    CUTPowerAssertion *_criticalReliabilityPowerAssertion;	// 528 = 0x210
    APSNoOpPowerAssertion *_waitForConnectionAttemptsPowerAssertion;	// 536 = 0x218
    APSReachabilityHandler *_reachabilityHandler;	// 544 = 0x220
    APSServerTimeTracker *_serverTimeTracker;	// 552 = 0x228
    APSOutgoingQueue *_outgoingSendMessageQueue;	// 560 = 0x230
    APSOutgoingQueue *_outgoingConnectMessageQueue;	// 568 = 0x238
    APSOutgoingQueue *_tokenGenerateResponseQueue;	// 576 = 0x240
    APSOutgoingQueue *_outgoingFilterQueue;	// 584 = 0x248
}

- (void).cxx_destruct;	// IMP=0x00200000000b0c31
@property(nonatomic) int lastPushLQ; // @synthesize lastPushLQ=_lastPushLQ;
@property(nonatomic) int lastPushRAT; // @synthesize lastPushRAT=_lastPushRAT;
@property(retain, nonatomic) APSOutgoingQueue *outgoingFilterQueue; // @synthesize outgoingFilterQueue=_outgoingFilterQueue;
@property(retain, nonatomic) APSOutgoingQueue *tokenGenerateResponseQueue; // @synthesize tokenGenerateResponseQueue=_tokenGenerateResponseQueue;
@property(retain, nonatomic) APSOutgoingQueue *outgoingConnectMessageQueue; // @synthesize outgoingConnectMessageQueue=_outgoingConnectMessageQueue;
@property(retain, nonatomic) APSOutgoingQueue *outgoingSendMessageQueue; // @synthesize outgoingSendMessageQueue=_outgoingSendMessageQueue;
@property(retain, nonatomic) APSServerTimeTracker *serverTimeTracker; // @synthesize serverTimeTracker=_serverTimeTracker;
@property(retain, nonatomic) APSReachabilityHandler *reachabilityHandler; // @synthesize reachabilityHandler=_reachabilityHandler;
@property(retain, nonatomic) APSNoOpPowerAssertion *waitForConnectionAttemptsPowerAssertion; // @synthesize waitForConnectionAttemptsPowerAssertion=_waitForConnectionAttemptsPowerAssertion;
@property(retain, nonatomic) CUTPowerAssertion *criticalReliabilityPowerAssertion; // @synthesize criticalReliabilityPowerAssertion=_criticalReliabilityPowerAssertion;
@property(retain, nonatomic) PCPersistentTimer *criticalReliabilityTimer; // @synthesize criticalReliabilityTimer=_criticalReliabilityTimer;
@property(retain, nonatomic) NSTimer *criticalFlushTimer; // @synthesize criticalFlushTimer=_criticalFlushTimer;
@property(nonatomic) _Bool handlingFailure; // @synthesize handlingFailure=_handlingFailure;
@property(nonatomic) _Bool shouldRun; // @synthesize shouldRun=_shouldRun;
@property(nonatomic) _Bool shouldUseInternet; // @synthesize shouldUseInternet=_shouldUseInternet;
@property(nonatomic) struct __SecIdentity *clientIdentity; // @synthesize clientIdentity=_clientIdentity;
@property(nonatomic) double filterMessageTimeout; // @synthesize filterMessageTimeout=_filterMessageTimeout;
@property(retain, nonatomic) NSString *latestGeoRegion; // @synthesize latestGeoRegion=_latestGeoRegion;
@property(retain, nonatomic) CUTPowerAssertion *delayedKeepAlivePowerAssertion; // @synthesize delayedKeepAlivePowerAssertion=_delayedKeepAlivePowerAssertion;
@property(nonatomic) double lastClientRequestedKeepaliveTime; // @synthesize lastClientRequestedKeepaliveTime=_lastClientRequestedKeepaliveTime;
@property(nonatomic) double keepAliveV2TimeDriftMaximum; // @synthesize keepAliveV2TimeDriftMaximum=_keepAliveV2TimeDriftMaximum;
@property(nonatomic) long long suspendToggleDailyLimit; // @synthesize suspendToggleDailyLimit=_suspendToggleDailyLimit;
@property(nonatomic) long long suspendToggleHourlyLimit; // @synthesize suspendToggleHourlyLimit=_suspendToggleHourlyLimit;
@property(retain, nonatomic) APSRateLimiter *suspendToggleDailyLimiter; // @synthesize suspendToggleDailyLimiter=_suspendToggleDailyLimiter;
@property(retain, nonatomic) APSRateLimiter *suspendToggleHourlyLimiter; // @synthesize suspendToggleHourlyLimiter=_suspendToggleHourlyLimiter;
@property(nonatomic) double delayedSuspendKeepAliveInterval; // @synthesize delayedSuspendKeepAliveInterval=_delayedSuspendKeepAliveInterval;
@property(retain, nonatomic) NSNumber *serverMinKeepAliveInterval; // @synthesize serverMinKeepAliveInterval=_serverMinKeepAliveInterval;
@property(retain, nonatomic) NSNumber *serverExpectedKeepAliveInterval; // @synthesize serverExpectedKeepAliveInterval=_serverExpectedKeepAliveInterval;
@property(retain, nonatomic) NSNumber *serverMaxKeepAliveInterval; // @synthesize serverMaxKeepAliveInterval=_serverMaxKeepAliveInterval;
@property(retain, nonatomic) APSConnectionHistory *connectionHistory; // @synthesize connectionHistory=_connectionHistory;
@property(nonatomic) unsigned long long obtainKeepAliveProxyFailureCount; // @synthesize obtainKeepAliveProxyFailureCount=_obtainKeepAliveProxyFailureCount;
@property(nonatomic) unsigned long long forceKeepAliveProxyInterfaceFailureCount; // @synthesize forceKeepAliveProxyInterfaceFailureCount=_forceKeepAliveProxyInterfaceFailureCount;
@property(nonatomic) unsigned long long findKeepAliveProxyInterfaceFailureCount; // @synthesize findKeepAliveProxyInterfaceFailureCount=_findKeepAliveProxyInterfaceFailureCount;
@property(nonatomic) double startedDarkWake; // @synthesize startedDarkWake=_startedDarkWake;
@property(nonatomic) _Bool remainsConnectedWhenWWANSuspends; // @synthesize remainsConnectedWhenWWANSuspends=_remainsConnectedWhenWWANSuspends;
@property(nonatomic) _Bool pendingPostSuspensionWWANFlush; // @synthesize pendingPostSuspensionWWANFlush=_pendingPostSuspensionWWANFlush;
@property(retain, nonatomic) PCPersistentTimer *delayedSuspendKeepAliveTimer; // @synthesize delayedSuspendKeepAliveTimer=_delayedSuspendKeepAliveTimer;
@property(nonatomic) long long delayedReconnectTLSIntervalTrigger; // @synthesize delayedReconnectTLSIntervalTrigger=_delayedReconnectTLSIntervalTrigger;
@property(nonatomic) long long delayedReconnectMaxIntervalTrigger; // @synthesize delayedReconnectMaxIntervalTrigger=_delayedReconnectMaxIntervalTrigger;
@property(nonatomic) long long delayedReconnectMinIntervalTrigger; // @synthesize delayedReconnectMinIntervalTrigger=_delayedReconnectMinIntervalTrigger;
@property(nonatomic) double delayedReconnectTLSInterval; // @synthesize delayedReconnectTLSInterval=_delayedReconnectTLSInterval;
@property(nonatomic) double delayedReconnectMaxInterval; // @synthesize delayedReconnectMaxInterval=_delayedReconnectMaxInterval;
@property(nonatomic) double delayedReconnectInterval; // @synthesize delayedReconnectInterval=_delayedReconnectInterval;
@property(nonatomic) double delayedReconnectIntervalWatchWiFi; // @synthesize delayedReconnectIntervalWatchWiFi=_delayedReconnectIntervalWatchWiFi;
@property(retain, nonatomic) PCPersistentTimer *pendingMessageReconnectTimer; // @synthesize pendingMessageReconnectTimer=_pendingMessageReconnectTimer;
@property(nonatomic) _Bool enableCriticalReliability; // @synthesize enableCriticalReliability=_enableCriticalReliability;
@property(retain, nonatomic) NSTimer *resetInterfacePreferenceTimer; // @synthesize resetInterfacePreferenceTimer=_resetInterfacePreferenceTimer;
@property(nonatomic) double lastIPCachingTTLSeconds; // @synthesize lastIPCachingTTLSeconds=_lastIPCachingTTLSeconds;
@property(nonatomic) int interfacePreference; // @synthesize interfacePreference=_interfacePreference;
@property(retain, nonatomic) APSEnvironment *environment; // @synthesize environment=_environment;
@property(nonatomic) unsigned long long lastIPCachingPercentage; // @synthesize lastIPCachingPercentage=_lastIPCachingPercentage;
@property(nonatomic) unsigned long long cmaType; // @synthesize cmaType=_cmaType;
@property(retain, nonatomic) APSNetworkMonitor *networkMonitor; // @synthesize networkMonitor=_networkMonitor;
@property(retain, nonatomic) NSDate *lastConnectionAttempt; // @synthesize lastConnectionAttempt=_lastConnectionAttempt;
@property(retain, nonatomic) PCPersistentTimer *delayedReconnectTimer; // @synthesize delayedReconnectTimer=_delayedReconnectTimer;
@property(nonatomic) unsigned long long consecutiveTLSConnectionFailureCount; // @synthesize consecutiveTLSConnectionFailureCount=_consecutiveTLSConnectionFailureCount;
@property(nonatomic) unsigned long long consecutiveConnectionFailureCount; // @synthesize consecutiveConnectionFailureCount=_consecutiveConnectionFailureCount;
@property(retain, nonatomic) PCCarrierBundleHelper *carrierBundleHelper; // @synthesize carrierBundleHelper=_carrierBundleHelper;
@property(retain, nonatomic) APSCourierConnection *courierConnection; // @synthesize courierConnection=_courierConnection;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(readonly, nonatomic) id <APSCourierConnectionManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)handleReachabilityChange:(unsigned int)arg1;	// IMP=0x00100000000b0561
- (void)setMaxLargeMessageSize:(id)arg1 forInterface:(long long)arg2;	// IMP=0x00100000000b0517
- (id)maxLargeMessageSizeForInterface:(long long)arg1;	// IMP=0x00100000000b04ab
- (void)setMaxMessageSize:(id)arg1 forInterface:(long long)arg2;	// IMP=0x00100000000b0464
- (id)maxMessageSizeForInterface:(long long)arg1;	// IMP=0x00100000000b03fb
- (void)setConnectionTime:(id)arg1 forInterface:(long long)arg2;	// IMP=0x00100000000b03b4
- (id)connectionTimeForInterface:(long long)arg1;	// IMP=0x00100000000b038f
- (void)appendPrettyStatusToStatusPrinter:(id)arg1;	// IMP=0x00100000000afd76
- (id)JSONDebugState;	// IMP=0x00100000000af7eb
- (id)aps_prettyDescription;	// IMP=0x00100000000af466
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)_switchToKeepAliveProxyInterface;	// IMP=0x00100000000af194
- (_Bool)_neededToSwitchToKeepAliveProxyInterface;	// IMP=0x00100000000af045
- (void)_useInteractivePowerAssertionIfNeededWithReason:(id)arg1;	// IMP=0x00100000000aeee8
- (void)_resetInterfacePreferenceTimerFired:(id)arg1;	// IMP=0x00100000000aed43
- (void)_clearResetInterfacePreferenceTimer;	// IMP=0x00100000000aecfc
- (void)_startResetInterfacePreferenceTimer;	// IMP=0x00100000000aebdb
- (void)prepareForFullWake;	// IMP=0x00100000000ae9f1
- (void)prepareForDarkWake;	// IMP=0x00100000000ae8aa
- (void)prepareForSleep;	// IMP=0x00100000000ae835
- (void)sendMessageTransportAcknowledgeMessageOnInterface:(long long)arg1;	// IMP=0x00100000000ae7e9
@property(readonly, nonatomic) _Bool isKeepAliveProxyConfiguredOnAnyConnection;
- (_Bool)isPiggybacking;	// IMP=0x00100000000ae761
@property(readonly, nonatomic) unsigned int dualChannelState;
- (void)notePush;	// IMP=0x00100000000ae702
- (void)_criticalReliabilityTimerFired;	// IMP=0x00100000000ae653
- (void)refreshCriticalReliabilityTimerWithShortKeepAlive:(_Bool)arg1;	// IMP=0x00100000000ae3dc
- (void)refreshCriticalReliability;	// IMP=0x00100000000ae3c5
- (void)triggerCriticalReliability;	// IMP=0x00100000000ae200
- (void)recalculateCriticalReliability;	// IMP=0x00100000000adf7a
- (void)stopManagerOnInterface:(long long)arg1;	// IMP=0x00100000000adf2e
- (void)setServerSupportsDualMode:(_Bool)arg1;	// IMP=0x00100000000adee4
@property(readonly, nonatomic) _Bool allowedToHaveMultipleOpenInterfaces;
- (unsigned char)redirectCount;	// IMP=0x00100000000ade86
- (void)setKeepAliveV2Supported:(_Bool)arg1 onInterface:(long long)arg2;	// IMP=0x00100000000ade35
- (_Bool)keepAliveV2SupportedOnInterface:(long long)arg1;	// IMP=0x00100000000adde4
- (_Bool)isKeepAliveProxyConfiguredOnAnyInterface;	// IMP=0x00100000000adda0
- (_Bool)isKeepAliveProxyConfiguredOnInterface:(long long)arg1;	// IMP=0x00100000000add4f
- (void)sendConnectMessageWithToken:(id)arg1 state:(int)arg2 presenceFlags:(unsigned int)arg3 metadata:(id)arg4 certificates:(id)arg5 nonce:(id)arg6 signature:(id)arg7 redirectCount:(unsigned char)arg8 withCompletion:(CDUnknownBlockType)arg9 onInterface:(long long)arg10;	// IMP=0x00100000000adb0a
- (void)sendConnectMessageWithToken:(id)arg1 interface:(long long)arg2 activeInterval:(unsigned int)arg3 presenceFlags:(unsigned int)arg4 metadata:(id)arg5 certificates:(id)arg6 nonce:(id)arg7 signature:(id)arg8 redirectCount:(unsigned char)arg9 tcpHandshakeTimeMilliseconds:(double)arg10 dnsResolveTimeMilliseconds:(double)arg11 tlsHandshakeTimeMilliseconds:(double)arg12 consecutiveConnectionFailureReason:(id)arg13 withCompletion:(CDUnknownBlockType)arg14 onInterface:(long long)arg15;	// IMP=0x00100000000ad82b
- (void)sendConnectMessageWithToken:(id)arg1 state:(int)arg2 interface:(long long)arg3 activeInterval:(unsigned int)arg4 presenceFlags:(unsigned int)arg5 metadata:(id)arg6 certificates:(id)arg7 nonce:(id)arg8 signature:(id)arg9 redirectCount:(unsigned char)arg10 withCompletion:(CDUnknownBlockType)arg11 onInterface:(long long)arg12;	// IMP=0x00100000000ad5ca
- (void)sendFilterMessageWithEnabledHashes:(id)arg1 ignoredHashes:(id)arg2 opportunisticHashes:(id)arg3 nonWakingHashes:(id)arg4 pausedHashes:(id)arg5 token:(id)arg6 version:(unsigned long long)arg7 expectsResponse:(_Bool)arg8 onInterface:(long long)arg9 withCompletion:(CDUnknownBlockType)arg10;	// IMP=0x00100000000ad2ae
- (void)sendTaskControlMessageWithMetadata:(id)arg1 messageId:(unsigned long long)arg2 onInterface:(long long)arg3;	// IMP=0x00100000000ad234
@property(readonly, nonatomic) _Bool isAttemptingToReconnect;
- (_Bool)sendMessageWithTopicHash:(id)arg1 identifier:(unsigned long long)arg2 payload:(id)arg3 token:(id)arg4 isPlistFormat:(_Bool)arg5 lastRTT:(id)arg6 onInterface:(long long)arg7 withCompletion:(CDUnknownBlockType)arg8;	// IMP=0x00100000000ad022
- (double)currentKeepAliveIntervalOnInterface:(long long)arg1;	// IMP=0x00100000000acfcb
- (void)sendMessageAcknowledgeMessageWithResponse:(long long)arg1 messageId:(id)arg2 token:(id)arg3 onInterface:(long long)arg4;	// IMP=0x00100000000acf3b
- (_Bool)generationMatches:(unsigned long long)arg1 forInterface:(long long)arg2;	// IMP=0x00100000000acee5
- (void)sendActivityTrackingRequestWithMessageID:(unsigned long long)arg1 pushToken:(id)arg2 salt:(unsigned long long)arg3 trackingFlag:(unsigned int)arg4 timestamp:(unsigned long long)arg5 onInterface:(long long)arg6;	// IMP=0x00100000000ace52
- (void)sendPubSubChannelListWithMetadata:(id)arg1 baseToken:(id)arg2 messageID:(unsigned int)arg3 onInterface:(long long)arg4;	// IMP=0x00100000000acdc2
- (void)sendTokenGenerateMessageWithTopicHash:(id)arg1 baseToken:(id)arg2 appId:(unsigned short)arg3 expirationTTL:(unsigned int)arg4 vapidPublicKeyHash:(id)arg5 type:(long long)arg6 withCompletion:(CDUnknownBlockType)arg7 onInterface:(long long)arg8;	// IMP=0x00100000000acbb1
- (void)sendMessageTracingAckWithTopicHash:(id)arg1 tracingUUID:(id)arg2 status:(int)arg3 token:(id)arg4 onInterface:(long long)arg5;	// IMP=0x00100000000acb01
- (id)_sendOutgoingMessage:(id)arg1 topicHash:(id)arg2 lastRTT:(id)arg3 token:(id)arg4 onInterface:(long long)arg5 withCompletion:(CDUnknownBlockType)arg6;	// IMP=0x00100000000ac16d
- (void)sendSetActiveState:(_Bool)arg1 forInterval:(unsigned int)arg2 onInterface:(long long)arg3;	// IMP=0x00100000000ac10d
- (id)serverHostnameForInterface:(long long)arg1;	// IMP=0x00100000000ac0ae
- (id)serverIPAddressForInterface:(long long)arg1;	// IMP=0x00100000000ac04f
- (void)holdPowerAssertionUntilStreamsQuiesce;	// IMP=0x00100000000ac012
- (_Bool)hasOpenConnectionOnInterface:(long long)arg1;	// IMP=0x00100000000abfc1
- (_Bool)isSuspendedOnInterface:(long long)arg1;	// IMP=0x00100000000abf70
- (_Bool)isConnectedOnInterface:(long long)arg1;	// IMP=0x00100000000abf1f
- (id)tcpInfoDescription;	// IMP=0x00100000000abecf
- (_Bool)didPushCauseWake;	// IMP=0x00100000000abe8b
- (id)currentKeepAliveStateOnInterface:(long long)arg1;	// IMP=0x00100000000abe2c
@property(readonly, nonatomic) unsigned long long countOpenConnections;
@property(readonly, nonatomic) unsigned long long countConnectedInterfaces;
- (_Bool)hasOpenConnection;	// IMP=0x00100000000abd60
- (long long)preferredInterface;	// IMP=0x00100000000abd1c
- (_Bool)isConnected;	// IMP=0x00100000000abcd8
- (void)sendFlushOnAllConnectionshWithPaddingLength:(unsigned long long)arg1;	// IMP=0x00100000000abcc6
- (void)handleConnectionFailureOnInterface:(long long)arg1 forceDelayedReconnect:(_Bool)arg2 withReason:(unsigned int)arg3;	// IMP=0x00100000000abcb4
- (void)performKeepAliveOnInterface:(long long)arg1;	// IMP=0x00100000000abba9
- (void)adjustConnectionsIfNeeded;	// IMP=0x00100000000abad3
- (void)forceAdjustConnections;	// IMP=0x00100000000abaa5
- (void)disconnectAllStreamsWithReason:(unsigned int)arg1;	// IMP=0x00100000000aba93
- (void)disconnectStreamForInterface:(long long)arg1 withReason:(unsigned int)arg2;	// IMP=0x00100000000aba81
- (id)tcpHandshakeTimeMillisecondsOnInterface:(long long)arg1;	// IMP=0x00100000000ab996
- (id)tlsHandshakeTimeMillisecondsOnInterface:(long long)arg1;	// IMP=0x00100000000ab8ab
- (id)dnsResolutionTimeMillisecondsOnInterface:(long long)arg1;	// IMP=0x00100000000ab7c0
@property(readonly, nonatomic) unsigned long long serverTimeInNanoSeconds;
- (void)_dumpLogsForInconsistencyIfNecessary;	// IMP=0x00100000000ab776
- (void)interfaceRadioHotnessChanged:(id)arg1;	// IMP=0x00100000000ab5e8
- (void)interfaceReachabilityChanged:(id)arg1;	// IMP=0x00100000000ab5d6
- (void)interfaceLinkQualityChanged:(id)arg1 previousLinkQuality:(int)arg2;	// IMP=0x00100000000ab464
- (void)networkMonitor:(id)arg1 enableWiFiAssertionForPiggybackConnection:(_Bool)arg2;	// IMP=0x00100000000ab38b
- (void)networkMonitorWiFiBecameAssociated:(id)arg1;	// IMP=0x00100000000ab2de
- (void)networkMonitor:(id)arg1 evaluateDualModeState:(_Bool)arg2;	// IMP=0x00100000000ab169
- (void)updateKeepAliveInterval:(double)arg1;	// IMP=0x00100000000ab0a8
- (void)_submitKeepAliveSucceededAWDonInterface:(long long)arg1;	// IMP=0x00100000000aac8d
- (void)_handleKeepAliveResponseMessage:(id)arg1 onInterface:(long long)arg2;	// IMP=0x00100000000aa764
- (void)_resetKeepAliveOnInterface:(long long)arg1;	// IMP=0x00100000000aa6e8
- (void)_requestKeepAlive:(_Bool)arg1 orConnection:(_Bool)arg2;	// IMP=0x00100000000aa6cd
- (void)performKeepAlive;	// IMP=0x00100000000aa690
- (void)requestConnectionIfNeeded;	// IMP=0x00100000000aa5dc
- (void)_requestKeepAlive:(_Bool)arg1 orConnection:(_Bool)arg2 shortInterval:(_Bool)arg3 onInterface:(long long)arg4;	// IMP=0x00100000000aa252
- (void)_startKeepAliveResponseTimerOnInterface:(long long)arg1 shortInterval:(_Bool)arg2;	// IMP=0x00100000000aa20e
- (void)_performKeepAliveOnInterface:(long long)arg1 shortInterval:(_Bool)arg2 withAction:(int)arg3;	// IMP=0x00100000000a9afd
- (void)_delayedPerformKeepAliveOnInterface:(long long)arg1;	// IMP=0x00100000000a99ea
- (void)_delayedPerformKeepAliveNonCellular;	// IMP=0x00100000000a98bb
- (void)__delayedPerformKeepAliveNonCellular;	// IMP=0x00100000000a985a
- (void)_delayedPerformKeepAliveWWAN;	// IMP=0x00100000000a972b
- (void)__delayedPerformKeepAliveWWAN;	// IMP=0x00100000000a96d0
- (void)_handleFlushMessage:(id)arg1 onInterface:(long long)arg2;	// IMP=0x00100000000a94ff
- (void)_performFlushWithPaddingLength:(unsigned long long)arg1;	// IMP=0x00100000000a9310
- (void)_informStateListenerOfOutgoingDataOnInterface:(long long)arg1;	// IMP=0x00100000000a9261
- (void)_invokeInFailureHandlingContext:(CDUnknownBlockType)arg1;	// IMP=0x00100000000a9204
- (void)_resetServerKeepAliveStatsOnInterface:(long long)arg1;	// IMP=0x00100000000a9167
- (void)_handleConnectionAfterSuspensionRecoveryOnInterface:(long long)arg1 withKeepAlive:(_Bool)arg2;	// IMP=0x00100000000a8fe2
- (void)_delayedSuspendKeepAliveTimerFired:(id)arg1;	// IMP=0x00100000000a8ec6
- (void)_handleConnectionRecoverFromSuspensionOnInterface:(long long)arg1;	// IMP=0x00100000000a8b94
- (void)_handleConnectionSuspendedOnInterface:(long long)arg1;	// IMP=0x00100000000a8a90
- (void)setConnectionStatistics:(id)arg1 onInterface:(long long)arg2;	// IMP=0x00100000000a8881
- (void)_submitKeepAliveFailedAWDonInterface:(long long)arg1;	// IMP=0x00100000000a84f6
- (_Bool)_handleRedirectMessage:(id)arg1 onInterface:(long long)arg2;	// IMP=0x00100000000a8336
- (void)clearConsecutiveConnectionFailureReasonOnInterface:(long long)arg1;	// IMP=0x00100000000a8233
- (void)setConnectionFailure:(id)arg1 onInterface:(long long)arg2;	// IMP=0x00100000000a80c4
- (id)consecutiveConnectionFailureReasonOnInterface:(long long)arg1;	// IMP=0x00100000000a7fd9
- (void)resetKeepAliveOnInterface:(long long)arg1;	// IMP=0x00100000000a7fc7
- (unsigned long long)courierConnection:(id)arg1 dataReceived:(id)arg2 onInterface:(long long)arg3 withGeneration:(unsigned long long)arg4 isWakingMessage:(_Bool)arg5;	// IMP=0x00100000000a612d
- (void)_handleKeepAliveAckMessage:(id)arg1 onInterface:(long long)arg2;	// IMP=0x00100000000a5e6c
- (void)courierConnection:(id)arg1 failedToFindKeepAliveProxyOnInterface:(long long)arg2;	// IMP=0x00100000000a5e5f
- (void)courierConnection:(id)arg1 failedToObtainKeepAliveProxyOnInterface:(long long)arg2;	// IMP=0x00100000000a5e52
- (void)courierConnection:(id)arg1 failedToForceKeepAliveProxyOnInterface:(long long)arg2;	// IMP=0x00100000000a5e45
- (void)courierConnection:(id)arg1 connectionEstablishTimerFiredOnInterface:(long long)arg2;	// IMP=0x00100000000a5b2f
- (void)courierConnection:(id)arg1 keepAliveResponseTimerFiredOnInterface:(long long)arg2;	// IMP=0x00100000000a57ab
- (void)courierConnectionHasConnected:(id)arg1 context:(id)arg2 enabledPackedFormat:(_Bool)arg3 secureHandshakeEnabled:(_Bool)arg4 onInterface:(long long)arg5;	// IMP=0x00100000000a548d
- (void)courierConnection:(id)arg1 hasDeterminedServerHostname:(id)arg2 onInterface:(long long)arg3;	// IMP=0x00100000000a5369
- (void)courierConnection:(id)arg1 receivedServerBag:(id)arg2;	// IMP=0x00100000000a4162
@property(readonly, nonatomic) double currentKeepAliveInterval;
- (void)courierConnection:(id)arg1 errorOccured:(id)arg2 onInterface:(long long)arg3;	// IMP=0x00100000000a3c09
- (void)courierConnection:(id)arg1 parserErrorMessage:(id)arg2 OnInterface:(long long)arg3;	// IMP=0x00100000000a3ab4
- (void)courierConnection:(id)arg1 streamEndedOnInterface:(long long)arg2 withReason:(unsigned int)arg3;	// IMP=0x00100000000a3779
- (void)courierConnection:(id)arg1 disconnectStreamOnInterface:(long long)arg2 withReason:(unsigned int)arg3;	// IMP=0x00100000000a34f0
- (void)courierConnection:(id)arg1 connectionManager:(id)arg2 handleEvent:(int)arg3 context:(id)arg4 onInterface:(long long)arg5;	// IMP=0x00100000000a260b
- (void)carrierBundleDidChange;	// IMP=0x00100000000a245e
- (id)protocolConnectionForInterface:(long long)arg1;	// IMP=0x00100000000a2439
@property(readonly, nonatomic) NSArray *activeProtocolConnections;
@property(readonly, nonatomic) NSString *currentLinkQualityString;
- (void)clearDNSResolutionAndTLSHandshakeOnInterface:(long long)arg1;	// IMP=0x00100000000a220c
- (id)dailySuspendToggleRateLimiter;	// IMP=0x00100000000a2195
- (id)hourlySuspendToggleRateLimiter;	// IMP=0x00100000000a211e
- (_Bool)_isInternetReachableOnInterface:(long long)arg1;	// IMP=0x00100000000a20c3
- (_Bool)useServerKeepAliveStatsOnInterface:(long long)arg1;	// IMP=0x00100000000a206b
- (unsigned int)_keepAliveVersionForInterface:(long long)arg1;	// IMP=0x00100000000a204c
- (unsigned int)_connectionTypeForInterface:(long long)arg1;	// IMP=0x00100000000a203b
- (id)copyOperatorName;	// IMP=0x00100000000a2016
- (_Bool)_useShortKeepAliveInterval;	// IMP=0x00100000000a200e
- (_Bool)isCellularWatch;	// IMP=0x00100000000a1f95
- (int)_linkQualityForInterface:(long long)arg1;	// IMP=0x00100000000a1f3f
- (_Bool)_requestKeepAliveProxy;	// IMP=0x00100000000a1f37
- (_Bool)_isWiFiLinkQualityBetter;	// IMP=0x00100000000a1e39
- (id)pcPersistentInterfaceManager;	// IMP=0x00100000000a1e20
- (id)pcInterfaceMonitorOnInterface:(long long)arg1;	// IMP=0x00100000000a1ddc
- (id)pcInterfaceMonitorNonCellular;	// IMP=0x00100000000a1dc5
- (id)pcInterfaceMonitorWWAN;	// IMP=0x00100000000a1db1
@property(readonly, nonatomic) NSString *ifname;
- (void)_filterMessageTimeoutTimerFired:(id)arg1;	// IMP=0x00100000000a1cf9
- (void)_clearFilterMessageTimerOnInterface:(long long)arg1;	// IMP=0x00100000000a1ca9
- (void)_startFilterMessageTimerOnInterface:(long long)arg1;	// IMP=0x00100000000a1bf0
- (void)_clearKeepAliveResponseTimerOnInterface:(long long)arg1;	// IMP=0x00100000000a1bd7
- (void)_clearConnectionEstablishTimerOnInterface:(long long)arg1;	// IMP=0x00100000000a1bbe
- (void)_startConnectionEstablishTimerOnInterface:(long long)arg1;	// IMP=0x00100000000a1b7d
- (_Bool)_connectStreamWithInterfacePreference:(long long)arg1;	// IMP=0x00100000000a041c
- (void)_clearPostSuspensionFlushState;	// IMP=0x00100000000a03d9
- (void)_useCachedLastIPIfPossible:(long long)arg1;	// IMP=0x00100000000a00e7
- (void)_cacheIPAddress:(id)arg1 onInterface:(long long)arg2;	// IMP=0x001000000009fe14
- (void);	// IMP=0x001000000009f90b
- (void)_pendingMessageReconnectTimerFired;	// IMP=0x001000000009f818
- (void)_clearDelayedReconnectTimer;	// IMP=0x001000000009f74a
- (void)_delayedReconnectTimerFired;	// IMP=0x001000000009f657
- (void)_handleConnectionFailureOnInterface:(long long)arg1 forceDelayedReconnect:(_Bool)arg2 withReason:(unsigned int)arg3;	// IMP=0x001000000009e8f4
- (void)_disconnectAllStreamsWithReason:(unsigned int)arg1;	// IMP=0x001000000009e8a8
- (_Bool)_adjustConnectionWithInterfacePreference:(long long)arg1;	// IMP=0x001000000009e45c
- (void)_adjustConnection;	// IMP=0x001000000009e445
- (void)markInitiallyConnectedOnInterface:(long long)arg1;	// IMP=0x001000000009df6f
- (void)dealloc;	// IMP=0x001000000009deed
- (id)initWithEnvironment:(id)arg1 courierConnection:(id)arg2 carrierBundleHelper:(id)arg3 networkMonitor:(id)arg4 delegate:(id)arg5;	// IMP=0x001000000009d95c
- (id)initWithEnvironment:(id)arg1 delegate:(id)arg2;	// IMP=0x001000000009d874

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

