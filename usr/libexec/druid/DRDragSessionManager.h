//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DRDispatchTimer, DRKeyboardArbiter, DRLockObserver, DRSystemConnection, NSHashTable, NSMutableArray, NSMutableDictionary, NSString, NSXPCListener, _TtC5druid15DRTouchDetacher;
@protocol DRDragSessionManagerDelegate, OS_dispatch_queue;

@interface DRDragSessionManager : NSObject
{
    unsigned int _lastSessionIdentifier;	// 8 = 0x8
    id <DRDragSessionManagerDelegate> _delegate;	// 16 = 0x10
    NSMutableArray *_dragSessions;	// 24 = 0x18
    NSHashTable *_keyboardSessions;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_xpcQueue;	// 40 = 0x28
    NSXPCListener *_sourceListener;	// 48 = 0x30
    NSXPCListener *_destinationListener;	// 56 = 0x38
    DRSystemConnection *_systemConnection;	// 64 = 0x40
    DRKeyboardArbiter *_keyboardArbiter;	// 72 = 0x48
    DRLockObserver *_lockObserver;	// 80 = 0x50
    _TtC5druid15DRTouchDetacher *_touchDetacher;	// 88 = 0x58
    NSMutableDictionary *_touchStreamsByDisplayIdentifier;	// 96 = 0x60
    DRDispatchTimer *_pointerWatchdogTimer;	// 104 = 0x68
    NSMutableDictionary *_pointerServiceAssertionsByDisplayIdentifier;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_transformUpdateQueue;	// 120 = 0x78
}

+ (id)sharedSessionManager;	// IMP=0x002000000002b45e
- (void).cxx_destruct;	// IMP=0x00200000000364b8
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *transformUpdateQueue; // @synthesize transformUpdateQueue=_transformUpdateQueue;
@property(readonly, nonatomic) NSMutableDictionary *pointerServiceAssertionsByDisplayIdentifier; // @synthesize pointerServiceAssertionsByDisplayIdentifier=_pointerServiceAssertionsByDisplayIdentifier;
@property(readonly, nonatomic) DRDispatchTimer *pointerWatchdogTimer; // @synthesize pointerWatchdogTimer=_pointerWatchdogTimer;
@property(readonly, nonatomic) NSMutableDictionary *touchStreamsByDisplayIdentifier; // @synthesize touchStreamsByDisplayIdentifier=_touchStreamsByDisplayIdentifier;
@property(readonly, nonatomic) _TtC5druid15DRTouchDetacher *touchDetacher; // @synthesize touchDetacher=_touchDetacher;
@property(readonly, nonatomic) DRLockObserver *lockObserver; // @synthesize lockObserver=_lockObserver;
@property(readonly, nonatomic) DRKeyboardArbiter *keyboardArbiter; // @synthesize keyboardArbiter=_keyboardArbiter;
@property(readonly, nonatomic) DRSystemConnection *systemConnection; // @synthesize systemConnection=_systemConnection;
@property(readonly, nonatomic) NSXPCListener *destinationListener; // @synthesize destinationListener=_destinationListener;
@property(readonly, nonatomic) NSXPCListener *sourceListener; // @synthesize sourceListener=_sourceListener;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *xpcQueue; // @synthesize xpcQueue=_xpcQueue;
@property(readonly, nonatomic) NSHashTable *keyboardSessions; // @synthesize keyboardSessions=_keyboardSessions;
@property(readonly, nonatomic) unsigned int lastSessionIdentifier; // @synthesize lastSessionIdentifier=_lastSessionIdentifier;
@property(readonly, nonatomic) NSMutableArray *dragSessions; // @synthesize dragSessions=_dragSessions;
@property(nonatomic) __weak id <DRDragSessionManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_getTransformForContextID:(unsigned int)arg1 layerRenderID:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000036042
- (_Bool)_addBeginningTouchesToExistingSessions:(id)arg1 viewController:(id)arg2 touchWindow:(id)arg3;	// IMP=0x0010000000035491
- (id)_filterTouchesForPointer:(id)arg1 performingBlockForPointerTouch:(CDUnknownBlockType)arg2;	// IMP=0x001000000003523e
- (void)_forEachTouch:(id)arg1 performBlockForSession:(CDUnknownBlockType)arg2;	// IMP=0x0010000000034cc7
- (void)_cancelAllDragSessions;	// IMP=0x0010000000034b4d
- (void)touchTrackingWindow:(id)arg1 touchesCancelled:(id)arg2;	// IMP=0x00100000000342e3
- (void)touchTrackingWindow:(id)arg1 touchesEnded:(id)arg2 pairedWithVelocities:(id)arg3;	// IMP=0x00100000000334b4
- (void)touchTrackingWindow:(id)arg1 touchesMoved:(id)arg2;	// IMP=0x00100000000330d4
- (void)touchTrackingWindow:(id)arg1 touchesBegan:(id)arg2;	// IMP=0x0010000000032a47
- (void)dragSession:(id)arg1 enableKeyboardIfNeeded:(_Bool)arg2;	// IMP=0x001000000003259b
- (void)dragSessionDidEnd:(id)arg1;	// IMP=0x001000000003241d
- (void)dragSessionWillEnd:(id)arg1;	// IMP=0x00100000000322f7
- (void)dragSession:(id)arg1 animateOutVisibleItemsWithOperation:(unsigned long long)arg2;	// IMP=0x00100000000321bb
- (void)dragSession:(id)arg1 moveToLocation:(struct CAPoint3D)arg2;	// IMP=0x0010000000032080
- (void)dragSession:(id)arg1 removeVisibleDroppedItemsInSpaceOfContextID:(unsigned int)arg2 layerRenderID:(unsigned long long)arg3 replyingOnQueue:(id)arg4 with:(CDUnknownBlockType)arg5;	// IMP=0x0010000000031ba9
- (void)dragSession:(id)arg1 findVisibleDroppedItemsReplyingOnQueue:(id)arg2 with:(CDUnknownBlockType)arg3;	// IMP=0x00100000000318b2
- (void)dragSession:(id)arg1 updateRoutingPolicy:(id)arg2;	// IMP=0x001000000003183f
- (_Bool)dragSession:(id)arg1 destinationIsSystemConnection:(id)arg2;	// IMP=0x001000000003182a
- (_Bool)destinationIsSystemConnection:(id)arg1;	// IMP=0x00100000000317a6
- (void)resetDestinationClientForDragSession:(id)arg1;	// IMP=0x0010000000031591
- (void)dragSession:(id)arg1 updatedPotentialDrop:(id)arg2 forDestinationClient:(id)arg3;	// IMP=0x00100000000313c5
- (void)dragSession:(id)arg1 addedItemCount:(unsigned long long)arg2;	// IMP=0x0010000000031038
- (void)dragSession:(id)arg1 invalidateImageForClient:(id)arg2 itemIndex:(unsigned long long)arg3;	// IMP=0x0010000000030ea0
- (void)dragSession:(id)arg1 updateDragItems:(id)arg2 forClient:(id)arg3 withFence:(id)arg4;	// IMP=0x0010000000030413
- (id)allWindowContextIdsForDragSession:(id)arg1;	// IMP=0x00100000000300d2
- (oneway void)sawFirstDragEventWithSessionID:(unsigned int)arg1 systemPolicy:(_Bool)arg2 destination:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000002f8d9
- (void)teardownPortalViewsForDragSessionOriginatingFromViewController:(id)arg1;	// IMP=0x001000000002f68a
- (void)configurePortalViewsForDragSessionOriginatingFromViewController:(id)arg1;	// IMP=0x001000000002f2b5
- (oneway void)beginDragWithClientSession:(id)arg1 configuration:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000002e0b7
- (oneway void)warmUp;	// IMP=0x001000000002dfe9
- (void)_pointerBeganWatchdogFired;	// IMP=0x001000000002df4f
- (void)_cancelPointerBeganWatchdog;	// IMP=0x001000000002dee9
- (id)xpcQueue_pointerDragSessionForEvents;	// IMP=0x001000000002dd51
- (_Bool)xpcQueue_hasTouchBasedDragSessionForEventsForDisplayIdentifier:(id)arg1;	// IMP=0x001000000002dae7
- (id)xpcQueue_accessibilityDragSessionForEvents;	// IMP=0x001000000002d95b
- (void)xpcQueue_validateTouchStreamForDragSession:(id)arg1;	// IMP=0x001000000002ca0f
- (void)xpcQueue_removeDragSession:(id)arg1;	// IMP=0x001000000002c8cb
- (void)xpcQueue_addDragSession:(id)arg1;	// IMP=0x001000000002c7b3
- (void)xpcQueue_acceptNewDestinationConnection:(id)arg1;	// IMP=0x001000000002c281
- (_Bool)xpcQueue_shouldAcceptNewDestinationConnection:(id)arg1;	// IMP=0x001000000002c1b5
- (_Bool)xpcQueue_canAcceptDestinationConnection:(id)arg1;	// IMP=0x001000000002c16d
- (void)xpcQueue_acceptNewSourceConnection:(id)arg1;	// IMP=0x001000000002bba3
- (_Bool)xpcQueue_shouldAcceptNewSourceConnection:(id)arg1;	// IMP=0x001000000002bad7
- (_Bool)xpcQueue_canCreateNewDragSessionWithSourceConnection:(id)arg1;	// IMP=0x001000000002ba8f
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x001000000002ba13
- (void)setTouchOffset:(struct CGPoint)arg1 forSession:(unsigned int)arg2;	// IMP=0x001000000002b9fd
- (void)requestImagesForSessionID:(unsigned int)arg1 client:(id)arg2 itemIndexSet:(id)arg3;	// IMP=0x001000000002b86b
- (void)startup;	// IMP=0x001000000002b6d7
- (id)init;	// IMP=0x001000000002b4b3

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

