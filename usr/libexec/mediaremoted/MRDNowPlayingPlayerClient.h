//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MRContentItem, MRDNowPlayingPlayerClientPlaybackState, MRDPlaybackQueue, MRNowPlayingState, MROSTransaction, MRPlaybackQueue, MRPlaybackQueueSubscriptionController, MRPlayer, MRPlayerPath, NSArray, NSData, NSDate, NSMutableDictionary;
@protocol MRDNowPlayingPlayerClientDelegate, OS_dispatch_queue;

@interface MRDNowPlayingPlayerClient : NSObject
{
    MRPlayerPath *_playerPath;	// 8 = 0x8
    NSArray *_supportedRemoteControlCommands;	// 16 = 0x10
    NSData *_supportedRemoteControlCommandsData;	// 24 = 0x18
    MRDPlaybackQueue *_playbackQueueInternal;	// 32 = 0x20
    unsigned long long _playbackQueueCapabilities;	// 40 = 0x28
    NSDate *_canBeNowPlayingPlayerTimestamp;	// 48 = 0x30
    MRDNowPlayingPlayerClientPlaybackState *_playerPlaybackState;	// 56 = 0x38
    MRDNowPlayingPlayerClientPlaybackState *_inferredPlayerPlaybackState;	// 64 = 0x40
    NSMutableDictionary *_playbackStateHistory;	// 72 = 0x48
    _Bool _pictureInPictureEnabled;	// 80 = 0x50
    _Bool _canBeNowPlayingPlayer;	// 81 = 0x51
    MROSTransaction *_hasNowPlayingDataTransaction;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_serialQueue;	// 96 = 0x60
    _Bool _pushStateIsPlaying;	// 104 = 0x68
    _Bool _pushStateHasNowPlayingData;	// 105 = 0x69
    _Bool _pushStatePictureInPictureEnabled;	// 106 = 0x6a
    _Bool _pushStateCanBeNowPlayingPlayer;	// 107 = 0x6b
    NSDate *_lastPlayingDate;	// 112 = 0x70
    MRPlaybackQueueSubscriptionController *_subscriptionController;	// 120 = 0x78
    id <MRDNowPlayingPlayerClientDelegate> _delegate;	// 128 = 0x80
    MRDNowPlayingPlayerClientPlaybackState *_pushStatePlaybackState;	// 136 = 0x88
    MRPlayer *_pushStatePlayer;	// 144 = 0x90
}

- (void).cxx_destruct;	// IMP=0x0010000000026dae
@property(nonatomic) _Bool pushStateCanBeNowPlayingPlayer; // @synthesize pushStateCanBeNowPlayingPlayer=_pushStateCanBeNowPlayingPlayer;
@property(nonatomic) _Bool pushStatePictureInPictureEnabled; // @synthesize pushStatePictureInPictureEnabled=_pushStatePictureInPictureEnabled;
@property(nonatomic) _Bool pushStateHasNowPlayingData; // @synthesize pushStateHasNowPlayingData=_pushStateHasNowPlayingData;
- (void);	// IMP=0x0010000000026d64
@property(retain, nonatomic) MRPlayer *pushStatePlayer; // @synthesize pushStatePlayer=_pushStatePlayer;
@property(retain, nonatomic) MRDNowPlayingPlayerClientPlaybackState *pushStatePlaybackState; // @synthesize pushStatePlaybackState=_pushStatePlaybackState;
@property(nonatomic) _Bool pushStateIsPlaying; // @synthesize pushStateIsPlaying=_pushStateIsPlaying;
@property(nonatomic) __weak id <MRDNowPlayingPlayerClientDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) MRPlaybackQueueSubscriptionController *subscriptionController; // @synthesize subscriptionController=_subscriptionController;
@property(readonly, nonatomic) NSDate *lastPlayingDate; // @synthesize lastPlayingDate=_lastPlayingDate;
- (void)_onQueue_popState;	// IMP=0x001000000002630a
- (void)_onQueue_pushState;	// IMP=0x00100000000261eb
- (void)_onQueue_playbackQueueContentItemsArtworkDidChange:(id)arg1;	// IMP=0x0010000000026139
- (void)_onQueue_playbackQueueContentItemsDidChange:(id)arg1;	// IMP=0x0010000000026087
- (void)_onQueue_playbackQueueCapabilitiesDidChange:(unsigned long long)arg1;	// IMP=0x0010000000026036
- (void)_onQueue_playbackQueueDidChange:(id)arg1 nowPlayingItemChanged:(_Bool)arg2;	// IMP=0x0010000000025fa7
- (void)_onQueue_supportedCommandsDidChange:(id)arg1;	// IMP=0x0010000000025f1d
- (void)_onQueue_playbackStateDidChanged:(id)arg1;	// IMP=0x0010000000025e15
- (void)_onQueue_pictureInPictureEnabledDidChanged:(_Bool)arg1;	// IMP=0x0010000000025dc6
- (void)_onQueue_isPlayingDidChange:(_Bool)arg1;	// IMP=0x0010000000025d45
- (void)_onQueue_canBeNowPlayingDidChange:(_Bool)arg1;	// IMP=0x0010000000025cf6
- (void)_handleNowPlayingAppDidChange:(id)arg1;	// IMP=0x0010000000025c02
- (id)cachedArtworkForContentItem:(id)arg1;	// IMP=0x0010000000025bfa
- (id)playbackQueueForRequest:(id)arg1 cachingPolicy:(unsigned int)arg2 playerPath:(id)arg3 partiallyCachedItems:(id *)arg4;	// IMP=0x00100000000258dd
- (id)_sortSnapshots:(id)arg1;	// IMP=0x00100000000258a9
@property(readonly, nonatomic) NSArray *snapshots;
- (id)snapshotForIsPlaying:(_Bool)arg1;	// IMP=0x001000000002572d
- (id)snapshotsForIsPlaying:(_Bool)arg1;	// IMP=0x00100000000254ec
- (id)snapshotForPlaybackState:(unsigned int)arg1;	// IMP=0x00100000000253b3
- (void)notifyArtworkChangedForContentItems:(id)arg1;	// IMP=0x00100000000252c9
- (void)_onQueue_updatePlaybackQueue:(id)arg1 fromRequest:(id)arg2;	// IMP=0x0010000000024d3e
- (void)updatePlaybackQueue:(id)arg1 fromRequest:(id)arg2;	// IMP=0x0010000000024c65
- (void)updatePlaybackQueue:(id)arg1;	// IMP=0x0010000000024c51
- (void)updatePlayer:(id)arg1;	// IMP=0x0010000000024b50
- (void)updateClient:(id)arg1;	// IMP=0x0010000000024a75
@property(nonatomic, getter=isPictureInPictureEnabled) _Bool pictureInPictureEnabled;
@property(retain, nonatomic) MRPlayerPath *playerPath;
- (id)_onQueue_lastPlayingDate;	// IMP=0x001000000002486b
@property(readonly, nonatomic) double timeSincePlaying;
@property(readonly, nonatomic) MRNowPlayingState *nowPlayingState;
@property(readonly, nonatomic) _Bool hasNowPlayingData;
- (_Bool)_onQueue_isPlaying;	// IMP=0x0010000000024259
@property(readonly, nonatomic) _Bool isPlaying;
@property(nonatomic) unsigned long long playbackQueueCapabilities;
- (id)_onQueue_playbackState;	// IMP=0x0010000000023c96
@property(readonly, nonatomic) NSDate *playbackStateTimestamp;
@property(readonly, nonatomic) unsigned int playbackState;
@property(copy, nonatomic) NSDate *canBeNowPlayingPlayerTimestamp;
@property(nonatomic) _Bool canBeNowPlayingPlayer;
- (void)updateLastPlayingDate:(id)arg1;	// IMP=0x00100000000236ae
- (void)updatePlaybackState:(unsigned int)arg1 date:(id)arg2;	// IMP=0x00100000000233f2
@property(nonatomic) unsigned int inferredPlaybackState;
@property(readonly, nonatomic) MRContentItem *nowPlayingContentItem;
@property(copy, nonatomic) MRPlaybackQueue *playbackQueue;
@property(copy, nonatomic) NSData *supportedRemoteControlCommandsData;
@property(retain, nonatomic) NSArray *supportedRemoteControlCommands;
@property(readonly, nonatomic) MRPlayer *player;
- (id)description;	// IMP=0x0010000000021d82
- (id)initWithPlayerPath:(id)arg1;	// IMP=0x0010000000021b86
- (id)activeContent;	// IMP=0x0010000000021ae3
- (_Bool)isActiveStream;	// IMP=0x0010000000021ad1

@end

