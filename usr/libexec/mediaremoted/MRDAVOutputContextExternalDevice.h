//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <MediaRemote/MRExternalDevice.h>

@class MRAVOutputContext, MRAVOutputDevice, MRDOriginForwarder, MRDeviceInfo, MROrigin, MROutputContextController, NSArray, NSMutableArray, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface MRDAVOutputContextExternalDevice : MRExternalDevice
{
    unsigned int _connectionState;	// 8 = 0x8
    MRDeviceInfo *_deviceInfo;	// 16 = 0x10
    MRDOriginForwarder *_originForwarder;	// 24 = 0x18
    NSMutableArray *_pendingCommitRequests;	// 32 = 0x20
    MROutputContextController *_outputContextController;	// 40 = 0x28
    NSArray *subscribedPlayerPaths;	// 48 = 0x30
    MRAVOutputDevice *_designatedGroupLeader;	// 56 = 0x38
    MRAVOutputContext *_outputContext;	// 64 = 0x40
    MROrigin *_origin;	// 72 = 0x48
    NSObject<OS_dispatch_queue> *_serialQueue;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_workerQueue;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_notificationQueue;	// 96 = 0x60
    CDUnknownBlockType _connectionStateCallback;	// 104 = 0x68
    NSObject<OS_dispatch_queue> *_connectionStateCallbackQueue;	// 112 = 0x70
    CDUnknownBlockType _outputDevicesUpdatedCallback;	// 120 = 0x78
    NSObject<OS_dispatch_queue> *_outputDevicesUpdatedCallbackQueue;	// 128 = 0x80
    CDUnknownBlockType _outputDevicesRemovedCallback;	// 136 = 0x88
    NSObject<OS_dispatch_queue> *_outputDevicesRemovedCallbackQueue;	// 144 = 0x90
    CDUnknownBlockType _volumeCallback;	// 152 = 0x98
    NSObject<OS_dispatch_queue> *_volumeCallbackQueue;	// 160 = 0xa0
    CDUnknownBlockType _volumeControlCapabilitiesCallback;	// 168 = 0xa8
    NSObject<OS_dispatch_queue> *_volumeControlCapabilitiesCallbackQueue;	// 176 = 0xb0
    CDUnknownBlockType _volumeMutedCallback;	// 184 = 0xb8
    NSObject<OS_dispatch_queue> *_volumeMutedCallbackQueue;	// 192 = 0xc0
}

+ (void)_reportStreamCountAnalytics;	// IMP=0x0020000000104448
+ (id)_resolveReason:(id)arg1 uid:(id)arg2 name:(id)arg3 requestID:(id)arg4;	// IMP=0x0010000000103e0e
+ (void)_createPlayerForClient:(id)arg1 playerPath:(id)arg2 deviceInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000f8d17
+ (void)_createPlayerAndWaitForCanBeNowPlaying:(id)arg1 deviceInfo:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000f7df0
+ (void)_createPlayerAndWaitForConnection:(id)arg1 command:(id)arg2 deviceInfo:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000f6ccd
+ (void)_sendCommandPreview:(unsigned int)arg1 options:(id)arg2 playerPath:(id)arg3;	// IMP=0x00100000000f64d4
+ (void)prewarmApp:(id)arg1 origin:(id)arg2 deviceInfo:(id)arg3;	// IMP=0x00100000000f33ed
+ (void)prewarm;	// IMP=0x00100000000f2e39
+ (void)prewarmSoon;	// IMP=0x00100000000f2da0
+ (void)initialize;	// IMP=0x00100000000f28a0
- (void).cxx_destruct;	// IMP=0x0020000000105167
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *volumeMutedCallbackQueue; // @synthesize volumeMutedCallbackQueue=_volumeMutedCallbackQueue;
@property(copy, nonatomic) CDUnknownBlockType volumeMutedCallback; // @synthesize volumeMutedCallback=_volumeMutedCallback;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *volumeControlCapabilitiesCallbackQueue; // @synthesize volumeControlCapabilitiesCallbackQueue=_volumeControlCapabilitiesCallbackQueue;
@property(copy, nonatomic) CDUnknownBlockType volumeControlCapabilitiesCallback; // @synthesize volumeControlCapabilitiesCallback=_volumeControlCapabilitiesCallback;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *volumeCallbackQueue; // @synthesize volumeCallbackQueue=_volumeCallbackQueue;
@property(copy, nonatomic) CDUnknownBlockType volumeCallback; // @synthesize volumeCallback=_volumeCallback;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *outputDevicesRemovedCallbackQueue; // @synthesize outputDevicesRemovedCallbackQueue=_outputDevicesRemovedCallbackQueue;
@property(copy, nonatomic) CDUnknownBlockType outputDevicesRemovedCallback; // @synthesize outputDevicesRemovedCallback=_outputDevicesRemovedCallback;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *outputDevicesUpdatedCallbackQueue; // @synthesize outputDevicesUpdatedCallbackQueue=_outputDevicesUpdatedCallbackQueue;
@property(copy, nonatomic) CDUnknownBlockType outputDevicesUpdatedCallback; // @synthesize outputDevicesUpdatedCallback=_outputDevicesUpdatedCallback;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *connectionStateCallbackQueue; // @synthesize connectionStateCallbackQueue=_connectionStateCallbackQueue;
@property(copy, nonatomic) CDUnknownBlockType connectionStateCallback; // @synthesize connectionStateCallback=_connectionStateCallback;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *notificationQueue; // @synthesize notificationQueue=_notificationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workerQueue; // @synthesize workerQueue=_workerQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(retain, nonatomic) MROrigin *origin; // @synthesize origin=_origin;
@property(retain, nonatomic) MRAVOutputContext *outputContext; // @synthesize outputContext=_outputContext;
@property(retain, nonatomic) MRAVOutputDevice *designatedGroupLeader; // @synthesize designatedGroupLeader=_designatedGroupLeader;
- (void)setSubscribedPlayerPaths:(id)arg1;	// IMP=0x0010000000104ef6
- (id)subscribedPlayerPaths;	// IMP=0x0010000000104ee5
- (_Bool)verifyCreatedPlayerPath:(id)arg1 forClient:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000104178
- (void)destroyPlayersForClient:(id)arg1 origin:(id)arg2;	// IMP=0x00100000001040c6
- (void)_onQueue_destroyPlayerPathsForOrigin:(id)arg1;	// IMP=0x0010000000103ec6
- (id)_resolveReason:(id)arg1;	// IMP=0x0010000000103d5c
- (void)_maybeForwardOriginToLocalOrigin:(id)arg1;	// IMP=0x0010000000103aa0
- (void)commitOutputDeviceToContextIfNeededWithReason:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000102c62
- (id)outputDeviceForUID:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000102a1d
- (_Bool)verifyGroupLeader:(id)arg1;	// IMP=0x00100000001025cb
- (void)verifyGroupLeaderForReason:(id)arg1;	// IMP=0x00100000001023b4
- (void)cleanUp;	// IMP=0x00100000001023a0
- (void)_reevaluateDeviceInfo;	// IMP=0x0010000000102304
- (void)clusterController:(id)arg1 clusterTypeDidChange:(unsigned int)arg2;	// IMP=0x0010000000101f7f
- (void)localClusterTypeDidChangeNotification:(id)arg1;	// IMP=0x0010000000101ecf
- (void)anyDeviceInfoDidChangeNotification:(id)arg1;	// IMP=0x0010000000101e54
- (void)_notifyActiveSessionMaybeWillBeHijackedByNativePlaybackFromOutputContextModification:(id)arg1;	// IMP=0x0010000000101cd2
- (void)outputContextRequestToAddLocalOutputDeviceNotification:(id)arg1;	// IMP=0x0010000000101c1d
- (void)anyOutputContextDidAddOutputDeviceNotification:(id)arg1;	// IMP=0x0010000000101b13
- (void)outputContextDataSourceIsMutedDidChangeNotification:(id)arg1;	// IMP=0x0010000000101885
- (void)outputContextDataSourceVolumeDidChangeNotification:(id)arg1;	// IMP=0x00000000001015c5
- (void)outputContextDataSourceVolumeControlCapabilitiesDidChangeNotification:(id)arg1;	// IMP=0x0010000000101338
- (void)outputContextDataSourceDidRemoveOutputDeviceNotification:(id)arg1;	// IMP=0x00100000001004b5
- (void)outputContextDataSourceDidAddOutputDeviceNotification:(id)arg1;	// IMP=0x0010000000100162
- (void)outputContextDataSourceOutputDeviceDidChangeNotification:(id)arg1;	// IMP=0x00100000000fff36
- (void)outputContextDataSourceOutputDevicesDidChangeNotification:(id)arg1;	// IMP=0x00100000000fff24
- (void)registerForNotifications;	// IMP=0x00100000000ffbde
- (void)sendClientUpdatesConfigMessage;	// IMP=0x00100000000ffbd8
- (id)currentClientUpdatesConfigMessage;	// IMP=0x00100000000ffbd0
- (id)errorForCurrentState;	// IMP=0x00100000000ffbc8
- (void)sendButtonEvent:(struct _MRHIDButtonEvent)arg1;	// IMP=0x00100000000ffbc2
- (void)setWantsSystemEndpointNotifications:(_Bool)arg1;	// IMP=0x00100000000ffbbc
- (_Bool)wantsSystemEndpointNotifications;	// IMP=0x00100000000ffbb4
- (void)setWantsOutputDeviceNotifications:(_Bool)arg1;	// IMP=0x00100000000ffbae
- (_Bool)wantsOutputDeviceNotifications;	// IMP=0x00100000000ffba6
- (void)setWantsVolumeNotifications:(_Bool)arg1;	// IMP=0x00100000000ffba0
- (_Bool)wantsVolumeNotifications;	// IMP=0x00100000000ffb98
- (void)setWantsNowPlayingArtworkNotifications:(_Bool)arg1;	// IMP=0x00100000000ffb92
- (_Bool)wantsNowPlayingArtworkNotifications;	// IMP=0x00100000000ffb8a
- (void)setWantsNowPlayingNotifications:(_Bool)arg1;	// IMP=0x00100000000ffb84
- (_Bool)wantsNowPlayingNotifications;	// IMP=0x00100000000ffb7c
- (_Bool)isUsingSystemPairing;	// IMP=0x00100000000ffb74
- (_Bool)isPaired;	// IMP=0x00100000000ffb6c
- (void)sendCustomData:(id)arg1 withName:(id)arg2;	// IMP=0x00100000000ffb66
- (void)setCustomDataCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;	// IMP=0x00100000000ffb60
- (void)setNameCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;	// IMP=0x00100000000ffb5a
- (id)supportedMessages;	// IMP=0x00100000000ffb2c
- (void)removeFromParentGroup:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000ffac5
- (void)setPairingAllowedCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;	// IMP=0x00100000000ffabf
- (void)setPairingCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;	// IMP=0x00100000000ffab9
- (void)disconnect:(id)arg1;	// IMP=0x00100000000ff84c
- (id)_generateDeviceInfoWithDesignatedGroupLeader:(id)arg1 outputContext:(id)arg2;	// IMP=0x00100000000ff348
- (void)connectWithOptions:(unsigned int)arg1 userInfo:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000fe546
- (void)ping:(double)arg1 callback:(CDUnknownBlockType)arg2 withQueue:(id)arg3;	// IMP=0x00100000000fe4b4
- (void)modifyByAddingDeviceUIDs:(id)arg1 removingDeviceUIDs:(id)arg2 settingDeviceUIDs:(id)arg3 addingClusterAwareDeviceUIDs:(id)arg4 removingClusterAwareDeviceUIDs:(id)arg5 settingClusterAwareDeviceUIDs:(id)arg6 withReplyQueue:(id)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x00100000000fd52b
- (void)muteOutputDeviceVolume:(_Bool)arg1 outputDeviceUID:(id)arg2 details:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00100000000fc98b
- (void)adjustOutputDeviceVolume:(long long)arg1 outputDeviceUID:(id)arg2 details:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00100000000fbdf0
- (void)setOutputDeviceVolume:(float)arg1 outputDeviceUID:(id)arg2 details:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00100000000fb2cc
- (void)outputDeviceVolume:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000fb1a6
- (void)outputDeviceVolumeControlCapabilities:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000fb08b
- (void)setConnectionStateCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;	// IMP=0x00100000000faf60
- (void)setOutputDevicesRemovedCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;	// IMP=0x00100000000fae35
- (void)setOutputDevicesUpdatedCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;	// IMP=0x00100000000fad0a
- (void)setVolumeMutedChangedCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;	// IMP=0x00100000000fabdf
- (void)setVolumeControlCapabilitiesCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;	// IMP=0x00100000000faab4
- (void)setVolumeChangedCallback:(CDUnknownBlockType)arg1 withQueue:(id)arg2;	// IMP=0x00100000000fa989
- (void)_handlePlaybackSessionMigrateEndRequest:(id)arg1 error:(id)arg2 forPlayerPath:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000fa788
- (void)_handlePlaybackSessionMigrateBeginRequest:(id)arg1 forPlayerPath:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000fa5ce
- (void)_handlePlaybackSessionMigrateRequest:(id)arg1 request:(id)arg2 forPlayerPath:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000fa138
- (void)_handlePlaybackSessionRequest:(id)arg1 forPlayerPath:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000f9f18
- (void)_handlePlaybackQueueRequest:(id)arg1 forPlayerPath:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000f9aec
- (void)_sendMessageForPlayerPath:(id)arg1 timeout:(double)arg2 reason:(id)arg3 factory:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x00100000000f976b
- (void)sendMessageWithType:(unsigned long long)arg1 playerPath:(id)arg2 timeout:(double)arg3 reason:(id)arg4 factory:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00100000000f9552
- (void)_createPlayerAndWaitForCanBeNowPlaying:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000f7bde
- (void)_createPlayerAndWaitForConnection:(id)arg1 command:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000f6a6b
- (id)_createResolvedPlayerPathFromPlayerPath:(id)arg1;	// IMP=0x00100000000f678a
- (void)_handleRemoteCommand:(unsigned int)arg1 withOptions:(id)arg2 playerPath:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000f58c5
- (void)setDeviceInfo:(id)arg1;	// IMP=0x00100000000f4b92
- (id)uid;	// IMP=0x00100000000f46b9
- (void)setConnectionState:(unsigned int)arg1;	// IMP=0x00100000000f4492
- (unsigned int)connectionState;	// IMP=0x00100000000f43c4
- (id)deviceInfo;	// IMP=0x00100000000f42a6
- (id)customOrigin;	// IMP=0x00100000000f4188
- (_Bool)supportsIdleDisconnection;	// IMP=0x00100000000f4180
- (long long)port;	// IMP=0x00100000000f4178
- (id)hostName;	// IMP=0x00100000000f4170
- (id)name;	// IMP=0x00100000000f404a
@property(readonly, nonatomic) _Bool containsLocalDevice;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (id)dictionaryRepresentation;	// IMP=0x00100000000f3b42
- (void)dealloc;	// IMP=0x00100000000f2818
- (id)initWithOutputContext:(id)arg1 designatedGroupLeader:(id)arg2;	// IMP=0x00100000000f25c5

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

