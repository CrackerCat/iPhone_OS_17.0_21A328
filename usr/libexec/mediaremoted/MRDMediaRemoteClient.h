//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, MRDMediaRemoteUIService, MRDPairingHandler, MRDTaskAssertion, MRPlaybackQueueClient, MRXPCConnection, MRXPCConnectionMonitor, NSArray, NSData, NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString;
@protocol MRDXPCMessageHandling, OS_dispatch_queue, OS_dispatch_source;

@interface MRDMediaRemoteClient : NSObject
{
    NSObject<OS_dispatch_source> *_source;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_serialQueue;	// 16 = 0x10
    NSArray *_applicationPickedRoutes;	// 24 = 0x18
    NSString *_bundleIdentifier;	// 32 = 0x20
    NSString *_processName;	// 40 = 0x28
    NSMutableArray *_assertions;	// 48 = 0x30
    NSOperationQueue *_relayingMessages;	// 56 = 0x38
    unsigned long long _entitlements;	// 64 = 0x40
    NSMutableDictionary *_pendingPlaybackSessionMigrateEvents;	// 72 = 0x48
    NSMutableArray *_subscribedWakingPlayerPaths;	// 80 = 0x50
    MRXPCConnectionMonitor *_connectionMonitor;	// 88 = 0x58
    _Bool _isActive;	// 96 = 0x60
    _Bool _keepAlive;	// 97 = 0x61
    _Bool _hasRequestedLegacyNowPlayingInfo;	// 98 = 0x62
    _Bool _hasRequestedSupportedCommands;	// 99 = 0x63
    _Bool _declaringAirplayActive;	// 100 = 0x64
    unsigned int _hardwareRemoteBehavior;	// 104 = 0x68
    unsigned int _routeDiscoveryMode;	// 108 = 0x6c
    unsigned int _outputDeviceDiscoveryMode;	// 112 = 0x70
    id <MRDXPCMessageHandling> _messageHandler;	// 120 = 0x78
    MISSING_TYPE *_connection;	// 128 = 0x80
    MRDTaskAssertion *_currentTaskAssertion;	// 136 = 0x88
    unsigned long long _routeDiscoveryCount;	// 144 = 0x90
    MRDMediaRemoteUIService *_remoteUIService;	// 152 = 0x98
    MRDPairingHandler *_pairingHandler;	// 160 = 0xa0
    MRPlaybackQueueClient *_playbackQueueRequests;	// 168 = 0xa8
}

- (void).cxx_destruct;	// IMP=0x002000000012a4b5
@property(readonly, nonatomic) MRPlaybackQueueClient *playbackQueueRequests; // @synthesize playbackQueueRequests=_playbackQueueRequests;
@property(readonly, nonatomic) unsigned long long entitlements; // @synthesize entitlements=_entitlements;
@property(nonatomic) _Bool declaringAirplayActive; // @synthesize declaringAirplayActive=_declaringAirplayActive;
@property(nonatomic) _Bool hasRequestedSupportedCommands; // @synthesize hasRequestedSupportedCommands=_hasRequestedSupportedCommands;
@property(nonatomic) _Bool hasRequestedLegacyNowPlayingInfo; // @synthesize hasRequestedLegacyNowPlayingInfo=_hasRequestedLegacyNowPlayingInfo;
@property(nonatomic) _Bool keepAlive; // @synthesize keepAlive=_keepAlive;
@property(readonly, nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
@property(retain, nonatomic) MRDPairingHandler *pairingHandler; // @synthesize pairingHandler=_pairingHandler;
@property(retain, nonatomic) MRDMediaRemoteUIService *remoteUIService; // @synthesize remoteUIService=_remoteUIService;
@property(nonatomic) unsigned int outputDeviceDiscoveryMode; // @synthesize outputDeviceDiscoveryMode=_outputDeviceDiscoveryMode;
@property(nonatomic) unsigned int routeDiscoveryMode; // @synthesize routeDiscoveryMode=_routeDiscoveryMode;
@property(readonly, nonatomic) unsigned long long routeDiscoveryCount; // @synthesize routeDiscoveryCount=_routeDiscoveryCount;
@property(nonatomic) unsigned int hardwareRemoteBehavior; // @synthesize hardwareRemoteBehavior=_hardwareRemoteBehavior;
@property(retain, nonatomic) MRDTaskAssertion *currentTaskAssertion; // @synthesize currentTaskAssertion=_currentTaskAssertion;
@property(readonly, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly, nonatomic) MRXPCConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) __weak id <MRDXPCMessageHandling> messageHandler; // @synthesize messageHandler=_messageHandler;
- (void)_postNotification:(id)arg1;	// IMP=0x001000000012a219
- (void)_resumeConnection;	// IMP=0x0010000000129d57
- (void)_wakeDevice:(_Bool)arg1 dismissScreenSaver:(_Bool)arg2 reason:(id)arg3;	// IMP=0x0010000000129d11
- (id)_runAssertionName;	// IMP=0x0010000000129cd7
- (void)_invalidate;	// IMP=0x0010000000129c7d
- (void)_handleXPCMessage:(id)arg1;	// IMP=0x0010000000129c0b
- (void)connectionDidResume:(id)arg1;	// IMP=0x0010000000129bf9
- (id)createNowPlayingClient;	// IMP=0x0010000000129b7e
- (void)_relayXPCMessage:(id)arg1 andReply:(_Bool)arg2 resultCallback:(CDUnknownBlockType)arg3;	// IMP=0x0010000000129629
- (void)relayXPCMessage:(id)arg1 andReply:(_Bool)arg2 resultCallback:(CDUnknownBlockType)arg3;	// IMP=0x001000000012942e
- (void)relayXPCMessage:(id)arg1 andReply:(_Bool)arg2;	// IMP=0x0010000000129419
- (void)sendRemoteControlCommandWithoutRedirection:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000012829c
- (void)sendRemoteControlCommand:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000127292
- (_Bool)takeAssertionAndBlessForReason:(id)arg1;	// IMP=0x00100000001271b8
- (_Bool)takeAssertion:(long long)arg1 forReason:(id)arg2 duration:(double)arg3;	// IMP=0x0010000000126c0f
- (void)setWantsAssertionsForNotificationsWithPlayerPath:(id)arg1;	// IMP=0x0010000000126b4f
- (_Bool)notificationRequiresTaskAssertionForPlayerPath:(id)arg1;	// IMP=0x0010000000126a82
- (void)postNotification:(id)arg1;	// IMP=0x001000000012692f
- (_Bool)isAllowedAccessToDataFromPlayerPath:(id)arg1;	// IMP=0x00100000001268fb
- (_Bool)_isAllowedAccessToDataFromPlayerPath:(id)arg1;	// IMP=0x00100000001268f3
- (void)flushPendingPlaybackSessionMigrateEvents:(CDUnknownBlockType)arg1;	// IMP=0x001000000012661c
- (_Bool)removePendingPlaybackSessionMigrateEvent:(id)arg1;	// IMP=0x0010000000126483
- (void)addPendingPlaybackSessionMigrateEvent:(id)arg1 playerPath:(id)arg2;	// IMP=0x0010000000126319
- (_Bool)isEntitledFor:(unsigned long long)arg1;	// IMP=0x00100000001262f7
@property(readonly, nonatomic) _Bool isMediaRemoteDaemon;
@property(readonly, nonatomic) _Bool canBeNowPlaying;
@property(copy, nonatomic) NSArray *applicationPickedRoutes;
- (_Bool)isEqual:(id)arg1;	// IMP=0x0010000000125ae9
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSString *processName;
@property(readonly, nonatomic) NSString *displayName;
@property(readonly, nonatomic) NSData *auditToken;
@property(readonly, nonatomic) CDStruct_6ad76789 realToken;
@property(readonly, nonatomic) unsigned int euid;
@property(readonly, nonatomic) int pid;
- (id)initWithConnection:(id)arg1;	// IMP=0x00100000001248f5

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

