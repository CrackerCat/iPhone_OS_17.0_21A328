//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE, NSArray, UIView, _TtC8Freeform11CRLUSDZItem, _TtC8Freeform13CRLUSDZLayout;

@interface _TtC8Freeform10CRLUSDZRep
{
    MISSING_TYPE *isInteractive;	// 8 = 0x8
    MISSING_TYPE *renderingStrategy;	// 9 = 0x9
    MISSING_TYPE *posterLoadingState;	// 1127183211 = 0x432f736b
    MISSING_TYPE *assetLoadingState;	// 1684960623 = 0x646e756f
    MISSING_TYPE *renderingState;	// 1919299182 = 0x72662e6e
    MISSING_TYPE *suppressInvalidateForRenderingStateChange;	// 0 = 0x0
    MISSING_TYPE *hideKnobsDueToBoundsUpdate;	// 0 = 0x0
    MISSING_TYPE *knobController;	// 0 = 0x0
    MISSING_TYPE *waitingToHideMiniFormatter;	// 0 = 0x0
    MISSING_TYPE *rendererHasBeenSuspended;	// 0 = 0x0
    MISSING_TYPE *cachedContentPlatformView;	// 0 = 0x0
    MISSING_TYPE *currentErrorView;	// 0 = 0x0
    MISSING_TYPE *externallySetAlpha;	// 0 = 0x0
    MISSING_TYPE *spinnerViewXConstraint;	// 0 = 0x0
    MISSING_TYPE *spinnerViewYConstraint;	// 0 = 0x0
    MISSING_TYPE *$__lazy_storage_$_spinnerView;	// 0 = 0x0
    MISSING_TYPE *spinnerViewSize;	// 0 = 0x0
    MISSING_TYPE *spinnerViewHiddenBecauseTooSmall;	// 0 = 0x0
    MISSING_TYPE *isZooming;	// 0 = 0x0
    MISSING_TYPE *isResizing;	// 0 = 0x0
}

- (void).cxx_destruct;	// IMP=0x0020000000b4d750
- (void)drawInContext:(struct CGContext *)arg1;	// IMP=0x0010000000b4cf30
- (void)selectionPathDidChangeWithNotification:(id)arg1;	// IMP=0x0010000000b4cd80
- (void)willBeRemoved;	// IMP=0x0010000000b4be50
@property(nonatomic, readonly) _TtC8Freeform13CRLUSDZLayout *usdzLayout;
@property(nonatomic, readonly) _TtC8Freeform11CRLUSDZItem *usdzItem;
- (void)canvasDidScroll:(id)arg1;	// IMP=0x0010000000b4bab0
- (void)canvasWillScroll:(id)arg1;	// IMP=0x0010000000b4baa0
- (void)dynamicOperationDidEnd;	// IMP=0x0010000000b4ba80
- (void)dynamicOperationDidBeginWithRealTimeCommands:(_Bool)arg1;	// IMP=0x0010000000b4ba20
- (void)dynamicResizeDidEndWithTracker:(id)arg1;	// IMP=0x0010000000b4b9d0
- (id)dynamicResizeDidBegin;	// IMP=0x0010000000b4b800
- (void)dynamicDragDidEnd;	// IMP=0x0010000000b4b7e0
- (void)dynamicDragDidBegin;	// IMP=0x0010000000b4b760
- (void)didUpdateRenderable:(id)arg1;	// IMP=0x0010000000b4b710
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x0010000000b4adc0
- (_Bool)containsPoint:(struct CGPoint)arg1 withPrecision:(_Bool)arg2;	// IMP=0x0010000000b4ad60
- (void)prepareForPencilKitSnapshotting;	// IMP=0x0010000000b4a9d0
- (void)becameNotSelected;	// IMP=0x0010000000b4a470
- (void)becameSelected;	// IMP=0x0010000000b49f40
@property(nonatomic, readonly) struct CGRect frameInUnscaledCanvasForMarqueeSelecting;
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;	// IMP=0x0010000000b49ae0
- (void)updateRenderableGeometryFromLayout:(id)arg1;	// IMP=0x0010000000b49860
- (void)processChangedProperty:(unsigned long long)arg1;	// IMP=0x0010000000b49240
@property(nonatomic, readonly) NSArray *additionalRenderablesOverRenderable;
@property(nonatomic, readonly) _Bool directlyManagesContentPlatformView;
- (void)viewScaleDidChange;	// IMP=0x0010000000b48f50
- (void)handleFadeInForZoom;	// IMP=0x0010000000b48dc0
- (void)handleFadeOutForZoom;	// IMP=0x0010000000b48c80
- (void)handleSpinnerTapWithSender:(id)arg1;	// IMP=0x0010000000b48880
@property(nonatomic, readonly) UIView *contentPlatformView;
@property(nonatomic, readonly) _Bool shouldSuppressSelectionHighlightDuringMultiselection;
@property(nonatomic, readonly) _Bool shouldShowSelectionHighlight;
@property(nonatomic, readonly) _Bool canBeOccluded;
@property(nonatomic, readonly) _Bool occludesSelectedRep;
@property(nonatomic, readonly) _Bool wantsContentPlatformViewEventHandling;
- (void)applicationDidEnterBackground;	// IMP=0x0010000000b472a0
- (void)resumeRendering;	// IMP=0x0010000000b47150
- (void)interruptRendering;	// IMP=0x0010000000b46f00
- (void)hideMiniFormatterIfNecessary;	// IMP=0x0010000000b46ca0
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x0010000000b468f0
@property(nonatomic, readonly) _Bool wantsToHandleTapsWhenLocked;
@property(nonatomic, readonly) _Bool manuallyControlsMiniFormatter;
- (void)dynamicRotateDidEndWithTracker:(id)arg1;	// IMP=0x0010000000b467c0
- (void)dynamicallyRotatingWithTracker:(id)arg1;	// IMP=0x0010000000b467a0
- (void)dynamicRotateDidBegin;	// IMP=0x0010000000b46730
@property(nonatomic, readonly) _Bool shouldShowKnobs;
@property(nonatomic, readonly) _Bool forcesPlacementOnTop;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;	// IMP=0x0010000000b3b730
@property(nonatomic, readonly) _Bool wantsToHandleDoubleTapsWhenLocked;
- (void)didExitPreviewMode;	// IMP=0x0010000000f0a970
- (void)enterPreviewMode;	// IMP=0x0010000000f0a940

@end

