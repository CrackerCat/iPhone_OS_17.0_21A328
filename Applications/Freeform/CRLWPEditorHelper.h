//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRLInteractiveCanvasController, CRLWPSelection, MISSING_TYPE, NSMutableDictionary, _TtC8Freeform11CRLWPEditor;
@protocol CRLWPTextSource;

@interface CRLWPEditorHelper : NSObject
{
    _Bool _selectionAnchorEdge;	// 8 = 0x8
    _Bool _selectionLastModifiedWithKeyboard;	// 9 = 0x9
    _Bool _continueKillRing;	// 10 = 0xa
    _TtC8Freeform11CRLWPEditor *_editor;	// 16 = 0x10
    CRLWPSelection *_anchorSelection;	// 24 = 0x18
    unsigned long long _selectionAnchor;	// 32 = 0x20
    id <CRLWPTextSource> _textSource;	// 40 = 0x28
    CRLInteractiveCanvasController *_interactiveCanvasController;	// 48 = 0x30
    NSMutableDictionary *_autocorrectedEntries;	// 56 = 0x38
    unsigned long long _lastChangedCharIndex;	// 64 = 0x40
    MISSING_TYPE *_correctionCharIndexToIgnoreHUD;	// 72 = 0x48
    struct _NSRange _emacsMarkRange;	// 80 = 0x50
    struct _NSRange _lastAutocorrectionRange;	// 96 = 0x60
}

- (void).cxx_destruct;	// IMP=0x00200000003be7be
@property(nonatomic) struct _NSRange lastAutocorrectionRange; // @synthesize lastAutocorrectionRange=_lastAutocorrectionRange;
@property(nonatomic) unsigned long long correctionCharIndexToIgnoreHUD; // @synthesize correctionCharIndexToIgnoreHUD=_correctionCharIndexToIgnoreHUD;
@property(nonatomic) unsigned long long lastChangedCharIndex; // @synthesize lastChangedCharIndex=_lastChangedCharIndex;
@property(retain, nonatomic) NSMutableDictionary *autocorrectedEntries; // @synthesize autocorrectedEntries=_autocorrectedEntries;
@property(retain, nonatomic) CRLInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=_interactiveCanvasController;
@property(retain, nonatomic) id <CRLWPTextSource> textSource; // @synthesize textSource=_textSource;
@property(nonatomic) _Bool continueKillRing; // @synthesize continueKillRing=_continueKillRing;
@property(nonatomic) struct _NSRange emacsMarkRange; // @synthesize emacsMarkRange=_emacsMarkRange;
@property(nonatomic) _Bool selectionLastModifiedWithKeyboard; // @synthesize selectionLastModifiedWithKeyboard=_selectionLastModifiedWithKeyboard;
@property(nonatomic) _Bool selectionAnchorEdge; // @synthesize selectionAnchorEdge=_selectionAnchorEdge;
@property(nonatomic) unsigned long long selectionAnchor; // @synthesize selectionAnchor=_selectionAnchor;
@property(retain, nonatomic) CRLWPSelection *anchorSelection; // @synthesize anchorSelection=_anchorSelection;
@property(nonatomic) __weak _TtC8Freeform11CRLWPEditor *editor; // @synthesize editor=_editor;
- (unsigned long long)p_indexToTransposableCharacterStartingAtIndex:(unsigned long long)arg1 filterStorage:(id)arg2 searchTowardsStorageStart:(_Bool)arg3;	// IMP=0x00100000003be5be
- (long long)p_layoutIndexForCharIndex:(unsigned long long)arg1 leadingEdge:(_Bool)arg2;	// IMP=0x00100000003be560
- (unsigned long long)p_selectionEdgeToMutateWithLeadingEdge:(_Bool *)arg1 Direction:(long long)arg2 newAnchor:(unsigned long long *)arg3 anchorLeadingEdge:(_Bool *)arg4;	// IMP=0x00100000003bd6a8
- (unsigned long long)p_selectionEdgeToMutateWithDirection:(long long)arg1 newAnchor:(unsigned long long *)arg2;	// IMP=0x00100000003bcb4b
- (unsigned long long)selectionEdgeToMutateWithDirection:(long long)arg1 newAnchor:(unsigned long long *)arg2;	// IMP=0x00100000003bcb39
- (unsigned long long)backwardSelectionAnchor;	// IMP=0x00100000003bcb03
- (unsigned long long)forwardSelectionAnchor;	// IMP=0x00100000003bcad0
- (unsigned long long)backwardSelectionEdge;	// IMP=0x00100000003bca9f
- (unsigned long long)forwardSelectionEdge;	// IMP=0x00100000003bca71
- (unsigned long long)p_oppositeEdgeForSelection:(id)arg1 withLeadingEdge:(_Bool *)arg2;	// IMP=0x00100000003bc582
- (_Bool)p_setSelectionWithCharIndex:(unsigned long long)arg1 andAnchor:(unsigned long long)arg2;	// IMP=0x00100000003bc483
- (_Bool)p_setVisualSelectionWithCharIndex:(unsigned long long)arg1 leadingEdge:(_Bool)arg2 andAnchor:(unsigned long long)arg3 andAnchorLeadingEdge:(_Bool)arg4;	// IMP=0x00100000003bc1b3
- (unsigned long long)getVisualInsertionPointIndexForString:(id)arg1 selection:(id)arg2;	// IMP=0x00100000003bb655
- (void)capitalizeWord:(id)arg1;	// IMP=0x00100000003bb509
- (void)lowercaseWord:(id)arg1;	// IMP=0x00100000003bb3bd
- (void)uppercaseWord:(id)arg1;	// IMP=0x00100000003bb271
- (void)p_transformWordWithActionString:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000003baa86
- (void)replaceRange:(struct _NSRange)arg1 withText:(id)arg2;	// IMP=0x00100000003ba9bd
- (void)p_replaceRange:(struct _NSRange)arg1 withText:(id)arg2 dictationAndAutocorrectionKey:(id)arg3 applyingDictationAlternative:(_Bool)arg4 restoreSelection:(id)arg5;	// IMP=0x00100000003b9cf1
- (_Bool)isACurrentEditor;	// IMP=0x00100000003b9c20
- (id)protectedSelectionBehaviorForCommand:(id)arg1;	// IMP=0x00100000003b9a92
- (void)p_removeAutocorrectionAtCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003b9a8c
- (_Bool)p_transposeRanges:(struct _NSRange)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x00100000003b8f01
- (void)transposeWords:(id)arg1;	// IMP=0x00100000003b8a49
- (void)transpose:(id)arg1;	// IMP=0x00100000003b8660
- (_Bool)p_filteredRangeCanBeTransposed:(struct _NSRange)arg1 inFilteredStorage:(id)arg2;	// IMP=0x00100000003b8648
- (_Bool)p_storageRangeCanBeTransposed:(struct _NSRange)arg1 storage:(id)arg2;	// IMP=0x00100000003b8640
- (void)swapWithMark:(id)arg1;	// IMP=0x00100000003b851a
- (void)selectToMark:(id)arg1;	// IMP=0x00100000003b83e0
- (void)deleteToMark:(id)arg1;	// IMP=0x00100000003b8285
- (struct _NSRange)p_sanitizeMark;	// IMP=0x00100000003b81aa
- (void)setMark:(id)arg1;	// IMP=0x00100000003b80e9
- (void)yankAndSelect:(id)arg1;	// IMP=0x00100000003b7f37
- (void)yank:(id)arg1;	// IMP=0x00100000003b7dba
- (void)deleteToEndOfParagraph:(id)arg1;	// IMP=0x00100000003b7ab4
- (void)deleteToBeginningOfParagraph:(id)arg1;	// IMP=0x00100000003b795d
- (void)deleteToEndOfLine:(id)arg1;	// IMP=0x00100000003b7809
- (void)deleteToBeginningOfLine:(id)arg1;	// IMP=0x00100000003b76b2
- (void)deleteWordBackward:(id)arg1;	// IMP=0x00100000003b7550
- (void)deleteWordForward:(id)arg1;	// IMP=0x00100000003b73f1
- (void)deleteBackwardByDecomposingPreviousCharacter:(id)arg1;	// IMP=0x00100000003b73aa
- (_Bool)wantsToReceiveTextInput;	// IMP=0x00100000003b7352
- (void)p_deleteSelectionBackward:(_Bool)arg1 decomposeCharacter:(_Bool)arg2 smart:(_Bool)arg3 kill:(_Bool)arg4;	// IMP=0x00100000003b680e
- (void)p_clearEditMenuFlags;	// IMP=0x00100000003b6808
- (void)clearMarkedRange;	// IMP=0x00100000003b6802
- (id)characterStyleForDeletedRange:(struct _NSRange)arg1;	// IMP=0x00100000003b674f
- (unsigned long long)getVisualDeletionIndexForSelection:(id)arg1 backward:(_Bool *)arg2;	// IMP=0x00100000003b5fec
- (const void *)p_lineFragmentWithCaretInfo:(out CDStruct_7549c2a6 *)arg1 forSelection:(id)arg2;	// IMP=0x00100000003b5868
- (_Bool)editorKeyboardLanguageIsRTL;	// IMP=0x00100000003b5804
- (id)editorKeyboardLanguage;	// IMP=0x00100000003b57fa
- (void)p_deleteBackwardsOnEmptyListWithRange:(struct _NSRange)arg1 ignoreLevel:(_Bool)arg2;	// IMP=0x00100000003b57f4
- (id)styleProvider;	// IMP=0x00100000003b57ec
- (_Bool)areCollabUserActionsCurrentlyPermitted;	// IMP=0x00100000003b57e4
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;	// IMP=0x00100000003b578c
- (void)insertParagraphSeparator:(id)arg1;	// IMP=0x00100000003b5734
- (void)notifySelectionChangedWithFlags:(unsigned long long)arg1;	// IMP=0x00100000003b5564
- (void)complete:(id)arg1;	// IMP=0x00100000003b555e
- (_Bool)p_canReplaceSelection;	// IMP=0x00100000003b54ac
- (void)centerSelectionInVisibleArea:(id)arg1;	// IMP=0x00100000003b54a6
- (struct CGRect)p_viewRectForSelection:(id)arg1;	// IMP=0x00100000003b4f5f
- (void)moveToEndOfDocumentAndModifySelection:(id)arg1;	// IMP=0x00100000003b4e8f
- (void)moveToBeginningOfDocumentAndModifySelection:(id)arg1;	// IMP=0x00100000003b4e07
- (void)moveToEndOfDocument:(id)arg1;	// IMP=0x00100000003b4d1c
- (void)moveToBeginningOfDocument:(id)arg1;	// IMP=0x00100000003b4c79
- (void)moveParagraphBackwardAndModifySelection:(id)arg1;	// IMP=0x00100000003b4b03
- (void)moveParagraphForwardAndModifySelection:(id)arg1;	// IMP=0x00100000003b49c5
- (void)moveParagraphBackward:(id)arg1;	// IMP=0x00100000003b4968
- (void)moveParagraphForward:(id)arg1;	// IMP=0x00100000003b490b
- (void)moveToEndOfParagraphAndModifySelection:(id)arg1;	// IMP=0x00100000003b4725
- (void)moveToBeginningOfParagraphAndModifySelection:(id)arg1;	// IMP=0x00100000003b463f
- (void)moveToEndOfParagraph:(id)arg1;	// IMP=0x00100000003b4471
- (void)moveToBeginningOfParagraph:(id)arg1;	// IMP=0x00100000003b4378
- (void)moveToEndOfLineAndModifySelection:(id)arg1;	// IMP=0x00100000003b41f5
- (void)moveToBeginningOfLineAndModifySelection:(id)arg1;	// IMP=0x00100000003b4112
- (void)moveToEndOfLine:(id)arg1;	// IMP=0x00100000003b3f67
- (void)moveToBeginningOfLine:(id)arg1;	// IMP=0x00100000003b3e71
- (void)moveToRightEndOfLineAndModifySelection:(id)arg1;	// IMP=0x00100000003b3e5a
- (void)moveToLeftEndOfLineAndModifySelection:(id)arg1;	// IMP=0x00100000003b3e46
- (void)p_extendToEndOfLineRight:(_Bool)arg1;	// IMP=0x00100000003b3c15
- (void)moveToRightEndOfLine:(id)arg1;	// IMP=0x00100000003b3bfe
- (void)moveToLeftEndOfLine:(id)arg1;	// IMP=0x00100000003b3bea
- (void)p_moveToEndOfLineRight:(_Bool)arg1;	// IMP=0x00100000003b39a7
- (void)p_setSelectionFromKeyboardWithRange:(struct _NSRange)arg1 leadingEdge:(_Bool)arg2 endOfLine:(_Bool)arg3 allowEndOfLineChange:(_Bool)arg4;	// IMP=0x00100000003b33f9
- (void)setSelectionFromKeyboardWithRange:(struct _NSRange)arg1 leadingEdge:(_Bool)arg2 endOfLine:(_Bool)arg3;	// IMP=0x00100000003b33d7
- (void)selectWordWithFlags:(unsigned long long)arg1;	// IMP=0x00100000003b317a
- (void)selectWord:(id)arg1;	// IMP=0x00100000003b3166
- (void)selectLine:(id)arg1;	// IMP=0x00100000003b2dab
- (void)selectParagraph:(id)arg1;	// IMP=0x00100000003b2c16
- (void)moveWordBackwardAndModifySelection:(id)arg1;	// IMP=0x00100000003b2bff
- (void)moveWordForwardAndModifySelection:(id)arg1;	// IMP=0x00100000003b2beb
- (void)moveWordAndModifySelectionInStorageDirection:(int)arg1;	// IMP=0x00100000003b2a12
- (void)moveWordBackward:(id)arg1;	// IMP=0x00100000003b28b8
- (void)moveWordForward:(id)arg1;	// IMP=0x00100000003b2774
- (_Bool)p_isCharIndex:(unsigned long long)arg1 withEolAffinity:(_Bool)arg2 atBoundary:(int)arg3 inDirection:(long long)arg4;	// IMP=0x00100000003b1edb
- (long long)p_writingDirectionForCharAtIndex:(unsigned long long)arg1;	// IMP=0x00100000003b1c12
- (_Bool)p_isCharIndex:(unsigned long long)arg1 withinTextUnit:(int)arg2 inDirection:(long long)arg3;	// IMP=0x00100000003b188b
- (void)p_moveWordAndModifySelectionInLayoutDirection:(int)arg1;	// IMP=0x00100000003b164e
- (void)moveWordLeftAndModifySelection:(id)arg1;	// IMP=0x00100000003b1637
- (void)moveWordRightAndModifySelection:(id)arg1;	// IMP=0x00100000003b1620
- (void)moveWordLeft:(id)arg1;	// IMP=0x00100000003b1609
- (void)moveWordRight:(id)arg1;	// IMP=0x00100000003b15f2
- (void)moveWordInLayoutDirection:(int)arg1;	// IMP=0x00100000003b1215
- (_Bool)p_isEdgeAtCharIndex:(unsigned long long)arg1 leadingEdge:(_Bool)arg2 withinWordInDirection:(long long)arg3;	// IMP=0x00100000003b1148
- (void)moveDownAndModifySelection:(id)arg1;	// IMP=0x00100000003b0fd4
- (void)moveUpAndModifySelection:(id)arg1;	// IMP=0x00100000003b0dc1
- (void)moveDown:(id)arg1;	// IMP=0x00100000003b0af1
- (void)moveUp:(id)arg1;	// IMP=0x00100000003b09b3
- (double)preferredOffsetFromSelection:(id)arg1;	// IMP=0x00100000003b09a5
- (void)moveForwardAndModifySelection:(id)arg1;	// IMP=0x00100000003b08f0
- (void)moveBackwardAndModifySelection:(id)arg1;	// IMP=0x00100000003b0835
- (void)moveLeftAndModifySelection:(id)arg1;	// IMP=0x00100000003b0821
- (void)moveRightAndModifySelection:(id)arg1;	// IMP=0x00100000003b080a
- (void)p_moveAndModifySelectionRight:(_Bool)arg1;	// IMP=0x00100000003b00da
- (_Bool)p_adjustSelection:(id)arg1 forWordWithCharIndex:(unsigned long long)arg2;	// IMP=0x00100000003afe13
- (id)logicalToVisualSelection:(id)arg1;	// IMP=0x00100000003af0a5
- (struct _NSRange)rangeOfWordEnclosingCharIndex:(unsigned long long)arg1 backward:(_Bool)arg2;	// IMP=0x00100000003aefb9
- (void)moveLeft:(id)arg1;	// IMP=0x00100000003aefa2
- (void)moveBackward:(id)arg1;	// IMP=0x00100000003aeecc
- (void)moveRight:(id)arg1;	// IMP=0x00100000003aeeb8
- (void)p_moveInLineLayoutDirectionLeft:(_Bool)arg1;	// IMP=0x00100000003ae9ec
- (unsigned long long)p_leftEdgeForSelection:(id)arg1 withLeadingEdge:(inout _Bool *)arg2;	// IMP=0x00100000003ae2de
- (unsigned long long)p_rightEdgeForSelection:(id)arg1 withLeadingEdge:(inout _Bool *)arg2;	// IMP=0x00100000003adf37
- (void)moveForward:(id)arg1;	// IMP=0x00100000003ade64
- (unsigned long long)charIndexMovingByCharacterFromCharIndex:(unsigned long long)arg1 leadingEdge:(inout _Bool *)arg2 inDirection:(long long)arg3 skipAnchors:(_Bool)arg4 useLeadingEdgeOfNextLine:(_Bool)arg5;	// IMP=0x00100000003ad185
- (unsigned long long)p_charIndexByMovingCharIndex:(unsigned long long)arg1 withEolAffinity:(inout _Bool *)arg2 toBoundary:(int)arg3 inDirection:(long long)arg4 preferPosition:(inout double *)arg5 isLeadingEdge:(inout _Bool *)arg6;	// IMP=0x00100000003ab8f6
- (unsigned long long)charIndexForEndOfLineFromCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003ab8b4
- (unsigned long long)charIndexForBeginningOfLineFromCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003ab870
- (unsigned long long)p_charIndexByMovingPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3 preferPosition:(double *)arg4 outEolAffinity:(int *)arg5;	// IMP=0x00100000003ab62a
- (unsigned long long)charIndexByMovingPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3 preferPosition:(double *)arg4;	// IMP=0x00100000003ab607
- (unsigned long long)p_layoutOrderCharIndexForCaretCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;	// IMP=0x00000000003ab27d
- (unsigned long long)caretCharIndexForLayoutOrderCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;	// IMP=0x00100000003aaef3
- (void)withLineFragmentForCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2 performBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000003aab55
- (void)p_withLayoutTargetForCharIndex:(unsigned long long)arg1 eolAffinity:(_Bool)arg2 performBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000003aaaa6
- (id)layout;	// IMP=0x00100000003aa985
- (void)p_withLineIndexForCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2 performBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000003aa6e4
- (unsigned long long)p_lineIndexForMovingCharIndex:(unsigned long long)arg1 column:(id *)arg2 up:(_Bool)arg3 atStart:(_Bool)arg4 eol:(inout _Bool *)arg5;	// IMP=0x00100000003a99c4
- (unsigned long long)p_lastVisibleCharIndexForCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003a96cc
- (_Bool)p_withLineFragmentsForLogicalLineContainingCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2 performBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000003a917a
- (const void *)p_lineFragmentForCharIndex:(unsigned long long)arg1 column:(id *)arg2 eol:(_Bool)arg3;	// IMP=0x00100000003a9088
- (unsigned long long)charIndexMovingByWordFromCharIndex:(unsigned long long)arg1 leadingEdge:(inout _Bool *)arg2 inDirection:(long long)arg3;	// IMP=0x00100000003a87e2
- (struct _NSRange)availableSelectionRangeForCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003a86f5
- (struct _NSRange)selectionRangeForCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003a86e3
- (unsigned long long)p_adjustedCharIndexForWordTestingFromCharIndex:(unsigned long long)arg1 leadingEdge:(_Bool)arg2 forDirection:(long long)arg3;	// IMP=0x00100000003a7f30
- (void)p_adjustSelection:(id)arg1 withOtherSelection:(id)arg2 textSelectionGranularity:(unsigned long long)arg3;	// IMP=0x00100000003a7787
- (struct _NSRange)adjustVisualSelection:(id)arg1 withOtherSelection:(id)arg2 outLeadingEdge:(out _Bool *)arg3 outCaretAffinity:(out int *)arg4;	// IMP=0x00100000003a6e5c
- (unsigned long long)p_leftCharForInsertion:(const CDStruct_43c8ebdc *)arg1;	// IMP=0x00100000003a6cf7
- (void)p_selection:(id)arg1 toGlyphRange:(out CDStruct_43c8ebdc *)arg2;	// IMP=0x00100000003a6903
- (id)calculateVisualRunsFromSelection:(id)arg1 updateControllerSelection:(_Bool)arg2;	// IMP=0x00100000003a5356
- (_Bool)p_isLayoutLeftToRightAtCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003a52b3
- (struct _NSRange)p_expandParagraphRangeForEnumerator:(inout struct CRLWPParagraphEnumerator *)arg1;	// IMP=0x00100000003a5219
- (unsigned long long)charIndexMovingByCharacterFromCharIndex:(unsigned long long)arg1 leadingEdge:(inout _Bool *)arg2 inDirection:(long long)arg3 skipAnchors:(_Bool)arg4;	// IMP=0x00100000003a51f7
- (unsigned long long)charIndexMovingByCharacterFromCharIndex:(unsigned long long)arg1 inDirection:(long long)arg2;	// IMP=0x00100000003a4f0c
- (unsigned long long)charIndexMovingBackwardByCharacterFromCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003a4ef5
- (unsigned long long)charIndexMovingForwardByCharacterFromCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003a4ee1
- (struct __CFStringTokenizer *)createTokenizerForCharIndex:(unsigned long long)arg1 outTokenizerRange:(out struct _NSRange *)arg2;	// IMP=0x00100000003a4dde
- (unsigned long long)p_moveFromCharIndex:(inout unsigned long long *)arg1 leadingEdge:(inout _Bool *)arg2 tokenizerRef:(inout struct __CFStringTokenizer **)arg3 tokenizerRange:(inout struct _NSRange *)arg4 direction:(long long)arg5 currentWordRange:(struct _NSRange)arg6 newWordRange:(out struct _NSRange *)arg7 reasonToStop:(unsigned long long)arg8;	// IMP=0x00100000003a482c
- (void)setSelectionWithRange:(struct _NSRange)arg1 endOfLine:(_Bool)arg2 withFlags:(unsigned long long)arg3;	// IMP=0x00100000003a4236
- (void)setSelectionWithRange:(struct _NSRange)arg1 endOfLine:(_Bool)arg2;	// IMP=0x00100000003a421e
- (id)selection;	// IMP=0x00100000003a4134
- (struct CRLWPParagraphEnumerator)paragraphEnumeratorAtCharIndex:(unsigned long long)arg1 styleProvider:(id)arg2;	// IMP=0x00100000003a4000
- (struct CRLWPParagraphEnumerator)paragraphEnumeratorAtCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003a3fde
- (Class)wpSelectionClass;	// IMP=0x00100000003a3fcd
- (struct _NSRange)p_rangeForSelectionAtCharIndex:(unsigned long long)arg1 caretIndex:(unsigned long long)arg2 handleNextWordWhitespace:(_Bool)arg3;	// IMP=0x00100000003a38ff
- (struct _NSRange)wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2 includeHyphenation:(_Bool)arg3;	// IMP=0x00100000003a37fd
- (struct _NSRange)wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;	// IMP=0x00100000003a37e8
- (struct _NSRange)scanLeftForWordAtCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003a3702
- (_Bool)hasWhitespaceBoundedWordAtSelection:(id)arg1;	// IMP=0x00100000003a2d41
- (struct _NSRange)whiteSpaceRangeAtCharIndex:(unsigned long long)arg1 includingBreaks:(_Bool)arg2;	// IMP=0x00100000003a2ae2
- (struct _NSRange)whiteSpaceRangeAtCharIndex:(unsigned long long)arg1;	// IMP=0x00100000003a2acb
- (struct _NSRange)rangeForSelectionAtCharIndex:(unsigned long long)arg1 caretIndex:(unsigned long long)arg2;	// IMP=0x00100000003a2ab3
- (struct _NSRange)rangeForSelectionAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;	// IMP=0x00100000003a28c9
- (id)editorController;	// IMP=0x00100000003a2865
- (id)initWithTextSource:(id)arg1 icc:(id)arg2;	// IMP=0x00100000003a27a0

@end

