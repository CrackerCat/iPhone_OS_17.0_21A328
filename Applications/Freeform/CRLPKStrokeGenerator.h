//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface CRLPKStrokeGenerator : NSObject
{
    vector_7ea34920 _drawPoints;	// 8 = 0x8
    struct vector<_CRLPKStrokePoint, std::allocator<_CRLPKStrokePoint>> _outputPoints;	// 32 = 0x20
    long long _outputImmutableCount;	// 56 = 0x38
    _Bool _inputHasChanged;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_inputQueue;	// 72 = 0x48
    MISSING_TYPE *_currentStroke;	// 80 = 0x50
    long long _currentInputType;	// 88 = 0x58
    unsigned long long _immutableCount;	// 96 = 0x60
    vector_7ea34920 _updatedDrawPoints;	// 104 = 0x68
    _Bool _drawingEndedButNotFinished;	// 128 = 0x80
    NSObject<OS_dispatch_semaphore> *_drawingWaitForFinishSemaphore;	// 136 = 0x88
    _Bool _useRuler;	// 144 = 0x90
    _Bool _isSnappedToRulerTopSide;	// 145 = 0x91
    _Bool _canSnapToRuler;	// 146 = 0x92
    _Bool _isSnappedToRuler;	// 147 = 0x93
    double _rulerWidth;	// 152 = 0x98
    double _strokeMaxForce;	// 160 = 0xa0
    NSObject<OS_dispatch_queue> *_outputQueue;	// 168 = 0xa8
    void *_inputProvider;	// 176 = 0xb0
    void *_pixelSmoothingFilter;	// 184 = 0xb8
    void *_pointReductionFilter;	// 192 = 0xc0
    void *_startHookFilter;	// 200 = 0xc8
    void *_endHookFilter;	// 208 = 0xd0
    void *_velocityFilter;	// 216 = 0xd8
    void *_inputSmoother;	// 224 = 0xe0
    void *_inputToOutputFilter;	// 232 = 0xe8
    void *_startCapFilter;	// 240 = 0xf0
    void *_azimuthFilter;	// 248 = 0xf8
    void *_endCapFilter;	// 256 = 0x100
    void *_rulerExtremaFilter;	// 264 = 0x108
    void *_estimatedAltitudeAndAzimuthFilter;	// 272 = 0x110
    void *_compressionFilter;	// 280 = 0x118
    void *_decompressionFilter;	// 288 = 0x120
    double _eraserIndicatorAlpha;	// 296 = 0x128
    double _inputScale;	// 304 = 0x130
    double _touchSensitivity;	// 312 = 0x138
    void *_noiseSmoother;	// 320 = 0x140
    struct CGPoint _lastPoint;	// 328 = 0x148
    struct CGAffineTransform _rulerTransform;	// 344 = 0x158
}

+ (vector_7ea34920)inputPointsFromPath:(struct CGPath *)arg1;	// IMP=0x00200000001b810e
+ (struct _CRLPKStrokePoint)outputPointFromInputPoint:(CDStruct_f17e9403)arg1;	// IMP=0x00100000001b6adb
+ (void)initialize;	// IMP=0x00100000001b5213
- (id).cxx_construct;	// IMP=0x00200000001b8f1a
- (void).cxx_destruct;	// IMP=0x00100000001b8e9c
@property(nonatomic) void *noiseSmoother; // @synthesize noiseSmoother=_noiseSmoother;
@property(nonatomic) double touchSensitivity; // @synthesize touchSensitivity=_touchSensitivity;
@property(nonatomic) double inputScale; // @synthesize inputScale=_inputScale;
@property double eraserIndicatorAlpha; // @synthesize eraserIndicatorAlpha=_eraserIndicatorAlpha;
@property _Bool isSnappedToRuler; // @synthesize isSnappedToRuler=_isSnappedToRuler;
@property(nonatomic) void *decompressionFilter; // @synthesize decompressionFilter=_decompressionFilter;
@property(nonatomic) void *compressionFilter; // @synthesize compressionFilter=_compressionFilter;
@property(nonatomic) void *estimatedAltitudeAndAzimuthFilter; // @synthesize estimatedAltitudeAndAzimuthFilter=_estimatedAltitudeAndAzimuthFilter;
@property(nonatomic) void *rulerExtremaFilter; // @synthesize rulerExtremaFilter=_rulerExtremaFilter;
@property(nonatomic) void *endCapFilter; // @synthesize endCapFilter=_endCapFilter;
@property(nonatomic) void *azimuthFilter; // @synthesize azimuthFilter=_azimuthFilter;
@property(nonatomic) void *startCapFilter; // @synthesize startCapFilter=_startCapFilter;
@property(nonatomic) void *inputToOutputFilter; // @synthesize inputToOutputFilter=_inputToOutputFilter;
@property(nonatomic) void *inputSmoother; // @synthesize inputSmoother=_inputSmoother;
@property(nonatomic) void *velocityFilter; // @synthesize velocityFilter=_velocityFilter;
@property(nonatomic) void *endHookFilter; // @synthesize endHookFilter=_endHookFilter;
@property(nonatomic) void *startHookFilter; // @synthesize startHookFilter=_startHookFilter;
@property(nonatomic) void *pointReductionFilter; // @synthesize pointReductionFilter=_pointReductionFilter;
@property(nonatomic) void *pixelSmoothingFilter; // @synthesize pixelSmoothingFilter=_pixelSmoothingFilter;
@property(nonatomic) void *inputProvider; // @synthesize inputProvider=_inputProvider;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *outputQueue; // @synthesize outputQueue=_outputQueue;
@property struct CGPoint lastPoint; // @synthesize lastPoint=_lastPoint;
@property(nonatomic) double strokeMaxForce; // @synthesize strokeMaxForce=_strokeMaxForce;
@property(nonatomic) _Bool canSnapToRuler; // @synthesize canSnapToRuler=_canSnapToRuler;
@property(nonatomic) _Bool isSnappedToRulerTopSide; // @synthesize isSnappedToRulerTopSide=_isSnappedToRulerTopSide;
@property(nonatomic) double rulerWidth; // @synthesize rulerWidth=_rulerWidth;
@property(nonatomic) _Bool useRuler; // @synthesize useRuler=_useRuler;
@property(nonatomic) struct CGAffineTransform rulerTransform; // @synthesize rulerTransform=_rulerTransform;
- (void)whenFinishedProcessingPointsCallCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000001b8a27
- (id)strokeFromPath:(struct CGPath *)arg1 inputScale:(double)arg2;	// IMP=0x00100000001b8782
- (void)drawingCancelledWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000001b7fa9
- (void)drawingEndedWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000001b7b3a
- (void)_drawingAddPoint:(CDStruct_f17e9403)arg1;	// IMP=0x00100000001b7934
- (void)addPoint:(CDStruct_f17e9403)arg1;	// IMP=0x00100000001b77cd
- (void)addPoints:(vector_7ea34920)arg1;	// IMP=0x00100000001b7599
- (void)removePredictedTouches;	// IMP=0x00100000001b753f
- (void)updateImmutableCount;	// IMP=0x00100000001b7452
- (void)drawingUpdateAllPoints;	// IMP=0x00100000001b72b0
- (void)drawingUpdatePoint:(CDStruct_f17e9403)arg1;	// IMP=0x00100000001b707e
- (long long)fetchFilteredPointsFromIndex:(long long)arg1 intoVector:(void *)arg2;	// IMP=0x00100000001b6f24
- (struct _CRLPKStrokePoint)outputPoint:(CDStruct_f17e9403)arg1 baseValues:(struct _CRLPKStrokePoint)arg2;	// IMP=0x00100000001b6c3f
- (struct _CRLPKStrokePoint)outputCurrentStrokePoint:(CDStruct_f17e9403)arg1;	// IMP=0x00100000001b6b28
- (void)reset;	// IMP=0x00100000001b6a5a
- (unsigned long long)copyInputUpdatedRangeFromIndex:(unsigned long long)arg1 into:(void *)arg2;	// IMP=0x00100000001b6a2b
- (void *)getInputUpdatedRangeFromIndex:(inout unsigned long long *)arg1;	// IMP=0x00100000001b69cf
- (void *)getUpdatedRangeFromIndex:(inout unsigned long long *)arg1;	// IMP=0x00100000001b6901
- (void *)outputFilter;	// IMP=0x00100000001b68ef
- (void)setPointReductionFilterThresholdMultiplier:(double)arg1;	// IMP=0x00100000001b66ce
- (void)setSmoothingThresholdMultiplier:(double)arg1;	// IMP=0x00100000001b66bd
@property(readonly) _Bool lastPointIsMasked;
- (void)updateRulerSnapping;	// IMP=0x00100000001b6382
- (struct CGPoint)snapPointToRuler:(struct CGPoint)arg1;	// IMP=0x00100000001b62ee
- (void)maskToRuler;	// IMP=0x00100000001b6228
- (void)snapToRuler;	// IMP=0x00100000001b616e
- (_Bool)shouldSnapPointToRuler:(struct CGPoint)arg1;	// IMP=0x00100000001b6088
- (double)distanceToRulerCenter:(struct CGPoint)arg1;	// IMP=0x00100000001b5f4f
- (struct CGPoint)getRulerSnapLineOriginAndTangent:(struct CGPoint *)arg1 andNormal:(struct CGPoint *)arg2;	// IMP=0x00100000001b5def
- (void)allowSnappingToRuler:(struct CGAffineTransform)arg1 width:(double)arg2;	// IMP=0x00100000001b5d07
- (void)drawingBeganWithStroke:(id)arg1 inputType:(long long)arg2 inputScale:(double)arg3 start:(CDUnknownBlockType)arg4;	// IMP=0x00100000001b5a12
- (void)dealloc;	// IMP=0x00100000001b58c1
- (id)init;	// IMP=0x00100000001b524e

@end

