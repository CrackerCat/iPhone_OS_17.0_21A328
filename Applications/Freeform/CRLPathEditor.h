//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CRLCanvasRep, CRLCanvasShapeRenderable, CRLCommandSelectionBehavior, CRLEditorController, CRLPathKnob, NSArray, NSSet, NSString, UIInputViewController, _TtC8Freeform12CRLBoardItem, _TtC8Freeform21CRLEditingCoordinator;
@protocol CRLPathEditableRep, CRLSearchReference, CRLTextInputReceiving, CRLTextSelecting, _TtP8Freeform20CRLKeyInputReceiving_;

@interface CRLPathEditor
{
    CRLCanvasShapeRenderable *_ghostPathRenderable;	// 8 = 0x8
    struct CGPoint _lastGhostPosition;	// 16 = 0x10
    _Bool _isInCommandGroup;	// 32 = 0x20
    CRLPathKnob *_hoveringKnob;	// 40 = 0x28
    _TtC8Freeform12CRLBoardItem *_creatingInfo;	// 48 = 0x30
    _Bool _willBecomeCurrentEditorAgain;	// 56 = 0x38
    CRLCommandSelectionBehavior *_insertSelectionBehavior;	// 64 = 0x40
    _Bool _isCreatingPath;	// 72 = 0x48
    _Bool _isCreatingReversed;	// 73 = 0x49
    _Bool _shouldCreateNewPath;	// 74 = 0x4a
    _Bool _resetAfterRebase;	// 75 = 0x4b
    _Bool _currentCommandsPathRelated;	// 76 = 0x4c
    _Bool endTextInputWhenKeyboardHides;	// 77 = 0x4d
    CDUnknownBlockType _pathCreateBlock;	// 80 = 0x50
    UIInputViewController *inputAccessoryViewController;	// 88 = 0x58
    NSArray *leadingBarButtonGroups;	// 96 = 0x60
    NSArray *trailingBarButtonGroups;	// 104 = 0x68
}

+ (void)initialize;	// IMP=0x0020000000217584
- (void).cxx_destruct;	// IMP=0x002000000021f808
@property(nonatomic) _Bool endTextInputWhenKeyboardHides; // @synthesize endTextInputWhenKeyboardHides;
@property(readonly, copy, nonatomic) NSArray *trailingBarButtonGroups; // @synthesize trailingBarButtonGroups;
@property(readonly, copy, nonatomic) NSArray *leadingBarButtonGroups; // @synthesize leadingBarButtonGroups;
@property(readonly, nonatomic) UIInputViewController *inputAccessoryViewController; // @synthesize inputAccessoryViewController;
@property(nonatomic) _Bool currentCommandsPathRelated; // @synthesize currentCommandsPathRelated=_currentCommandsPathRelated;
@property(nonatomic) _Bool resetAfterRebase; // @synthesize resetAfterRebase=_resetAfterRebase;
@property(nonatomic) _Bool shouldCreateNewPath; // @synthesize shouldCreateNewPath=_shouldCreateNewPath;
@property(nonatomic) _Bool isCreatingReversed; // @synthesize isCreatingReversed=_isCreatingReversed;
@property(nonatomic) _Bool isCreatingPath; // @synthesize isCreatingPath=_isCreatingPath;
@property(copy, nonatomic) CDUnknownBlockType pathCreateBlock; // @synthesize pathCreateBlock=_pathCreateBlock;
- (void)selectParent:(id)arg1;	// IMP=0x001000000021f6f1
- (void)insertBacktab:(id)arg1;	// IMP=0x001000000021f6da
- (void)insertTab:(id)arg1;	// IMP=0x001000000021f6c6
- (void)p_selectNextNode:(long long)arg1;	// IMP=0x001000000021eca1
- (id)nextEditorForSelection:(id)arg1 withNewEditorStack:(id)arg2 selectionPath:(id)arg3;	// IMP=0x001000000021ec99
- (_Bool)canBeginEditingRepOnDoubleTap:(id)arg1;	// IMP=0x001000000021ec91
- (long long)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x001000000021e8e9
- (_Bool)pathReturnsTrueForSelector:(SEL)arg1;	// IMP=0x001000000021e69a
- (void)moveRightAndModifySelection:(id)arg1;	// IMP=0x001000000021e67d
- (void)moveLeftAndModifySelection:(id)arg1;	// IMP=0x001000000021e660
- (void)moveDownAndModifySelection:(id)arg1;	// IMP=0x001000000021e643
- (void)moveUpAndModifySelection:(id)arg1;	// IMP=0x001000000021e626
- (void)moveRight:(id)arg1;	// IMP=0x001000000021e609
- (void)moveLeft:(id)arg1;	// IMP=0x001000000021e5ec
- (void)moveDown:(id)arg1;	// IMP=0x001000000021e5cf
- (void)moveUp:(id)arg1;	// IMP=0x001000000021e5b2
- (void)nudgeByDelta:(struct CGPoint)arg1;	// IMP=0x001000000021e362
- (void)deleteToEndOfParagraph:(id)arg1;	// IMP=0x001000000021e350
- (void)deleteToBeginningOfParagraph:(id)arg1;	// IMP=0x001000000021e33e
- (void)deleteWordForward:(id)arg1;	// IMP=0x001000000021e32c
- (void)deleteWordBackward:(id)arg1;	// IMP=0x001000000021e31a
- (void)deleteToEndOfLine:(id)arg1;	// IMP=0x001000000021e308
- (void)deleteToBeginningOfLine:(id)arg1;	// IMP=0x001000000021e2f6
- (void)deleteForward:(id)arg1;	// IMP=0x001000000021e2e4
- (void)deleteBackward:(id)arg1;	// IMP=0x001000000021e2d2
- (void)delete:(id)arg1;	// IMP=0x001000000021db0e
- (void)distributeNodesByEdge:(int)arg1;	// IMP=0x001000000021d270
- (void)alignNodesByEdge:(int)arg1;	// IMP=0x001000000021c94a
- (_Bool)pathHasSelectedNodes:(unsigned long long)arg1;	// IMP=0x001000000021c2c7
- (void)distributeDrawablesVertically:(id)arg1;	// IMP=0x001000000021c2b0
- (void)distributeDrawablesHorizontally:(id)arg1;	// IMP=0x001000000021c299
- (void)alignDrawablesByHorizontalCenter:(id)arg1;	// IMP=0x001000000021c282
- (void)alignDrawablesByBottomEdge:(id)arg1;	// IMP=0x001000000021c26b
- (void)alignDrawablesByTopEdge:(id)arg1;	// IMP=0x001000000021c254
- (void)alignDrawablesByVerticalCenter:(id)arg1;	// IMP=0x001000000021c23d
- (void)alignDrawablesByRightEdge:(id)arg1;	// IMP=0x001000000021c226
- (void)alignDrawablesByLeftEdge:(id)arg1;	// IMP=0x001000000021c212
- (void)close:(id)arg1;	// IMP=0x001000000021c0e1
- (void)join:(id)arg1;	// IMP=0x001000000021bfb0
- (void)split:(id)arg1;	// IMP=0x001000000021be7f
- (void)makeBezier:(id)arg1;	// IMP=0x001000000021be68
- (void)makeSmooth:(id)arg1;	// IMP=0x001000000021be51
- (void)makeSharp:(id)arg1;	// IMP=0x001000000021be3a
- (void)toggleSelectedNodeToType:(long long)arg1;	// IMP=0x001000000021ba83
- (void)p_commandGroupSafeEndEditing;	// IMP=0x001000000021b9a9
- (void)insertNewline:(id)arg1;	// IMP=0x001000000021b997
- (void)cancelOperation:(id)arg1;	// IMP=0x001000000021b985
- (void)endPathEditing;	// IMP=0x001000000021b907
- (void)p_groupWillBeOpened:(id)arg1;	// IMP=0x001000000021b6e6
- (void)p_commandWillBeEnqueued:(id)arg1;	// IMP=0x001000000021b4d3
- (void)p_closeCommandGroupBookkeepingAndUnregisterForOpenGroupNotifications;	// IMP=0x001000000021b4c2
- (void)p_openCommandGroupBookkeepingAndRegisterForOpenGroupNotifications;	// IMP=0x001000000021b4b1
- (_Bool)shouldBecomeTextInputEditor;	// IMP=0x001000000021b4a9
- (_Bool)canSaveSelectionToArchivedViewState;	// IMP=0x001000000021b4a1
- (_Bool)canRemainDuringSharedReadOnlyMode;	// IMP=0x001000000021b499
- (_Bool)canRemainDuringUserInitiatedSave;	// IMP=0x001000000021b485
- (_Bool)canRemainDuringDragInsert;	// IMP=0x001000000021b471
- (_Bool)shouldRemainOnEditorStackForSelection:(id)arg1 inSelectionPath:(id)arg2 withNewEditors:(id)arg3;	// IMP=0x001000000021b331
- (_Bool)p_shouldKeepEditingInfos:(id)arg1;	// IMP=0x001000000021b0e5
- (void)selectionDidChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3;	// IMP=0x001000000021b03c
- (id)selectionWillChangeFromSelection:(id)arg1 toSelection:(id)arg2 withFlags:(unsigned long long)arg3 inSelectionPath:(id)arg4 withNewEditors:(id)arg5;	// IMP=0x001000000021af40
- (_Bool)canProvideStylePresetKindForInspector;	// IMP=0x001000000021af38
@property(readonly, nonatomic) _Bool currentShapeIsValid;
- (_Bool)canEndPathCreationWithKnob:(id)arg1;	// IMP=0x001000000021ace4
- (_Bool)canClosePathToKnob:(id)arg1;	// IMP=0x001000000021aa65
- (_Bool)canContinuePathFromKnob:(id)arg1 reversed:(_Bool *)arg2;	// IMP=0x001000000021a8e2
- (void)closeLastSubpath;	// IMP=0x001000000021a721
- (void)updateGhost;	// IMP=0x0010000000219cac
- (void)updateGhostForNodeCreationAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000219c1a
- (void)p_resetAfterRebase;	// IMP=0x00100000002199aa
- (void)endMovingKnob;	// IMP=0x001000000021985d
- (struct CGPoint)constrainedUnscaledPointForPathCreation:(struct CGPoint)arg1;	// IMP=0x0010000000219600
- (void)p_didScroll:(id)arg1;	// IMP=0x0010000000219391
@property(retain, nonatomic) CRLCanvasRep<CRLPathEditableRep> *creatingRep;
@property(readonly, nonatomic) NSArray *decoratorOverlayRenderables;
- (void)p_setGhostStrokeColor;	// IMP=0x0010000000218f8d
- (id)p_ghostRenderable;	// IMP=0x0010000000218e98
- (void)deselectAll:(id)arg1;	// IMP=0x0010000000218dbc
- (void)selectAll:(id)arg1;	// IMP=0x0010000000218ce0
- (void)editPathsOnPathEditableRepsWithActionString:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 filterWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000002188df
- (id)newTrackerForKnob:(id)arg1 forRep:(id)arg2;	// IMP=0x0010000000218871
- (void)updatePositionsOfKnobs:(id)arg1 forRep:(id)arg2;	// IMP=0x001000000021867e
- (void)addKnobsForRep:(id)arg1 toArray:(id)arg2;	// IMP=0x0010000000217c73
- (_Bool)canAddKnobsForRep:(id)arg1;	// IMP=0x0010000000217bde
- (void)invalidateKnobs;	// IMP=0x001000000021796c
- (void)didResignTextInputEditor;	// IMP=0x00100000002177b9
- (void)willResignCurrentEditor;	// IMP=0x001000000021778a
- (void)spacebarTapped:(id)arg1;	// IMP=0x0010000000217784
@property(readonly, nonatomic) _Bool handlesSpacebar;
- (void)escapePressed:(id)arg1;	// IMP=0x001000000021776a
- (void)arrowKeyReceivedInDirection:(unsigned long long)arg1 withModifierKeys:(id)arg2;	// IMP=0x0010000000217764
@property(readonly, nonatomic) _Bool wantsRawArrowKeyEvents;
- (_Bool)wantsToReceiveTextInput;	// IMP=0x0010000000217754
- (_Bool)wantsToInterceptDeleteEvents;	// IMP=0x001000000021774c
- (_Bool)shouldBeginTextInputWith:(id)arg1;	// IMP=0x0010000000217744
- (void)endEditingAndSelectParent:(id)arg1;	// IMP=0x0010000000217732
- (void)didBecomeTextInputEditor;	// IMP=0x001000000021772c
@property(readonly, nonatomic) id <CRLTextSelecting> textSelectionDelegate;
@property(readonly, nonatomic) _Bool wantsVisibleKeyboard;
@property(readonly, nonatomic) id <CRLTextInputReceiving> textInputReceiver;
@property(readonly, nonatomic) id <_TtP8Freeform20CRLKeyInputReceiving_> keyInputReceiver;
- (_Bool)wantsDoneButtonWhenEditing;	// IMP=0x00100000002176f4
- (void)didBecomeCurrentEditorForEditorController:(id)arg1;	// IMP=0x00100000002175d3
- (void)dealloc;	// IMP=0x0010000000217595

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _TtC8Freeform21CRLEditingCoordinator *editingCoordinator;
@property(readonly, nonatomic) id <CRLSearchReference> editingSearchReference;
@property(retain, nonatomic) CRLEditorController *editorController;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) double liftDelayOverride;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingAccessibilityDescription;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingAttribution;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingCalloutAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEditRecording;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFreehandAnimations;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReplacement;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(readonly, nonatomic) _Bool shouldPreventQuickSelect;
@property(readonly) Class superclass;

@end

