//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVAsset, NSError, NSSet, NSString, _TtC8Freeform8CRLAsset;

@interface CRLMovieCompatibilityChecker : NSObject
{
    _TtC8Freeform8CRLAsset *_data;	// 8 = 0x8
    AVAsset *_asset;	// 16 = 0x10
    _Bool _movieIsAnimatedImage;	// 24 = 0x18
    _Atomic _Bool _cancelled;	// 25 = 0x19
    long long _compatibilityLevel;	// 32 = 0x20
    NSError *_error;	// 40 = 0x28
    _Bool _wasAssetHEVC;	// 48 = 0x30
    _Bool _wasAssetProRes;	// 49 = 0x31
    struct {
        int width;
        int height;
    } _customMaxPlayableVideoDimensions;	// 52 = 0x34
    NSSet *_customPlayableVideoCodecTypes;	// 64 = 0x40
    int _customMaxPlayableVideoPixelsPerFrame;	// 72 = 0x48
    int _customMaxAudioBitRate;	// 76 = 0x4c
    _Bool _wasConverterPresetMoreCompatibleThanAsset;	// 80 = 0x50
}

+ (id)p_defaultPlayableAudioCodecTypes;	// IMP=0x00200000002fd0c8
+ (id)p_defaultPlayableVideoCodecTypes;	// IMP=0x00100000002fd0bb
+ (int)maxPlayableAudioBitrateForMediaCompatibilityConverterPreset:(long long)arg1;	// IMP=0x00100000002fc23f
+ (int)maxPlayableVideoPixelsPerFrameForMediaCompatibilityConverterPreset:(long long)arg1;	// IMP=0x00100000002fc222
+ (struct CGSize)maxPlayableVideoDimensionsForMediaCompatibilityConverterPreset:(long long)arg1;	// IMP=0x00100000002fc1cf
+ (id)videoCodecsForMediaCompatibilityConverterPreset:(long long)arg1;	// IMP=0x00100000002fc160
+ (_Bool)platformSupportsProRes;	// IMP=0x00100000002fc158
+ (_Bool)isPreset:(long long)arg1 moreCompatibleThanAsset:(id)arg2;	// IMP=0x00100000002fc05b
+ (_Bool)assetContainsProResVideoTracks:(id)arg1;	// IMP=0x00100000002fbfd2
+ (_Bool)assetContainsH264VideoTracks:(id)arg1;	// IMP=0x00100000002fbfaf
+ (_Bool)assetContainsVideoTracksWithAlpha:(id)arg1;	// IMP=0x00100000002fbe5b
+ (_Bool)assetContainsHEVCVideoTracks:(id)arg1;	// IMP=0x00100000002fbe38
+ (_Bool)p_doesAsset:(id)arg1 containTrackWithMediaType:(id)arg2 matchingCodecTypes:(id)arg3;	// IMP=0x00100000002fbbeb
+ (_Bool)p_doesTrack:(id)arg1 matchCodecTypes:(id)arg2;	// IMP=0x00100000002fba29
- (void).cxx_destruct;	// IMP=0x00200000002fe3ed
@property(readonly, nonatomic) _Bool wasConverterPresetMoreCompatibleThanAsset; // @synthesize wasConverterPresetMoreCompatibleThanAsset=_wasConverterPresetMoreCompatibleThanAsset;
@property(readonly, nonatomic) _Bool wasAssetProRes; // @synthesize wasAssetProRes=_wasAssetProRes;
@property(readonly, nonatomic) _Bool wasAssetHEVC; // @synthesize wasAssetHEVC=_wasAssetHEVC;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) long long compatibilityLevel; // @synthesize compatibilityLevel=_compatibilityLevel;
- (float)p_estimatedDataRateUsingFormatDescriptionForAudioTrack:(id)arg1;	// IMP=0x00100000002fe21a
- (float)p_estimatedDataRateUsingTrackPropertiesForAudioTrack:(id)arg1;	// IMP=0x00100000002fe124
- (float)p_estimatedDataRateForAudioTrack:(id)arg1;	// IMP=0x00100000002fe0a4
- (float)p_estimatedAudioAssetDataRateUsingFileSize;	// IMP=0x00100000002fdf75
- (float)p_estimatedAudioAssetDataRate;	// IMP=0x00100000002fdc6a
- (_Bool)p_isAudioTrackPlayableOnAllDevices:(id)arg1;	// IMP=0x00100000002fd962
- (id)p_sampleDescriptionExtensionAto_dataFromVideoFormatDescription:(struct opaqueCMFormatDescription *)arg1 forAtomType:(id)arg2;	// IMP=0x00100000002fd839
- (_Bool)p_isH263VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;	// IMP=0x00100000002fd7b8
- (_Bool)p_isMPEG4VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;	// IMP=0x00100000002fd6c9
- (_Bool)p_isH264VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;	// IMP=0x00100000002fd5de
- (_Bool)p_isSorenson3VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;	// IMP=0x00100000002fd5bd
- (_Bool)p_isVideoTrackPlayableOnSupportedDevices:(id)arg1;	// IMP=0x00100000002fd0d5
- (_Bool)p_assetHasSupportedFileTypeOnAllDevices;	// IMP=0x00100000002fcd00
- (_Bool)p_isLoadedAssetPlayableOnSupportedDevices;	// IMP=0x00100000002fc664
- (_Bool)p_doesLoadedAssetHaveProResTracks;	// IMP=0x00100000002fc460
- (_Bool)p_doesLoadedAssetHaveHEVCTracks;	// IMP=0x00100000002fc25c
@property(readonly, nonatomic, getter=isCancelled) _Bool cancelled;
- (void)cancel;	// IMP=0x00100000002fba03
- (void)p_didFinishCheckingCompatibilityUpToLevel:(long long)arg1 actualLevel:(long long)arg2 error:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000002fb7b8
- (void)checkCustomCompatibilityWithConverterPreset:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fb4e0
- (void)p_checkCustomCompatibilityWithVideoCodecTypes:(id)arg1 maxPlayableVideoDimensions:(struct CGSize)arg2 maxPlayableVideoPixelsPerFrame:(int)arg3 maxAudioBitRate:(int)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x00100000002fb440
- (void)checkCustomCompatibilityWithVideoCodecTypes:(id)arg1 maxPlayableVideoDimensions:(struct CGSize)arg2 maxPlayableVideoPixelsPerFrame:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000002fb425
- (void)p_checkCompatibilityOfAVAssetUpToLevel:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002fa231
- (void)checkCompatibilityUpToLevel:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000002f9fc5
- (id)init;	// IMP=0x00100000002f9ce0
- (id)initWithData:(id)arg1;	// IMP=0x00100000002f9ccc
- (id)initWithData:(id)arg1 asset:(id)arg2;	// IMP=0x00100000002f99c6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

