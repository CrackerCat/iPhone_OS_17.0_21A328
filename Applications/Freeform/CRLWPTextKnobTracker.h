//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CRLWPTextMagnifierRanged, NSTimer, _TtC8Freeform11CRLWPEditor;

@interface CRLWPTextKnobTracker
{
    _TtC8Freeform11CRLWPEditor *_textEditor;	// 8 = 0x8
    struct _NSRange _rangeAtStart;	// 16 = 0x10
    unsigned long long _selectionType;	// 32 = 0x20
    unsigned long long _headCharAtStart;	// 40 = 0x28
    unsigned long long _tailCharAtStart;	// 48 = 0x30
    _Bool _multiTap;	// 56 = 0x38
    NSTimer *_textMagnifierTimer;	// 64 = 0x40
    CRLWPTextMagnifierRanged *_magnifier;	// 72 = 0x48
    _Bool _doneTracking;	// 80 = 0x50
    _Bool _knobMoved;	// 81 = 0x51
    _Bool _didDragKnob;	// 82 = 0x52
    _Bool _ignoreNextCall;	// 83 = 0x53
    struct CGPoint _magnificationPoint;	// 88 = 0x58
}

+ (const void *)p_lineFragmentForCharIndex:(unsigned long long)arg1 knobTag:(unsigned long long)arg2 selectionType:(unsigned long long)arg3 rep:(id)arg4;	// IMP=0x00400000005d7984
- (void).cxx_destruct;	// IMP=0x00200000005d9fa5
@property(nonatomic) struct CGPoint magnificationPoint; // @synthesize magnificationPoint=_magnificationPoint;
@property(nonatomic) _Bool ignoreNextCall; // @synthesize ignoreNextCall=_ignoreNextCall;
@property(readonly, nonatomic) _Bool didDragKnob; // @synthesize didDragKnob=_didDragKnob;
@property(retain, nonatomic) _TtC8Freeform11CRLWPEditor *textEditor; // @synthesize textEditor=_textEditor;
- (void)updateSelectionAfterAutoscroll:(id)arg1;	// IMP=0x00100000005d9e5d
- (struct _NSRange)adjustSelectionRange:(struct _NSRange)arg1 forStorage:(id)arg2;	// IMP=0x00100000005d9e51
- (_Bool)fixupWordSelection;	// IMP=0x00100000005d9e49
- (_Bool)shouldHideOtherKnobs;	// IMP=0x00100000005d9e41
- (unsigned long long)p_charIndexForKnob:(unsigned long long)arg1 selection:(id)arg2;	// IMP=0x00100000005d9db7
- (void)p_fixUpWordSelection;	// IMP=0x00100000005d9621
- (_Bool)p_newTailCharIndex:(unsigned long long)arg1 isPastHeadCharIndex:(unsigned long long)arg2 rep:(id)arg3;	// IMP=0x00100000005d943f
- (_Bool)p_newHeadCharIndex:(unsigned long long)arg1 isPastTailCharIndex:(unsigned long long)arg2 rep:(id)arg3;	// IMP=0x00100000005d925d
- (void)p_setSelectionFromPoint:(struct CGPoint)arg1;	// IMP=0x00100000005d7ddb
- (void)p_stopMagnifyingWithAnimation:(_Bool)arg1;	// IMP=0x00100000005d7d24
- (void)p_magnifyWithTarget:(id)arg1 magnificationPoint:(struct CGPoint)arg2 offset:(struct CGPoint)arg3 animated:(_Bool)arg4 delayed:(_Bool)arg5;	// IMP=0x00100000005d7c4b
- (void)p_startMagnifyingAt:(struct CGPoint)arg1;	// IMP=0x00100000005d7b72
- (id)p_rangedMagnifier;	// IMP=0x00100000005d7b13
- (_Bool)p_isMagnifyingVerticalText;	// IMP=0x00100000005d781a
- (void)p_cleanupWhenDone;	// IMP=0x00100000005d774f
- (void)endMovingKnob;	// IMP=0x00100000005d76d7
- (void)moveKnobToCanvasPosition:(struct CGPoint)arg1;	// IMP=0x00100000005d75fc
- (double)delay;	// IMP=0x00100000005d75eb
- (void)dealloc;	// IMP=0x00100000005d72ea
- (id)initWithRep:(id)arg1 knob:(id)arg2;	// IMP=0x00100000005d67f0

@end

