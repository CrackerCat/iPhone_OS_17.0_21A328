//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSString.h>

@class MISSING_TYPE, NSAttributedString;

@interface NSString (CRLiOSInspectorPaneSectionTitle)
+ (id)crlwp_stringForValue:(unsigned int)arg1 withPageNumberFormat:(int)arg2;	// IMP=0x00100000001afc50
+ (id)crlwp_stringForValue:(unsigned int)arg1 withListNumberFormat:(unsigned long long)arg2 includeFormatting:(_Bool)arg3;	// IMP=0x00100000001ac673
+ (id)crlwp_stringForValue:(unsigned int)arg1 withListNumberFormat:(unsigned long long)arg2;	// IMP=0x00100000001ac654
+ (unsigned long long)crlwp_numberForString:(id)arg1 withPageNumberFormat:(int)arg2;	// IMP=0x00100000001ac277
+ (unsigned long long)crlwp_numberForString:(id)arg1 withListNumberFormat:(unsigned long long)arg2;	// IMP=0x00100000001ab969
+ (id)crl_regexStringForSearchString:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x0010000000311627
+ (id)crl_stringWithItemProviderData:(id)arg1 typeIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x001000000041c05f
+ (id)crl_JSONStringFromString:(id)arg1;	// IMP=0x001000000041bc8e
+ (id)crl_stringByHexEncodingData:(id)arg1;	// IMP=0x001000000041a2bb
+ (id)crl_stringWithXMLString:(const char *)arg1;	// IMP=0x0010000000419e27
+ (id)crl_stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2 breakLines:(_Bool)arg3;	// IMP=0x0010000000419939
+ (id)crl_stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x001000000041991d
+ (id)crl_stringWithHexFromBytes:(const char *)arg1 length:(unsigned long long)arg2;	// IMP=0x0010000000419885
+ (id)crl_stringByIndentingString:(id)arg1;	// IMP=0x0010000000416ff1
+ (id)crl_stringByIndentingString:(id)arg1 times:(unsigned long long)arg2;	// IMP=0x0010000000416eb7
+ (id)crl_stringWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x0010000000416e5b
+ (id)crl_stringWithUUID;	// IMP=0x0010000000416e22
+ (id)crl_localizedDisplayNameWithPersonNameComponents:(id)arg1;	// IMP=0x001000000041c73b
+ (id)crl_unRedactedStringWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x001000000041d1db
+ (id)crl_redactedStringWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x001000000041d17f
@property(readonly, nonatomic) _Bool isDivider;
@property(readonly, nonatomic) _Bool isEmptyTitle;
@property(readonly, nonatomic) NSString *text;
@property(readonly, nonatomic) _Bool crl_representsPhysicalKeyboard;
- (_Bool)crl_pathExtensionConformsToUTI:(id)arg1;	// IMP=0x0010000000148537
- (_Bool)crl_pathConformsToUTI:(id)arg1;	// IMP=0x00100000001484c9
@property(readonly, nonatomic) NSString *crl_normalizedFilenameExtension;
@property(readonly, nonatomic) NSString *crl_pathUTI;
@property(readonly, nonatomic) NSString *crl_UTIFilenameExtension;
- (_Bool)crl_conformsToAnyUTI:(id)arg1;	// IMP=0x0010000000147f2e
- (_Bool)crl_conformsToUTI:(id)arg1;	// IMP=0x0010000000147c11
- (id)crlwp_stringWithoutControlCharacters;	// IMP=0x00100000001b1401
- (id)crlwp_stringWithUnambiguousNeutralEnding;	// IMP=0x00100000001b134d
- (id)crlwp_stringWithAddedIsolatesBasedOn:(long long)arg1;	// IMP=0x00100000001b12d4
- (_Bool)crlwp_isLowerCaseFromIndex:(unsigned long long)arg1;	// IMP=0x00100000001b1009
- (_Bool)crlwp_containsIdeographs;	// IMP=0x00100000001b0e04
- (unsigned int)crlwp_utf32CharacterAtIndex:(unsigned long long)arg1 planeClassification:(long long *)arg2;	// IMP=0x00100000001b0377
- (unsigned int)crlwp_utf32CharacterAtIndex:(unsigned long long)arg1;	// IMP=0x00100000001afd00
- (int)crlwp_contentsScriptInRange:(struct _NSRange)arg1;	// IMP=0x00100000001af999
- (int)crlwp_contentsScript;	// IMP=0x00100000001af966
@property(readonly, nonatomic) _Bool crlwp_NSDetectorMatchStringIsStrictPhoneNumber;
- (id)crlwp_replaceOccurrencesOfCharactersInSet:(id)arg1 minimumConsecutiveLength:(unsigned long long)arg2 replaceString:(id)arg3;	// IMP=0x00100000001ab1e3
- (_Bool)crlwp_isAllWhitespaceInRange:(struct _NSRange)arg1;	// IMP=0x00100000001ab058
- (_Bool)crlwp_isHyphenationAtCharacterIndex:(unsigned long long)arg1;	// IMP=0x00100000001ab00a
- (struct _NSRange)crlwp_rangeOfWordAtCharacterIndex:(unsigned long long)arg1 range:(struct _NSRange)arg2 includePreviousWord:(_Bool)arg3 includeHyphenation:(_Bool)arg4;	// IMP=0x00100000001aa9b9
- (struct _NSRange)crlwp_rangeOfWordAtCharacterIndex:(unsigned long long)arg1 range:(struct _NSRange)arg2 includePreviousWord:(_Bool)arg3;	// IMP=0x00100000001aa997
- (struct _NSRange)crlwp_rangeOfCharactersFromSet:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x00100000001aa8ae
- (unsigned long long)crlwp_findIndexOfCharacter:(unsigned short)arg1 range:(struct _NSRange)arg2;	// IMP=0x00100000001aa705
- (id)crlwp_stringByNormalizingParagraphBreaks;	// IMP=0x00100000001aa30c
- (id)crl_stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 searchOptions:(unsigned long long)arg3 range:(struct _NSRange)arg4 replacementCount:(unsigned long long *)arg5;	// IMP=0x0010000000311c71
- (id)crl_stringByCapitalizingToMatchString:(id)arg1 range:(struct _NSRange)arg2 searchOptions:(unsigned long long)arg3;	// IMP=0x0010000000311aad
- (struct _NSRange)crl_rangeOfString:(id)arg1 searchOptions:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;	// IMP=0x00100000003119d5
- (id)crl_nameByConvertingFirstNameToInitials;	// IMP=0x0010000000416be7
- (id)crl_initialsWithLimit:(unsigned long long)arg1;	// IMP=0x00100000004169a1
- (id)crl_displayNameFromFilenameDeletingPathExtension:(_Bool)arg1;	// IMP=0x0010000000416938
- (id)crl_displayNameFromFilename;	// IMP=0x0010000000416921
- (id)crl_filenameTruncatedToCharacterLimit:(unsigned long long)arg1;	// IMP=0x0010000000416777
- (id)crl_filenameFromDisplayNameWithExtension:(id)arg1 characterLimit:(unsigned long long)arg2;	// IMP=0x00100000004166c3
- (id)crl_filenameFromDisplayNameWithExtension:(id)arg1;	// IMP=0x00100000004166ac
- (void)crl_appendJSONStringToString:(id)arg1;	// IMP=0x001000000041bd05
- (id)crl_stringByApplyingSubstitutions:(id)arg1;	// IMP=0x001000000041b8b7
- (id)crl_parseBaseTitleWithLocalizedCopyString:(id)arg1 firstCopyFormatString:(id)arg2 generalCopyFormatString:(id)arg3 outNumber:(unsigned long long *)arg4;	// IMP=0x001000000041b59b
- (id)crl_regexForTitleParsingWithLocalizedCopyString:(id)arg1 isFirstCopyFormatString:(_Bool)arg2;	// IMP=0x001000000041b11d
- (id)crl_stringByIncrementingCounterAfterDuplicateTitleModifierWithLocalizedCopyString:(id)arg1 firstCopyFormatString:(id)arg2 generalCopyFormatString:(id)arg3 numberFormatter:(id)arg4 uniquenessTest:(CDUnknownBlockType)arg5;	// IMP=0x001000000041ae2e
- (id)crl_stringByIncrementingCounterAfterDuplicateTitleModifierWithUniquenessTest:(CDUnknownBlockType)arg1;	// IMP=0x001000000041acad
- (id)crl_stringWithoutBidiControls;	// IMP=0x001000000041ac39
- (id)crl_stringWithNormalizedQuotationMarks;	// IMP=0x001000000041abb1
- (id)crl_stringWithNormalizedHyphens;	// IMP=0x001000000041ab29
- (id)crl_stringWithNormalizedHyphensAndQuotationMarks;	// IMP=0x001000000041aad9
- (_Bool)crl_isEqualToString:(id)arg1;	// IMP=0x001000000041aabe
- (id)crl_middleTruncateToLength:(unsigned long long)arg1;	// IMP=0x001000000041aa14
- (id)crl_stringWithoutAttachmentCharacters;	// IMP=0x001000000041a97a
- (id)crl_setOfContainedWordsIncludingPunctuationAndSymbols:(_Bool)arg1;	// IMP=0x001000000041a607
- (_Bool)crl_containsSubstring:(id)arg1;	// IMP=0x001000000041a5e4
- (void)crl_enumerateRangesOfCharactersInSet:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000041a49f
- (struct _NSRange)crl_range;	// IMP=0x001000000041a487
- (struct _NSRange)crl_rangeOfString:(id)arg1 options:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;	// IMP=0x001000000041a395
- (id)crl_tolerantStringByAppendingPathExtension:(id)arg1;	// IMP=0x001000000041a10e
- (id)crl_stringByDeletingPathExtensionIfEqualTo:(id)arg1;	// IMP=0x001000000041a072
- (_Bool)crl_containsOnlyCharactersFromSet:(id)arg1;	// IMP=0x001000000041a00f
- (id)crl_unescapeXML;	// IMP=0x0010000000419f2a
- (id)crl_escapeXML;	// IMP=0x0010000000419e45
- (id)crl_stringTrimByLimitingFirstCharacterToSet:(id)arg1;	// IMP=0x0010000000419d1d
- (id)crl_stringByMakingFirstCharacterUppercase;	// IMP=0x0010000000419c7a
- (id)crl_stringByMakingFirstCharacterLowercase;	// IMP=0x0010000000419b82
- (id)crl_encodeStringBase64;	// IMP=0x0010000000419b2e
- (id)crl_stringByTrimmingCharactersInSetFromFront:(id)arg1;	// IMP=0x00100000004197f2
- (id)crl_stringWithPathRelativeTo:(id)arg1 allowBacktracking:(_Bool)arg2;	// IMP=0x001000000041955e
- (id)crl_stringWithPathRelativeTo:(id)arg1;	// IMP=0x0010000000419331
- (id)crl_substringWithComposedCharacterSequencesToFileSystemLength:(unsigned long long)arg1;	// IMP=0x0010000000419227
- (id)crl_substringWithComposedCharacterSequencesTruncatedToLength:(unsigned long long)arg1;	// IMP=0x00100000004191b9
- (MISSING_TYPE *)crl_stringWithTrimmedWhitespace;	// IMP=0x0010000000419101
- (id)crl_stringWithRealpath;	// IMP=0x0010000000419095
- (_Bool)crl_isChildOfPath:(id)arg1;	// IMP=0x0010000000418e00
- (_Bool)crl_isDescendantOfPath:(id)arg1;	// IMP=0x0010000000418c66
- (id)crl_escapeForIcuRegex;	// IMP=0x0010000000418822
- (unsigned long long)crl_countInstancesOfString:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x001000000041874c
- (id)crl_stringByReplacingInstancesOfCharactersInSet:(id)arg1 withString:(id)arg2;	// IMP=0x00100000004184f8
- (id)crl_stringByRemovingCharactersInSet:(id)arg1;	// IMP=0x00100000004184e4
- (id)crl_stringByRemovingCharactersInSet:(id)arg1 options:(unsigned int)arg2;	// IMP=0x001000000041818f
- (id)crl_stringByFixingBrokenSurrogatePairs;	// IMP=0x0010000000417e7d
- (id)crl_stringByUniquingPathInsideDirectory:(id)arg1 withFormat:(id)arg2;	// IMP=0x0010000000417a98
- (id)crl_stringByUniquingPathInsideDirectory:(id)arg1;	// IMP=0x0010000000417a7f
- (id)crl_stringByAppendingSeparator:(id)arg1 format:(id)arg2;	// IMP=0x0010000000417946
- (id)crl_stringQuotedIfContainsCharacterSet:(id)arg1;	// IMP=0x001000000041786a
- (id)crl_stringByExpandingTableFormatting;	// IMP=0x001000000041705b
- (id)crl_pathExceptPrivate;	// IMP=0x0010000000417008
- (id)crl_uncommentedAddressRespectingGroups;	// IMP=0x001000000041c4b7
- (id)crl_uncommentedAddress;	// IMP=0x001000000041c27c
- (_Bool)crl_isCJKString;	// IMP=0x001000000041c53a
- (unsigned long long)crl_numberOfKeysInKeyPath;	// IMP=0x001000000041cc74
- (id)crl_lastKey;	// IMP=0x001000000041cc00
- (id)crl_firstKey;	// IMP=0x001000000041cb8f
- (id)crl_keyPathByAppendingKey:(id)arg1;	// IMP=0x001000000041cad7
- (id)crl_keyPathByPrependingKey:(id)arg1;	// IMP=0x001000000041ca1f
- (id)crl_keyPathByRemovingFirstKey;	// IMP=0x001000000041c9b9
- (id)crl_keyPathByRemovingLastKey;	// IMP=0x001000000041c956
- (id)crl_initUnRedactedWithFormat:(id)arg1;	// IMP=0x001000000041d0c0
- (id)crl_initRedactedWithFormat:(id)arg1;	// IMP=0x001000000041d001
- (id)crl_initUnRedactedWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x001000000041cf26
- (id)crl_initRedactedWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;	// IMP=0x001000000041ccee
@property(readonly, nonatomic) _Bool crl_isPasteboardStateType;
- (id)crl_attributedStringAllowingHyphenationWithAlignment:(long long)arg1 color:(id)arg2;	// IMP=0x001000000056b48e
- (id)crl_writeToFileUsingName:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000d373e0

// Remaining properties
@property(readonly, nonatomic) NSAttributedString *attributedText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

