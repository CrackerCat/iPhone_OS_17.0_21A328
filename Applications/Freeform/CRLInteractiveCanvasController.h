//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CALayer, CRLCanvas, CRLCanvasAnimation, CRLCanvasGuideController, CRLCanvasLayer, CRLCanvasLayoutController, CRLCanvasRep, CRLCanvasView, CRLChangeNotifier, CRLColor, CRLConnectionLineAbstractLayout, CRLDynamicOperationController, CRLEditorController, CRLFreehandDrawingToolkit, CRLGestureDispatcher, CRLInteractiveCanvasLayerHelper, CRLRealTimeSyncDecorator, CRLSelectionModelTranslator, CRLSelectionPath, CRLTrackerManipulatorCoordinator, MISSING_TYPE, NSArray, NSDictionary, NSFormatter, NSMapTable, NSMutableArray, NSMutableSet, NSNumberFormatter, NSSet, NSString, UITraitCollection, _TtC8Freeform20CRLCommandController, _TtC8Freeform21CRLEditingCoordinator, _TtC8Freeform21CRLTextInputResponder, _TtC8Freeform24CRLMultiselectResizeInfo, _TtC8Freeform8CRLBoard;
@protocol CRLCanvasContainerRep, CRLCanvasEditor, CRLCanvasLayerHosting, CRLCollaboratorCursorRendererDelegate, CRLContainerInfo, CRLInteractiveCanvasControllerDelegate, CRLInteractiveCanvasLayerUpdater, CRLMediaReplacer, CRLSearchReference;

@interface CRLInteractiveCanvasController : NSObject
{
    id <CRLCollaboratorCursorRendererDelegate> mCollaboratorCursorDelegate;	// 8 = 0x8
    id <CRLInteractiveCanvasControllerDelegate> mDelegate;	// 16 = 0x10
    _Bool mCreateRepsForOffscreenLayouts;	// 24 = 0x18
    id <CRLInteractiveCanvasLayerUpdater> mLayerUpdater;	// 32 = 0x20
    NSObject<CRLCanvasEditor> *mCanvasEditor;	// 40 = 0x28
    _TtC8Freeform21CRLTextInputResponder *mTextInputResponder;	// 48 = 0x30
    CRLCanvas *mCanvas;	// 56 = 0x38
    id <CRLCanvasLayerHosting> mLayerHost;	// 64 = 0x40
    id mObservedDocumentRoot;	// 72 = 0x48
    CRLEditorController *mEditorController;	// 80 = 0x50
    CRLCanvasGuideController *mGuideController;	// 88 = 0x58
    _Bool mHasCanvasEverLaidOut;	// 96 = 0x60
    _Bool mHadLayerHost;	// 97 = 0x61
    _Bool mLayerHostHasBeenTornDown;	// 98 = 0x62
    CRLInteractiveCanvasController *mTextInputResponderSource;	// 104 = 0x68
    unsigned long long mTextInputResponderShareCount;	// 112 = 0x70
    long long mNotifyTIRSelectionChangedAfterLayout;	// 120 = 0x78
    _Bool mNotifyTIRTextChangedAfterLayout;	// 128 = 0x80
    NSFormatter *mUnitFormatter;	// 136 = 0x88
    NSNumberFormatter *mNumberFormatter;	// 144 = 0x90
    _Bool mResizeCanvasOnLayout;	// 152 = 0x98
    struct CGRect mUnscaledRectToGrowCanvasDuringDynamicOperation;	// 160 = 0xa0
    struct CGRect mRectToIncludeWhenGrowingCanvasToFitContent;	// 192 = 0xc0
    NSMutableSet *mRepsToSetNeedsDisplay;	// 224 = 0xe0
    NSMapTable *mRepsToRectsToInvalidate;	// 232 = 0xe8
    NSMutableSet *mRepsDrawnIntoAncestorToSetNeedsDisplayOnUpdatedGeometry;	// 240 = 0xf0
    _Bool mOverlayLayerSuppressed;	// 248 = 0xf8
    NSMutableArray *mDecorators;	// 256 = 0x100
    NSMutableSet *mDecoratorsWithInvalidLayers;	// 264 = 0x108
    _Bool mAllDecoratorLayersAreInvalid;	// 272 = 0x110
    _Bool mShowGrayOverlay;	// 273 = 0x111
    unsigned long long mDynamicOperationState;	// 280 = 0x118
    _Atomic int mDynamicOperationCounter;	// 288 = 0x120
    _Bool mDocumentIsSharedReadOnly;	// 292 = 0x124
    _Bool mConnectorKnobsEnabled;	// 293 = 0x125
    CRLColor *mSelectionHighlightColor;	// 296 = 0x128
    _Bool mShowInvisibleObjects;	// 304 = 0x130
    long long mIsFetchingEditorController;	// 312 = 0x138
    _Bool mSelectionIsCurrentlyOnscreen;	// 320 = 0x140
    _Bool mDidTransform;	// 321 = 0x141
    CRLRealTimeSyncDecorator *mLiveSyncDecorator;	// 328 = 0x148
    CRLCanvasAnimation *mCurrentAnimation;	// 336 = 0x150
    CRLTrackerManipulatorCoordinator *mTMCoordinator;	// 344 = 0x158
    CRLDynamicOperationController *mDynOpController;	// 352 = 0x160
    _TtC8Freeform24CRLMultiselectResizeInfo *mMultiselectResizeInfo;	// 360 = 0x168
    NSMutableSet *mCurrentCollaboratorPresences;	// 368 = 0x170
    NSMapTable *mCollaboratorPresenceToCollaboratorHUDControllerDictionary;	// 376 = 0x178
    NSMapTable *mCollaboratorPresenceToCollaboratorHUDControllerDictionaryForFastSizing;	// 384 = 0x180
    NSSet *mInfosPreviouslyShowingCollabCursors;	// 392 = 0x188
    _Bool mCollaboratorCursorsInvalidated;	// 400 = 0x190
    NSSet *mLayoutsShowingCollabCursorsDuringLayerUpdate;	// 408 = 0x198
    CRLGestureDispatcher *mGestureDispatcher;	// 416 = 0x1a0
    struct CGRect mVisibleBoundsRectForTiling;	// 424 = 0x1a8
    struct CGRect mVisibleUnscaledRect;	// 456 = 0x1c8
    struct CGRect mUnobscuredScrollViewFrame;	// 488 = 0x1e8
    struct CGRect mUnobscuredScrollViewFrameIgnoringObscuringRectangles;	// 520 = 0x208
    NSSet *mRepsToHideForCurrentTracker;	// 552 = 0x228
    _Bool mCurrentlyScrolling;	// 560 = 0x230
    _Bool mAnimatingScroll;	// 561 = 0x231
    _Bool mTextGesturesInFlight;	// 562 = 0x232
    _Bool mSelectionDidChangeDuringTextGestures;	// 563 = 0x233
    _Bool mDidSuppressScrollToSelectionDuringTextGestures;	// 564 = 0x234
    _Bool mShouldAnimateScrollAfterTextGestures;	// 565 = 0x235
    _Bool mShouldSuppressRendering;	// 566 = 0x236
    NSMutableSet *mNotificationsToPostWithValidLayouts;	// 568 = 0x238
    NSMutableArray *mBlocksToPerformOnMainThreadWithValidLayouts;	// 576 = 0x240
    NSMutableArray *mLayersWithZoomFadeAnimation;	// 584 = 0x248
    _Bool mDynamicallyZooming;	// 592 = 0x250
    double mDynamicViewScale;	// 600 = 0x258
    _Bool mUsesAlternateDrawableSelectionHighlight;	// 608 = 0x260
    _Bool mAllowsSelectionKnobs;	// 609 = 0x261
    _Bool mAllowsSelectionHighlight;	// 610 = 0x262
    _Bool mAnimatingViewScale;	// 611 = 0x263
    NSString *mCurrentInteractionSource;	// 616 = 0x268
    struct CGPoint mZoomCenterInBounds;	// 624 = 0x270
    NSMutableArray *mBackgroundRenderingObjects;	// 640 = 0x280
    _Bool mShouldClipThemeContentToCanvas;	// 648 = 0x288
    _Bool mIsDraggingToInsertBoardItems;	// 649 = 0x289
    CRLSelectionPath *mSelectionPathToScrollTo;	// 656 = 0x290
    unsigned long long mOptionsForScrollingToSelection;	// 664 = 0x298
    _Bool mSelectionShouldBeClearedInDidProcessAllChanges;	// 672 = 0x2a0
    NSMutableSet *mVisibleCollaboratorPresences;	// 680 = 0x2a8
    _Bool mDiscardingEdits;	// 688 = 0x2b0
    _Bool _shouldCanvasScrollingSizeGrowToFitBoardContent;	// 689 = 0x2b1
    _Bool mIsTearingDown;	// 690 = 0x2b2
    _Bool mHasBeenTornDown;	// 691 = 0x2b3
    _Bool mDisplaysMultiselectionWithSingleBounds;	// 692 = 0x2b4
    _Bool mPreventSettingNilEditorOnTextResponder;	// 693 = 0x2b5
    _Bool _shouldSuppressFreehandContent;	// 694 = 0x2b6
    _Bool mSuppressesCollaboratorHUD;	// 695 = 0x2b7
    _Bool _floatingCursorInMotion;	// 696 = 0x2b8
    CRLFreehandDrawingToolkit *mFreehandDrawingToolkit;	// 704 = 0x2c0
    NSArray *_temporaryAdditionalBoardItemsToDisplay;	// 712 = 0x2c8
    NSObject<CRLSearchReference> *_primaryFindResultSearchReference;	// 720 = 0x2d0
    NSDictionary *_searchReferencesToHighlight;	// 728 = 0x2d8
}

+ (double)defaultAutoZoomAnimationDuration;	// IMP=0x00200000004676b3
+ (id)keyPathsForValuesAffectingEditingDisabled;	// IMP=0x001000000045b279
+ (double)smallRepOutsetForHitTestingWithPrecision:(_Bool)arg1;	// IMP=0x00100000004517d1
+ (id)keyPathsForValuesAffectingCurrentViewScale;	// IMP=0x00100000004492e6
+ (id)keyPathsForValuesAffectingViewScale;	// IMP=0x00100000004491df
+ (double)zoomAnimationDefaultDuration;	// IMP=0x0010000000443c05
+ (id)keyPathsForValuesAffectingEditorController;	// IMP=0x00100000004424af
+ (_Bool)selectorIsActionMethod:(SEL)arg1;	// IMP=0x001000000043d72b
+ (double)maximumRecommendedViewScale;	// IMP=0x0010000000e247e0
+ (double)minimumRecommendedViewScale;	// IMP=0x0010000000e247d0
- (void).cxx_destruct;	// IMP=0x0010000000467a63
@property(retain, nonatomic) NSDictionary *searchReferencesToHighlight; // @synthesize searchReferencesToHighlight=_searchReferencesToHighlight;
@property(retain, nonatomic) NSObject<CRLSearchReference> *primaryFindResultSearchReference; // @synthesize primaryFindResultSearchReference=_primaryFindResultSearchReference;
@property(nonatomic) _Bool floatingCursorInMotion; // @synthesize floatingCursorInMotion=_floatingCursorInMotion;
@property(nonatomic) _Bool showInvisibleObjects; // @synthesize showInvisibleObjects=mShowInvisibleObjects;
@property(nonatomic) _Bool allowsSelectionHighlight; // @synthesize allowsSelectionHighlight=mAllowsSelectionHighlight;
@property(nonatomic) _Bool allowsSelectionKnobs; // @synthesize allowsSelectionKnobs=mAllowsSelectionKnobs;
@property(nonatomic) _Bool documentIsSharedReadOnly; // @synthesize documentIsSharedReadOnly=mDocumentIsSharedReadOnly;
@property(nonatomic) _Bool suppressesCollaboratorHUD; // @synthesize suppressesCollaboratorHUD=mSuppressesCollaboratorHUD;
@property(nonatomic) _Bool showGrayOverlay; // @synthesize showGrayOverlay=mShowGrayOverlay;
@property(nonatomic) _Bool overlayLayerSuppressed; // @synthesize overlayLayerSuppressed=mOverlayLayerSuppressed;
@property(nonatomic) _Bool shouldSuppressFreehandContent; // @synthesize shouldSuppressFreehandContent=_shouldSuppressFreehandContent;
@property struct CGRect p_visibleUnscaledRect; // @synthesize p_visibleUnscaledRect=mVisibleUnscaledRect;
@property struct CGRect p_visibleBoundsRectForTiling; // @synthesize p_visibleBoundsRectForTiling=mVisibleBoundsRectForTiling;
@property(copy, nonatomic) NSArray *temporaryAdditionalBoardItemsToDisplay; // @synthesize temporaryAdditionalBoardItemsToDisplay=_temporaryAdditionalBoardItemsToDisplay;
@property(nonatomic) _Bool connectorKnobsEnabled; // @synthesize connectorKnobsEnabled=mConnectorKnobsEnabled;
@property(nonatomic) struct CGRect unobscuredScrollViewFrame; // @synthesize unobscuredScrollViewFrame=mUnobscuredScrollViewFrame;
@property(readonly, nonatomic) _Bool currentlyScrolling; // @synthesize currentlyScrolling=mCurrentlyScrolling;
@property(nonatomic) _Bool createRepsForOffscreenLayouts; // @synthesize createRepsForOffscreenLayouts=mCreateRepsForOffscreenLayouts;
@property(readonly, nonatomic, getter=isDiscardingEdits) _Bool discardingEdits; // @synthesize discardingEdits=mDiscardingEdits;
@property(nonatomic) _Bool isDraggingToInsertBoardItems; // @synthesize isDraggingToInsertBoardItems=mIsDraggingToInsertBoardItems;
@property(nonatomic) _Bool preventSettingNilEditorOnTextResponder; // @synthesize preventSettingNilEditorOnTextResponder=mPreventSettingNilEditorOnTextResponder;
@property(retain, nonatomic) _TtC8Freeform21CRLTextInputResponder *textInputResponder; // @synthesize textInputResponder=mTextInputResponder;
@property(retain, nonatomic) NSObject<CRLCanvasEditor> *canvasEditor; // @synthesize canvasEditor=mCanvasEditor;
@property(nonatomic) _Bool resizeCanvasOnLayout; // @synthesize resizeCanvasOnLayout=mResizeCanvasOnLayout;
@property(retain, nonatomic) CRLFreehandDrawingToolkit *freehandDrawingToolkit; // @synthesize freehandDrawingToolkit=mFreehandDrawingToolkit;
@property(nonatomic) _Bool textGesturesInFlight; // @synthesize textGesturesInFlight=mTextGesturesInFlight;
@property(nonatomic) _Bool displaysMultiselectionWithSingleBounds; // @synthesize displaysMultiselectionWithSingleBounds=mDisplaysMultiselectionWithSingleBounds;
@property(readonly, nonatomic) _Bool animatingViewScale; // @synthesize animatingViewScale=mAnimatingViewScale;
@property(nonatomic) _Bool shouldSuppressRendering; // @synthesize shouldSuppressRendering=mShouldSuppressRendering;
@property(nonatomic) __weak id <CRLCollaboratorCursorRendererDelegate> collaboratorCursorDelegate; // @synthesize collaboratorCursorDelegate=mCollaboratorCursorDelegate;
@property(nonatomic) __weak id <CRLInteractiveCanvasControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) CRLCanvas *canvas; // @synthesize canvas=mCanvas;
@property(nonatomic) __weak id <CRLCanvasLayerHosting> layerHost; // @synthesize layerHost=mLayerHost;
@property(nonatomic) _Bool hasBeenTornDown; // @synthesize hasBeenTornDown=mHasBeenTornDown;
@property(nonatomic) _Bool isTearingDown; // @synthesize isTearingDown=mIsTearingDown;
@property(nonatomic) _Bool shouldCanvasScrollingSizeGrowToFitBoardContent; // @synthesize shouldCanvasScrollingSizeGrowToFitBoardContent=_shouldCanvasScrollingSizeGrowToFitBoardContent;
- (void)doubleTappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000004676c1
- (void)animateToViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 duration:(double)arg3 orientation:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000046652f
- (void)p_consumeRepsDrawnIntoAncestorToSetNeedsDisplayOnUpdatedGeometry;	// IMP=0x0010000000465f2f
- (struct CGRect)p_convertNeedsDisplayRect:(struct CGRect)arg1 fromRep:(id)arg2 toRepForDrawing:(id)arg3;	// IMP=0x0010000000465c7b
- (_Bool)p_setNeedsDisplayIfNeededForAncestorRepOf:(id)arg1 inRect:(struct CGRect)arg2;	// IMP=0x0010000000465bae
- (void)i_setNeedsDisplayIfNeededForAncestorRepOf:(id)arg1;	// IMP=0x0010000000465b1e
- (struct CGRect)outsetSelectionRect:(struct CGRect)arg1;	// IMP=0x0010000000465a6b
- (void)p_setTargetPointSize:(double)arg1;	// IMP=0x0010000000465a0b
- (double)targetPointSize;	// IMP=0x001000000046597e
@property(readonly, nonatomic) double defaultTargetPointSize;
- (void)p_selectionDoneChangingWithFlags:(unsigned long long)arg1;	// IMP=0x0010000000465896
- (id)p_infosByAddingAllAncestors:(id)arg1;	// IMP=0x0010000000465679
- (void)p_selectionPathDidChangeFromSelectionPath:(id)arg1 toSelectionPath:(id)arg2;	// IMP=0x0010000000465266
- (void)p_textGesturesDidEndNotification:(id)arg1;	// IMP=0x0010000000464e4e
- (void)p_textGesturesWillBeginNotification:(id)arg1;	// IMP=0x0010000000464d8a
- (void)p_viewScrollingEnded;	// IMP=0x0010000000464cbf
- (void)i_drawRepWithReadLock:(id)arg1 inContext:(struct CGContext *)arg2 forLayer:(id)arg3;	// IMP=0x001000000046473e
- (_Bool)i_isRepContentPlatformView:(id)arg1;	// IMP=0x00100000004644e5
- (void)p_updateCanvasSizeFromLayouts;	// IMP=0x0010000000464151
- (id)i_descriptionForViewScale:(double)arg1 zoomMethod:(long long)arg2;	// IMP=0x001000000046402b
@property(readonly, nonatomic) CRLCanvasAnimation *i_currentAnimation;
- (void)i_repNeedsDisplay:(id)arg1 inRect:(struct CGRect)arg2;	// IMP=0x0010000000463e73
- (void)i_repNeedsDisplay:(id)arg1;	// IMP=0x0010000000463d52
- (void)i_recordUserViewScale;	// IMP=0x0010000000463c31
- (void)i_viewScrollingEndedWithUserInfo:(id)arg1;	// IMP=0x0010000000463a19
- (void)i_viewScrollingEnded;	// IMP=0x0010000000463a00
- (void)i_viewScrollDidChange;	// IMP=0x001000000046383b
- (double)i_nextCanvasViewScaleDetentForProposedViewScale:(double)arg1 greater:(_Bool)arg2 isFastPinch:(_Bool)arg3;	// IMP=0x0010000000463366
- (struct CGSize)i_canvasCenterOffsetForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;	// IMP=0x00100000004632ba
- (double)i_viewScaleForProposedViewScale:(double)arg1 originalViewScale:(double)arg2 isFastPinch:(_Bool)arg3;	// IMP=0x0010000000462de0
- (void)i_viewScaleDidChange;	// IMP=0x0010000000462c5e
- (void)i_canvasWideGamutValueDidChange;	// IMP=0x0010000000462b1b
- (void)i_canvasContentsScaleDidChange;	// IMP=0x00100000004628ce
- (void);	// IMP=0x00100000004625aa
- (void)viewDidEndZooming;	// IMP=0x0010000000462591
- (void)i_viewDidZoomToViewScale:(double)arg1 notify:(_Bool)arg2;	// IMP=0x00100000004623a6
- (void)i_viewIsZoomingAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000462390
- (void)i_viewWillBeginZooming;	// IMP=0x001000000046203f
- (void)i_layout;	// IMP=0x0010000000461e49
- (void)i_canvasWillLayout:(id)arg1;	// IMP=0x0010000000461878
- (void)commitAnimations;	// IMP=0x0010000000461678
- (void)beginAnimations:(id)arg1;	// IMP=0x001000000046143b
- (void)i_selectionDidChange;	// IMP=0x001000000046123e
- (void)i_textDidChange;	// IMP=0x001000000046103e
- (void)setTextResponderEditorTo:(id)arg1 withFlags:(unsigned long long)arg2;	// IMP=0x0010000000460fb5
- (void)performDiscreteFrameChangingOperationOnDrawables:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000460fa3
- (_Bool)canPerformInteractiveAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0010000000460f06
- (void)makeEditorPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x0010000000460e62
- (void)i_acquireLockAndPerformAction:(CDUnknownBlockType)arg1;	// IMP=0x0010000000460b00
- (void)processChanges:(id)arg1 forChangeSource:(id)arg2;	// IMP=0x0010000000460647
- (void)p_updateInfosToDisplayIfNeeded;	// IMP=0x0010000000460290
- (_Bool)selectionPathContainsOnlyInfosOnCanvas:(id)arg1;	// IMP=0x0010000000460288
- (void)didProcessAllChanges;	// IMP=0x0010000000460143
- (_Bool)shouldCancelScrollingToSelectionPath:(id)arg1 forChanges:(id)arg2 withChangeSource:(id)arg3;	// IMP=0x001000000046013b
- (void)preprocessChanges:(id)arg1 forChangeSource:(id)arg2;	// IMP=0x00100000004600c6
- (void)p_setCurrentlyScrolling:(_Bool)arg1;	// IMP=0x001000000045fe58
- (void)p_scrollViewDidEndScrollingAnimation:(id)arg1;	// IMP=0x001000000045fd99
- (void)scrollViewDidScrollToTop:(id)arg1;	// IMP=0x001000000045fd73
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;	// IMP=0x001000000045fcfb
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;	// IMP=0x001000000045faf6
- (void)scrollView:(id)arg1 willAnimateToContentOffset:(struct CGPoint)arg2;	// IMP=0x001000000045fad8
- (void)scrollViewDidChangeAdjustedContentInset:(id)arg1;	// IMP=0x001000000045fac6
- (void)contentInsetsDidChangeForScrollView:(id)arg1;	// IMP=0x001000000045fa5c
- (void)scrollViewDidEndDecelerating:(id)arg1;	// IMP=0x001000000045fa13
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;	// IMP=0x001000000045f992
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x001000000045f88a
- (_Bool)p_collaboratorOverlaysNeedUpdateForScroll;	// IMP=0x001000000045f623
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x001000000045ed69
- (_Bool)scrollViewShouldOptOutOfUIScrollViewContentOffsetAnimationForScrollView:(id)arg1;	// IMP=0x001000000045ecfb
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;	// IMP=0x001000000045e562
- (_Bool)shouldLayoutTilingLayer:(id)arg1;	// IMP=0x001000000045e4df
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x001000000045dec1
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;	// IMP=0x001000000045de59
- (void)tappedCanvasBackgroundAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x001000000045da90
- (_Bool)handleMultipleTapAtPoint:(struct CGPoint)arg1;	// IMP=0x001000000045d919
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x001000000045d532
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 extendingSelection:(_Bool)arg2 inputType:(long long)arg3;	// IMP=0x001000000045d3e2
- (void)updateSelectionForTapOnSelectedRep:(id)arg1;	// IMP=0x001000000045d3dc
- (void)updateSelectionForInteractionWithRep:(id)arg1 extendingSelection:(_Bool)arg2;	// IMP=0x001000000045d0f8
- (void)updateSelectionForTapAtPoint:(struct CGPoint)arg1 extendingSelection:(_Bool)arg2;	// IMP=0x001000000045d0a9
@property(readonly, nonatomic) CRLGestureDispatcher *gestureDispatcher;
- (id)customRotateTrackerForCurrentSelection;	// IMP=0x001000000045ce09
@property(readonly, retain, nonatomic) CRLTrackerManipulatorCoordinator *tmCoordinator;
@property(readonly, retain, nonatomic) CRLDynamicOperationController *dynamicOperationController;
- (void)p_fadeInForZoomOperation;	// IMP=0x001000000045c9b2
- (void)p_fadeOutForZoomOperation;	// IMP=0x001000000045c412
- (void)p_endZoomingOperation;	// IMP=0x001000000045c25e
- (void)p_beginZoomingOperation;	// IMP=0x001000000045c0fb
- (void)endScrollingOperation;	// IMP=0x001000000045bfb4
- (void)beginScrollingOperation;	// IMP=0x001000000045be6d
- (void)i_invalidateSelectionHighlightLayers;	// IMP=0x001000000045bd0e
- (id)additionalChildInfosForLayout:(id)arg1;	// IMP=0x001000000045bc10
- (id)additionalDependentLayoutsForBoardItem:(id)arg1;	// IMP=0x001000000045bb34
- (_Bool)shouldSuppressSelectionKnobsForRep:(id)arg1;	// IMP=0x001000000045ba9b
@property(nonatomic) _Bool usesAlternateDrawableSelectionHighlight;
- (void)documentEditabilityDidChange;	// IMP=0x001000000045b568
- (void)copyEditabilityPropertiesFromInteractiveCanvasController:(id)arg1;	// IMP=0x001000000045b2b7
@property(readonly, nonatomic) _Bool editingDisabled;
- (unsigned long long)p_editingDisabledReasons;	// IMP=0x001000000045b263
- (_Bool)p_areAnyCollaboratorsPresent;	// IMP=0x001000000045b21b
@property(readonly, nonatomic) _Bool shouldAllowKeyCommands;
- (_Bool)isInInspectorDynamicOperation;	// IMP=0x001000000045b146
- (void)endPossiblyParallelInspectorDynamicOperation;	// IMP=0x001000000045af31
- (void)beginPossiblyParallelInspectorDynamicOperation;	// IMP=0x001000000045aee6
@property(readonly, nonatomic) _Bool shouldSupportedDynamicOperationsEnqueueCommandsInRealTime;
@property(readonly, nonatomic) _Bool isDynamicOperationEnding;
@property(readonly, nonatomic) _Bool isInDynamicOperation;
- (void)endDynamicOperation;	// IMP=0x001000000045a84e
- (void)willEndDynamicOperation;	// IMP=0x001000000045a671
- (void)beginDynamicOperation;	// IMP=0x0010000000459ef9
- (_Bool)openURL:(id)arg1;	// IMP=0x0010000000459ef1
- (_Bool)canCustomizeHyperlinkViewController;	// IMP=0x0010000000459ee9
- (void)toggleHyperlinkUIForRep:(id)arg1;	// IMP=0x0010000000459ee3
- (_Bool)allowedToShowHyperlinkContextMenuForRep:(id)arg1;	// IMP=0x0010000000459edb
- (_Bool)isHyperlinkKnobEnabledForRep:(id)arg1;	// IMP=0x0010000000459ed3
@property(readonly, nonatomic) _Bool shouldShowHyperlinkKnob;
@property(readonly, nonatomic) _Bool canModifyHyperlinks;
@property(readonly, nonatomic) UITraitCollection *currentTraitCollection;
@property(readonly, nonatomic) double visibleCanvasWidth;
@property(readonly, nonatomic) double contentsScale;
- (_Bool)shouldSuppressCollaboratorCursorHUDForController:(id)arg1;	// IMP=0x0010000000459dac
- (void)toggleSizeForCollaboratorHUDController:(id)arg1;	// IMP=0x0010000000459d1b
- (void)endFollowing:(id)arg1 forHUDController:(id)arg2;	// IMP=0x0010000000459caf
- (void)beginFollowing:(id)arg1 forHUDController:(id)arg2;	// IMP=0x0010000000459be1
- (void)positionDidUpdateForCollaboratorHUDController:(id)arg1;	// IMP=0x00100000004599d0
- (void)updatePositionForCollaboratorHUDController:(id)arg1;	// IMP=0x0010000000459695
- (void)removeCollaboratorHUDController:(id)arg1;	// IMP=0x001000000045944c
- (void)addCollaboratorHUDController:(id)arg1;	// IMP=0x0010000000458fcc
- (id)filteredMainCanvasRestoredSelectionPath:(id)arg1;	// IMP=0x0010000000458fb6
- (void)setShouldSuppressesCollaboratorHUD:(_Bool)arg1;	// IMP=0x0010000000458e66
- (void)removeAllCollaboratorHUDControllers;	// IMP=0x0010000000458cff
- (id)p_layoutForShowingCollaboratorCursorHUDAtSelectionPath:(id)arg1;	// IMP=0x0010000000458af5
- (CDStruct_7df06a46)p_collaboratorHUDPositionForSelectionPath:(id)arg1 collaboratorPresence:(id)arg2 allowScroll:(_Bool)arg3 hudSize:(unsigned long long)arg4;	// IMP=0x0010000000457447
- (void)hideCollaboratorHUDForCollaborator:(id)arg1;	// IMP=0x0010000000457204
- (void)p_showCollaboratorHUDForCollaborator:(id)arg1 withSelectionPath:(id)arg2 allowScroll:(_Bool)arg3 hudSize:(unsigned long long)arg4;	// IMP=0x00100000004565bf
- (void)showCollaboratorHUDForCollaborator:(id)arg1 withSelectionPath:(id)arg2 allowScroll:(_Bool)arg3;	// IMP=0x00100000004565aa
- (void)updateCollaboratorHUDForStopFollowingCollaborator:(id)arg1;	// IMP=0x0010000000456345
- (void)updateCollaboratorHUDForBeginFollowingCollaborator:(id)arg1;	// IMP=0x0010000000455fe1
- (void)p_collapseAllExpandedCollaboratorHUDs;	// IMP=0x0010000000455dd6
- (void)scrollToCollaborator:(id)arg1 withSelectionPath:(id)arg2;	// IMP=0x0010000000455580
- (_Bool)p_followEnabled;	// IMP=0x0010000000455568
@property(readonly, nonatomic) NSSet *currentCollaboratorPresences;
- (void)collaboratorCursorSelectionPathChangedFromSelectionPath:(id)arg1 toSelectionPath:(id)arg2 collaboratorPresence:(id)arg3;	// IMP=0x0010000000454b02
- (void)p_endCachingLayoutsForCollaboratorCursors;	// IMP=0x0010000000454ae2
- (void)p_beginCachingLayoutsForCollaboratorCursors;	// IMP=0x0010000000454693
- (void)p_performBlockWithCachedLayoutsForCollaboratorCursors:(CDUnknownBlockType)arg1;	// IMP=0x0010000000454644
- (_Bool)i_shouldShowCollaboratorCursorForLayout:(id)arg1;	// IMP=0x00100000004545ef
- (id)p_topCollaboratorPresenceOfPresences:(id)arg1;	// IMP=0x0010000000454363
- (id)i_collaboratorPresenceSelectingLayout:(id)arg1;	// IMP=0x0010000000453fbb
- (id)p_repsForCollaboratorCursorSelectionPath:(id)arg1;	// IMP=0x0010000000453c21
@property(readonly, nonatomic) NSArray *i_decorators;
- (void)removeDecorator:(id)arg1;	// IMP=0x0010000000453993
- (void)addDecorator:(id)arg1;	// IMP=0x001000000045375b
- (void)closeOverlays;	// IMP=0x00100000004536dd
@property(readonly, nonatomic) CALayer *overlayLayer;
@property(readonly, nonatomic) _Bool shouldShowPathHighlightOnUnselectedInvisibleShapes;
@property(readonly, nonatomic) _Bool shouldEverShowPathHighlightOnInvisibleShapes;
@property(readonly, nonatomic) NSArray *additionalLayersUnderRepLayers;
@property(readonly, nonatomic) CALayer *repContainerLayer;
- (void)performBlockOnMainThreadAfterLayoutIfNecessary:(CDUnknownBlockType)arg1;	// IMP=0x001000000045345b
- (void)layoutIfNeededIncludingLayerTreeIfYouKnowWhatYouAreDoing;	// IMP=0x0010000000453449
- (void)layoutIfNeeded;	// IMP=0x00100000004533ae
- (id)mostVisibleParentForFreehandDrawingLayouts;	// IMP=0x0010000000453202
- (id)parentForFreehandDrawingLayoutsAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000004531b2
- (id)layoutForInfoNearestVisibleRect:(id)arg1 intersectingSelectionPath:(id)arg2;	// IMP=0x0010000000452e3f
- (id)layoutForInfoNearestVisibleRect:(id)arg1;	// IMP=0x0010000000452b1c
- (id)layoutsForInfo:(id)arg1 intersectingSelectionPath:(id)arg2;	// IMP=0x00100000004529a3
- (id)layoutForSelectionPath:(id)arg1;	// IMP=0x0010000000452953
- (id)layoutForInfo:(id)arg1;	// IMP=0x00100000004528d9
- (id)layoutsForSelectionPath:(id)arg1;	// IMP=0x001000000045246b
- (id)layoutsForInfo:(id)arg1;	// IMP=0x00100000004523f1
- (id)validatedLayoutForInfo:(id)arg1;	// IMP=0x0010000000452377
@property(readonly, nonatomic) CRLCanvasLayoutController *layoutController;
- (id)hitKnobAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2 returningRep:(id *)arg3;	// IMP=0x001000000045210e
- (void)p_recursiveHitKnobAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2 inRep:(id)arg3 minDistance:(double *)arg4 hitKnob:(id *)arg5 hitRep:(id *)arg6;	// IMP=0x0010000000451cc6
- (id)hitRepsAtPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;	// IMP=0x0010000000451aa9
- (id)hitRepIgnoringClickThrough:(struct CGPoint)arg1;	// IMP=0x0010000000451912
- (id)hitRep:(struct CGPoint)arg1;	// IMP=0x00100000004518fe
- (id)hitRep:(struct CGPoint)arg1 withPrecision:(_Bool)arg2;	// IMP=0x00100000004518ea
- (id)hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;	// IMP=0x00100000004518d3
- (id)hitRep:(struct CGPoint)arg1 withPrecision:(_Bool)arg2 passingTest:(CDUnknownBlockType)arg3;	// IMP=0x00100000004517ed
@property(readonly, nonatomic) NSArray *topLevelRepsForHitTesting;
@property(readonly, nonatomic) NSArray *topLevelRepsForDragSelecting;
@property(readonly, nonatomic) id <CRLContainerInfo> topLevelContainerInfoForEditing;
@property(readonly, nonatomic) CRLCanvasRep<CRLCanvasContainerRep> *topLevelContainerRepForEditing;
- (id)unitStringForAngle:(double)arg1 andLength:(double)arg2;	// IMP=0x001000000045113e
- (id)unitStringForAngle:(double)arg1 shouldNormalize:(_Bool)arg2;	// IMP=0x0010000000450fe0
- (id)unitStringForAngle:(double)arg1;	// IMP=0x0010000000450e99
- (id)unitStringForNumber:(double)arg1;	// IMP=0x0010000000450d49
- (id)unitStringForSize:(struct CGSize)arg1 forAccessibility:(_Bool)arg2;	// IMP=0x0010000000450b6d
- (id)unitStringForPoint:(struct CGPoint)arg1;	// IMP=0x0010000000450999
- (id)numberFormatter;	// IMP=0x0010000000450952
- (id)unitFormatter;	// IMP=0x00100000004508c9
@property(readonly, nonatomic) _Bool i_shouldAttemptToPreserveContentOffsetAfterFixFrame;
- (struct CGRect)growUnscaledCanvasLayerRect:(struct CGRect)arg1 withViewScale:(double)arg2;	// IMP=0x0010000000450390
- (struct CGSize)convertBoundsToUnscaledSize:(struct CGSize)arg1;	// IMP=0x0010000000450322
- (struct CGSize)convertUnscaledToBoundsSize:(struct CGSize)arg1;	// IMP=0x00100000004502b4
- (MISSING_TYPE *)convertBoundsToUnscaledPoint: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000450246
- (struct CGPoint)convertUnscaledToBoundsPoint:(struct CGPoint)arg1;	// IMP=0x00100000004501d8
- (struct CGRect)convertBoundsToUnscaledRect:(struct CGRect)arg1;	// IMP=0x0010000000450160
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;	// IMP=0x00100000004500e8
@property(readonly, nonatomic) _Bool allowNegativeAutoscroll;
@property(readonly, nonatomic) _Bool allowAutoscroll;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForScrollingAutomatically;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForAutoscroll;
- (struct CGRect)p_calculateVisibleUnscaledRect;	// IMP=0x0010000000450042
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectIgnoringLimit;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRect;
- (struct CGRect)p_calculateVisibleBoundsRectForTiling;	// IMP=0x001000000044ff0e
@property(readonly, nonatomic) struct CGRect i_visibleBoundsRectForHitTestingCanvasView;
@property(readonly, nonatomic) struct CGRect visibleBoundsRectForTiling;
- (struct CGRect)p_visibleBoundsRectUsingSizeOfEnclosingScrollView:(_Bool)arg1 respectObscuredFrame:(_Bool)arg2 respectSafeArea:(_Bool)arg3 respectObscuringRects:(_Bool)arg4 respectAreaPastScollViewLimit:(_Bool)arg5;	// IMP=0x001000000044f80e
- (struct CGRect)visibleBoundsRectIgnoringLimit;	// IMP=0x001000000044f7d9
@property(readonly, nonatomic) struct CGRect visibleBoundsRectUsingSizeOfEnclosingScrollView;
@property(readonly, nonatomic) struct CGRect visibleBoundsRect;
@property(readonly, nonatomic) _TtC8Freeform24CRLMultiselectResizeInfo *multiselectResizeInfo;
- (id)repsToHide;	// IMP=0x001000000044f70c
@property(readonly, nonatomic) _Bool allowedToEditMask;
- (void)discardRepForClassChange:(id)arg1;	// IMP=0x001000000044f2b3
- (void)recreateAllLayoutsAndReps;	// IMP=0x001000000044f21d
- (id)containerRenderablesForRep:(id)arg1;	// IMP=0x001000000044efb8
- (id)renderableForRep:(id)arg1;	// IMP=0x001000000044ef3e
- (id)repForLayout:(id)arg1;	// IMP=0x001000000044ef2a
- (id)p_repForLayout:(id)arg1 createIfNeeded:(_Bool)arg2;	// IMP=0x001000000044ee89
- (id)repForInfo:(id)arg1;	// IMP=0x001000000044ee75
- (id)repForInfo:(id)arg1 createIfNeeded:(_Bool)arg2;	// IMP=0x001000000044eb4a
- (id)repsForInfo:(id)arg1;	// IMP=0x001000000044e966
- (id)topLevelZOrderedSiblingsOfInfos:(id)arg1;	// IMP=0x001000000044e01e
- (void)clearLayoutsForTopLevelContainerChange;	// IMP=0x001000000044dfe1
- (struct CGRect)p_safeAreaLayoutGuideLayoutFrame;	// IMP=0x001000000044dedb
@property(copy, nonatomic) NSArray *infosToDisplay;
- (void)transformGuides:(id)arg1 forLayout:(id)arg2;	// IMP=0x001000000044ddfb
- (_Bool)shouldGenerateGuidesForLayout:(id)arg1;	// IMP=0x001000000044ddf3
- (id)provideDynamicGuidesForLayout:(id)arg1;	// IMP=0x001000000044dde6
- (struct CGRect)boundingRectForActiveGuidesForPoint:(struct CGPoint)arg1;	// IMP=0x001000000044ddc8
@property(readonly, nonatomic) NSArray *infosForGuides;
- (void)translateGuides:(id)arg1 toContainerRect:(struct CGRect)arg2;	// IMP=0x001000000044dc6b
- (void)clipGuideToContainer:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x001000000044db70
- (void)translateGuide:(id)arg1 toContainerRect:(struct CGRect)arg2;	// IMP=0x001000000044da16
@property(readonly, nonatomic) CRLCanvasGuideController *guideController;
- (_Bool)p_shouldTransformCurrentSelectionAsSingleEntity;	// IMP=0x001000000044d9a1
- (void)updateConnectorKnobVisibilityIfNeeded;	// IMP=0x001000000044d661
- (void)updateCanvasDotGridVisibilityIfNeeded;	// IMP=0x001000000044d512
- (_Bool)shouldEnableToolbarDoneButton;	// IMP=0x001000000044d3f0
- (_Bool)shouldShowInstructionalTextForLayout:(id)arg1;	// IMP=0x001000000044d33b
@property(readonly, nonatomic) _Bool shouldShowTextOverflowGlyphs;
@property(readonly, nonatomic) _Bool isCanvasInteractive;
- (void)p_spellCheckingStateChangedNotification:(id)arg1;	// IMP=0x001000000044d139
- (void)p_spellCheckerWordsDidChangeNotification:(id)arg1;	// IMP=0x001000000044cfd7
- (_Bool)spellCheckingSuppressed;	// IMP=0x001000000044cf41
- (_Bool)spellCheckingSupported;	// IMP=0x001000000044ced3
@property(readonly, nonatomic) struct CGRect visibleScaledRectForCanvasUI;
@property(readonly, nonatomic) id <CRLMediaReplacer> mediaReplacer;
@property(readonly, nonatomic) _Bool hasMediaReplacer;
@property(copy, nonatomic) CRLColor *selectionHighlightColor;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 onLayer:(id)arg2;	// IMP=0x001000000044c990
- (void)setNeedsDisplayOnLayer:(id)arg1;	// IMP=0x001000000044c97b
- (void)updateCanvasViewSubviewFrames;	// IMP=0x001000000044c93e
- (struct CGSize)p_sizeOfScrollViewEnclosingCanvasForVisibleCanvasCalculations;	// IMP=0x001000000044c804
- (struct CGSize)p_calculatedSizeOfScrollViewEnclosingCanvas;	// IMP=0x001000000044c507
@property(readonly, nonatomic) struct CGSize sizeOfScrollViewEnclosingCanvas;
@property(readonly, nonatomic) struct CGPoint contentOffset;
- (void)setContentOffset:(struct CGPoint)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x001000000044c2ad
- (void)setContentOffset:(struct CGPoint)arg1 source:(id)arg2 scrollOptions:(unsigned long long)arg3;	// IMP=0x001000000044c225
- (void)growCanvasAsNeededToSetContentOffset:(struct CGPoint)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x001000000044c0f9
- (void)growCanvasAsNeededToRestoreContentOffset:(struct CGPoint)arg1;	// IMP=0x001000000044bef7
- (void)scrollRectToVisibleWithSelectionOutset:(struct CGRect)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x001000000044be8d
- (void)scrollRectToVisible:(struct CGRect)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x001000000044b9ee
- (struct CGPoint)p_contentOffsetToScrollRectToVisible:(struct CGRect)arg1 shouldCenterVertically:(_Bool)arg2 forceCenteringVertically:(_Bool)arg3 forceCenteringHorizontally:(_Bool)arg4;	// IMP=0x001000000044a8e1
- (void)updateScrollViewContentOffsetIfNeeded;	// IMP=0x001000000044a8db
- (struct CGRect)p_unobscuredScrollViewFrameIgnoringObscuringRectangles;	// IMP=0x001000000044a7f8
- (void)unobscuredFrameDidChange;	// IMP=0x001000000044a5e2
- (void)p_updateUnobscuredFrame;	// IMP=0x001000000044a2c5
- (struct CGRect)p_unosbcuredFrameOfView:(id)arg1 includingObscuringRectangles:(_Bool)arg2;	// IMP=0x0010000000449dc5
- (struct CGRect)unobscuredFrameOfView:(id)arg1;	// IMP=0x0010000000449da0
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 animated:(_Bool)arg3;	// IMP=0x0010000000449c89
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 maintainPosition:(_Bool)arg3 animated:(_Bool)arg4;	// IMP=0x0010000000449bf0
- (struct CGPoint)clampedUnscaledContentOffset:(struct CGPoint)arg1 forViewScale:(double)arg2;	// IMP=0x001000000044978b
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 animated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000004495c3
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 animated:(_Bool)arg3 source:(id)arg4;	// IMP=0x001000000044952f
@property(readonly, nonatomic) _Bool shouldResizeCanvasToScrollView;
@property(readonly, nonatomic) struct CGSize canvasScrollingOutset;
@property(readonly, nonatomic) _Bool shouldPreventSyncingContentOffset;
@property(readonly, nonatomic) _Bool shouldPreventSyncingViewScale;
@property(readonly, nonatomic) double fitWidthViewScale;
@property(readonly, nonatomic) double currentViewScale;
@property(nonatomic) double viewScale;
@property(readonly, nonatomic) struct CGColor *canvasEdgeBackgroundColor;
@property(readonly, nonatomic) CRLCanvasLayer *canvasLayer;
@property(readonly, nonatomic) CRLCanvasView *canvasView;
- (void)p_editorControllerSelectionDidChangeAndWantsKeyboard:(id)arg1;	// IMP=0x0010000000448fe7
- (void)p_notifyRepsForSelectionChangeFrom:(id)arg1 to:(id)arg2;	// IMP=0x0010000000448aa2
- (void)p_notifyRepsForChangeFromSelectionPath:(id)arg1 toSelectionPath:(id)arg2;	// IMP=0x0010000000448998
- (_Bool)p_shouldSuppressMultiselectResizeInfo;	// IMP=0x00100000004488f5
- (void)updateMultiselectResizeInfoIfNeeded;	// IMP=0x0010000000448289
- (void)p_editorControllerSelectionPathDidChange:(id)arg1;	// IMP=0x0010000000447fdd
- (void)p_editorControllerDidChangeTextInputEditor:(id)arg1;	// IMP=0x0010000000447ea1
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x0010000000447e57
- (void)resumeEditing;	// IMP=0x0010000000447ab9
- (void)teardownTextInputResponder;	// IMP=0x0010000000447a98
- (void)setupTextInputResponder;	// IMP=0x001000000044791b
- (void)stopReusingTextInputResponder;	// IMP=0x0010000000447915
- (void)reuseTextInputResponderFrom:(id)arg1;	// IMP=0x0010000000447900
- (void)didExitPreviewMode;	// IMP=0x00100000004477bd
- (void)updateRenderableForRep:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000447577
- (void)setShouldSuppressRendering:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00100000004473e7
- (void)invalidateCollaboratorHUDControllers;	// IMP=0x0010000000447289
- (_Bool)i_areLayersInvalidForDecorator:(id)arg1;	// IMP=0x0010000000447263
- (void)invalidateLayersForDecorator:(id)arg1;	// IMP=0x001000000044722d
- (void)invalidateOverlayLayersForRep:(id)arg1;	// IMP=0x0010000000447217
- (void)invalidateContentLayersForRep:(id)arg1;	// IMP=0x0010000000447201
- (void)invalidateAllLayers;	// IMP=0x00100000004471eb
- (void)invalidateVisibleBounds;	// IMP=0x00100000004471d5
- (void)invalidateReps;	// IMP=0x00100000004471bf
- (void)canvasInvalidatedForRep:(id)arg1;	// IMP=0x00100000004471a9
- (void)canvasInvalidatedForLayout:(id)arg1;	// IMP=0x0010000000447193
- (void)layoutInvalidated;	// IMP=0x001000000044717d
- (void)p_scrollToSelectionPath:(id)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x0010000000446ad6
- (struct CGPoint)p_computeClampedUnscaledContentOffsetWithTargetRect:(struct CGRect)arg1 selectionContextRectWhenZooming:(struct CGRect)arg2 viewScale:(double)arg3 unscaledOutset:(double)arg4;	// IMP=0x00100000004464e0
- (double)p_safeAreaMargin;	// IMP=0x001000000044640e
- (void)clearOptionsForScrollingToSelectionAfterLayout:(unsigned long long)arg1;	// IMP=0x00100000004463fe
- (void)setOptionsForScrollingToSelectionAfterLayout:(unsigned long long)arg1;	// IMP=0x00100000004463f1
- (void)p_clearSelectionScrollingState;	// IMP=0x00100000004463c4
- (void)scrollToSelectionPath:(id)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x0010000000445e92
- (void)cancelScrollToCurrentSelectionPathAfterLayout;	// IMP=0x0010000000445e80
- (void)scrollToCurrentSelectionPathAfterLayoutWithOptions:(unsigned long long)arg1;	// IMP=0x0010000000445dd9
- (void)scrollToCurrentSelectionPathAfterLayout;	// IMP=0x0010000000445dc5
- (struct CGRect)p_scaledRectToScrollToForSelectionPath:(id)arg1 shouldCenterVertically:(_Bool)arg2;	// IMP=0x0010000000445b89
- (void)forLayoutNearestVisibleRectForInfosForSelectionPath:(id)arg1 performBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000004459f9
- (void)withLayoutForSelectionPath:(id)arg1 flags:(unsigned long long)arg2 performBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000004456a7
- (void)withLayoutForSelectionPath:(id)arg1 performBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000445690
- (CDStruct_a5f74a6d)p_scrollingInformationForSelectionPath:(id)arg1 allowZoom:(_Bool)arg2;	// IMP=0x0010000000445062
- (struct CGRect)rectInRootForScrollingToSelectionPath:(id)arg1 onLayout:(id)arg2 allowingZooming:(_Bool)arg3;	// IMP=0x0010000000444fd8
- (void)setSelectionPath:(id)arg1 withSelectionFlags:(unsigned long long)arg2;	// IMP=0x0010000000444cfd
- (void)scrollSearchReferenceToVisible:(id)arg1 scrollOptions:(unsigned long long)arg2;	// IMP=0x0010000000444c2f
- (Class)wpSelectionClassForStorage:(id)arg1;	// IMP=0x0010000000444c1e
- (id)selectionPathForSearchReference:(id)arg1;	// IMP=0x0010000000444b31
- (void)scrollCurrentSelectionToVisibleWithOptions:(unsigned long long)arg1;	// IMP=0x0010000000444ab4
- (id)infoToScrollToForSelectionPath:(id)arg1;	// IMP=0x0010000000444aa2
@property(readonly, nonatomic) NSSet *containersForSelection;
@property(readonly, nonatomic) _Bool hasSelectedInfosInMultipleContainers;
@property(readonly, nonatomic) _Bool hasSelection;
- (_Bool)currentSelectionPathContainsInfo:(id)arg1;	// IMP=0x0010000000444623
@property(readonly, copy, nonatomic) NSSet *infosForCurrentSelectionPath;
- (id)modelsForSelectionPath:(id)arg1;	// IMP=0x0010000000444591
- (id)infosForSelectionPath:(id)arg1;	// IMP=0x0010000000444517
@property(readonly, nonatomic) CRLSelectionModelTranslator *selectionModelTranslator;
- (id)infoForSelectionPath:(id)arg1;	// IMP=0x0010000000443fc6
@property(readonly, nonatomic) _Bool shouldZoomOnSelectionChange;
- (void)p_zoomWithAnimationToUnscaledRect:(struct CGRect)arg1 withDuration:(double)arg2 shouldFixContentOffsetAfterAnimation:(_Bool)arg3;	// IMP=0x0010000000443c2a
- (void)zoomWithAnimationToUnscaledRect:(struct CGRect)arg1 withDuration:(double)arg2;	// IMP=0x0010000000443c13
- (void)zoomWithAnimationToUnscaledRect:(struct CGRect)arg1;	// IMP=0x0010000000443bd0
- (void)scrollCenteredOrZoomToUnscaledRect:(struct CGRect)arg1 shouldAnimateScroll:(_Bool)arg2;	// IMP=0x0010000000443a57
- (double)p_targetViewScaleForUnscaledRect:(struct CGRect)arg1;	// IMP=0x00100000004437de
- (void)zoomToSelectionPath:(id)arg1;	// IMP=0x0010000000443477
- (void)zoomToFitAllContent;	// IMP=0x001000000044309d
- (void)zoomToCurrentSelection;	// IMP=0x001000000044302f
- (void)zoomToSelection:(id)arg1;	// IMP=0x001000000044301d
@property(readonly, nonatomic) struct CGPoint smartZoomCenterForNoSelection;
@property(readonly, nonatomic) _Bool canZoomToCurrentSelection;
- (void)endEditingDiscardingEdits;	// IMP=0x0010000000442eb7
- (void)endEditingWithFlags:(unsigned long long)arg1;	// IMP=0x0010000000442ce4
- (void)endEditing;	// IMP=0x0010000000442cd0
- (id)newCanvasEditor;	// IMP=0x0010000000442c63
@property(readonly, nonatomic) CRLEditorController *editorController;
- (void)presentErrors:(id)arg1 withLocalizedDescription:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000442412
- (void)presentError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000442387
- (void)canvas:(id)arg1 createdRep:(id)arg2;	// IMP=0x001000000044231e
- (id)additionalVisibleInfosForCanvas:(id)arg1;	// IMP=0x0010000000442066
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1;	// IMP=0x0010000000442027
- (void)canvasDidValidateLayoutsWithDependencies:(id)arg1;	// IMP=0x0010000000441fcd
- (void)updateLayerTreeForInteractiveCanvas:(id)arg1;	// IMP=0x0010000000440d9b
- (void)p_validateLayerSuppressionAPIAccess;	// IMP=0x00100000004409e0
- (void)i_endSuppressingLayerUpdates;	// IMP=0x00100000004407ab
- (void)i_beginSuppressingLayerUpdatesExceptForReps:(id)arg1;	// IMP=0x0010000000440555
@property(readonly, nonatomic) _Bool i_currentlySuppressingLayerUpdates;
- (void)canvasDidUpdateRepsFromLayouts:(id)arg1;	// IMP=0x001000000044050b
- (void)canvasWillUpdateRepsFromLayouts:(id)arg1;	// IMP=0x001000000044035f
- (_Bool)p_currentSelectionIsOnscreen;	// IMP=0x001000000043fef3
- (void)p_collabParticipantsDidChange:(id)arg1;	// IMP=0x001000000043fdb0
- (void)p_documentSessionControllerDidUpdateRevision:(id)arg1;	// IMP=0x001000000043fdaa
- (void)canvasDidLayout:(id)arg1;	// IMP=0x001000000043fafc
- (void)canvasDidValidateLayouts:(id)arg1;	// IMP=0x001000000043fa78
- (void)canvasWillValidateLayouts:(id)arg1;	// IMP=0x001000000043f9f4
- (void)i_canvasDidUpdateVisibleBounds;	// IMP=0x001000000043f98a
- (void)canvasDidInvalidateAllLayers:(id)arg1;	// IMP=0x001000000043f97d
- (void)canvasLayoutInvalidated:(id)arg1;	// IMP=0x001000000043f8ea
- (id)boardItemOwnerForCanvas:(id)arg1;	// IMP=0x001000000043f8d8
@property(readonly, nonatomic) struct CGSize defaultMinimumUnscaledCanvasSize;
- (id)backgroundColorAtUnscaledCanvasPoint:(struct CGPoint)arg1;	// IMP=0x001000000043f8a9
@property(readonly, nonatomic) _Bool shouldSuppressFontSmoothing;
@property(readonly, nonatomic) CRLChangeNotifier *changeNotifier;
@property(readonly, nonatomic) _TtC8Freeform20CRLCommandController *commandController;
@property(readonly, nonatomic) _TtC8Freeform21CRLEditingCoordinator *editingCoordinator;
@property(readonly, nonatomic) _TtC8Freeform8CRLBoard *board;
- (void)p_endObservingDocumentRootIfNeeded;	// IMP=0x001000000043f1b2
- (void)p_realTimeStateDidChange:(id)arg1;	// IMP=0x001000000043efaf
- (void)p_realTimeSessionNewParticipantDidJoin:(id)arg1;	// IMP=0x001000000043ef81
- (void)p_beginObservingDocumentRoot;	// IMP=0x001000000043ea86
@property(readonly, nonatomic) _Bool textMagnifierIsUp;
- (void)removeBackgroundRenderingObject:(id)arg1;	// IMP=0x001000000043e50c
- (void)addBackgroundRenderingObject:(id)arg1;	// IMP=0x001000000043e45d
- (void)teardownBackgroundRendering;	// IMP=0x001000000043e2d5
@property(readonly, nonatomic) CRLInteractiveCanvasLayerHelper *i_interactiveCanvasLayerHelper;
- (id)p_sourceInteractionSourceForNotficiationUserInfo;	// IMP=0x001000000043e28f
- (_Bool)p_shouldTimeoutCollabCursor;	// IMP=0x001000000043e287
- (void)layerHostHasBeenTornDown;	// IMP=0x001000000043e1db
- (void)teardown;	// IMP=0x001000000043de38
- (void)teardownCollaboratorCursorInfrastructureInvalidatingLayers:(_Bool)arg1;	// IMP=0x001000000043dc79
- (void)p_teardownCanvasEditor;	// IMP=0x001000000043db95
- (void)forwardInvocation:(id)arg1;	// IMP=0x001000000043d859
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x001000000043d845
- (_Bool)respondsToSelector:(SEL)arg1 withSender:(id)arg2;	// IMP=0x001000000043d76f
- (id)methodSignatureForSelector:(SEL)arg1;	// IMP=0x001000000043d468
- (void)dealloc;	// IMP=0x001000000043ce93
- (void)p_commonInit;	// IMP=0x001000000043cc67
- (void)removeCommonObservers;	// IMP=0x001000000043cbbb
- (void)addCommonObservers;	// IMP=0x001000000043ca99
- (id)init;	// IMP=0x001000000043ca4a
- (void)p_recursivelyAddRep:(id)arg1 forStorage:(id)arg2 toSet:(id)arg3;	// IMP=0x0010000000131c01
- (id)p_repsForStorage:(id)arg1;	// IMP=0x0010000000131a43
- (id)closestRepToPoint:(struct CGPoint)arg1 forStorage:(id)arg2;	// IMP=0x0010000000131758
- (void)withLayoutNearestPoint:(struct CGPoint)arg1 forStorage:(id)arg2 performBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000131692
- (_Bool)p_accessibilityShouldCheckAncestorCanPerformAction:(SEL)arg1 withSender:(id)arg2;	// IMP=0x00100000005d67ad
@property(nonatomic, readonly) CRLCanvasRep *repForTextEditingInspecting;
- (void)updateTipsWithConnectorKnobsEnabled:(_Bool)arg1;	// IMP=0x0010000000e246c0
- (void)donateTipEventParticipantFollowed;	// IMP=0x0010000000e24630
- (void)donateTipEventObjectsConnectedWithConnectionLine;	// IMP=0x0010000000e24610
- (void)updateTipsBasedOnSelection:(id)arg1;	// IMP=0x0010000000e24600
- (_Bool)sendViewportRequestMessageTo:(id)arg1;	// IMP=0x0010000000e24570
- (_Bool)wantsToSuppressMultiselectionForPenTool;	// IMP=0x0010000000e23da0
- (void)sendRealTimeEnterToPeersIfNecessary;	// IMP=0x0010000000e23900
- (void)sendSelectionPathToPeersIfNecessary;	// IMP=0x0010000000e233b0
@property(nonatomic, readonly) CRLConnectionLineAbstractLayout *highestZOrderConnectionLineLayoutAcrossBoard;
- (void)animateIntoConnectorMode;	// IMP=0x0010000000e22070
@property(nonatomic, readonly) _Bool anyConnectorKnobVisible;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

