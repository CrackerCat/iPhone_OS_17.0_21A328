//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CALayer, CRLCanvasLayoutGeometry, CRLCanvasRenderable, CRLCanvasShapeRenderable, CRLImageLayout, CRLImageRepDrawingHelper, CRLImageRepLayerContentsRecipe, CRLMaskInfo, CRLMaskLayout, CRLRemoveImageBackgroundData, NSArray, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSUUID, _TtC8Freeform12CRLImageItem, _TtC8Freeform8CRLAsset;
@protocol OS_dispatch_semaphore;

@interface CRLImageRep
{
    CRLCanvasLayoutGeometry *_lastImageGeometryInRoot;	// 8 = 0x8
    CRLCanvasLayoutGeometry *_lastMaskGeometryInRoot;	// 16 = 0x10
    struct CGAffineTransform _lastLayoutToImageTransform;	// 24 = 0x18
    struct CGRect _frameInUnscaledCanvasRelativeToSuper;	// 72 = 0x48
    _Bool _frameInUnscaledCanvasIsValid;	// 104 = 0x68
    CRLImageRepDrawingHelper *_drawingHelper;	// 112 = 0x70
    CRLImageRepLayerContentsRecipe *_directlyManagedLayerContentsRecipe;	// 120 = 0x78
    CRLCanvasRenderable *_contentsRenderable;	// 128 = 0x80
    CRLCanvasShapeRenderable *_maskPathRenderable;	// 136 = 0x88
    CRLCanvasShapeRenderable *_maskSubrenderable;	// 144 = 0x90
    struct CGAffineTransform _lastPictureFrameLayerTransform;	// 152 = 0x98
    CRLCanvasShapeRenderable *_strokeRenderable;	// 200 = 0xc8
    CALayer *_frameMaskLayer;	// 208 = 0xd0
    struct CGRect _lastPictureFrameLayerRect;	// 216 = 0xd8
    _Bool _directlyManagesLayerContent;	// 248 = 0xf8
    _Bool _sizedImageNeedsDisplay;	// 249 = 0xf9
    _Bool _showImageHighlight;	// 250 = 0xfa
    struct CGAffineTransform _baseMaskLayoutTransform;	// 256 = 0x100
    NSMutableDictionary *_hitTestCache;	// 304 = 0x130
    NSMutableSet *_disabledCanvasViewGRs;	// 312 = 0x138
    NSMutableArray *_updateFromLayoutBlocks;	// 320 = 0x140
    NSObject<OS_dispatch_semaphore> *_updateFromLayoutBlocksLock;	// 328 = 0x148
    NSUUID *_downloadObserverIdentifier;	// 336 = 0x150
    struct CGImage *_imageForRemoveBackground;	// 344 = 0x158
    long long _imageForRemoveBackgroundAssetDataHash;	// 352 = 0x160
    CRLRemoveImageBackgroundData *_cachedRemoveImageBackgroundData;	// 360 = 0x168
    long long _userInitiatedBackgroundRemovalState;	// 368 = 0x170
    long long _autoBackgroundRemovalState;	// 376 = 0x178
    struct os_unfair_lock_s _backgroundRemovalLock;	// 384 = 0x180
    CRLCanvasShapeRenderable *_maskRenderable;	// 392 = 0x188
}

+ (_Bool)p_canRenderWithMaskToBoundsWithImageLayout:(id)arg1;	// IMP=0x00200000003eb4c0
+ (struct CGPath *)p_newPathToBakeIntoSizedImageForSize:(struct CGSize)arg1 withImageLayout:(id)arg2 orientation:(long long)arg3;	// IMP=0x00100000003ea6be
- (void).cxx_destruct;	// IMP=0x00100000003eeca1
@property(retain, nonatomic) CRLCanvasShapeRenderable *maskRenderable; // @synthesize maskRenderable=_maskRenderable;
@property(readonly, nonatomic) _Bool i_allowedToEditMask;
- (void)willEnterForeground;	// IMP=0x00100000003eec0d
- (void);	// IMP=0x00100000003eebfb
- (_Bool)supportsAlternatePressureDrag;	// IMP=0x00100000003eeb92
- (long long)dragTypeAtCanvasPoint:(struct CGPoint)arg1 forTouchType:(long long)arg2;	// IMP=0x00100000003ee8cd
- (void)p_hitCacheSetCachedValue:(_Bool)arg1 forPoint:(struct CGPoint)arg2;	// IMP=0x00100000003ee82d
- (_Bool)p_hitCacheGetCachedValue:(_Bool *)arg1 forPoint:(struct CGPoint)arg2;	// IMP=0x00100000003ee79b
- (void)p_invalidateHitTestCache;	// IMP=0x00100000003ee77e
- (id)cursorAtPoint:(struct CGPoint)arg1 forKnob:(id)arg2 withCursorPlatformObject:(id)arg3;	// IMP=0x00100000003ee566
- (double)additionalRotationForKnobOrientation;	// IMP=0x00100000003ee406
- (void)addKnobsToArray:(id)arg1;	// IMP=0x00100000003ee18b
- (id)newSelectionKnobForType:(unsigned long long)arg1 tag:(unsigned long long)arg2;	// IMP=0x00100000003ee0b2
- (void)updatePositionsOfKnobs:(id)arg1;	// IMP=0x00100000003edd31
- (_Bool)shouldShowSmartMaskKnobs;	// IMP=0x00100000003edaba
- (id)newTrackerForKnob:(id)arg1;	// IMP=0x00100000003eda29
- (void)p_calcNewImageGeometryAndReplaceImageWithRemoveImageBackgroundData:(id)arg1 dismissMiniFormatter:(_Bool)arg2;	// IMP=0x00100000003ed6e4
- (struct CGRect)p_calcNewImageItemRectWithRawSize:(struct CGSize)arg1 offset:(struct CGPoint)arg2;	// IMP=0x00100000003ed2cd
- (void)p_replaceImageDataWithRemoveImageBackgroundData:(id)arg1 rect:(struct CGRect)arg2;	// IMP=0x00100000003ec672
- (struct CGImage *)imageForRemoveBackground;	// IMP=0x00100000003ec661
- (unsigned long long)p_maxPixelAreaForBackgroundRemoval;	// IMP=0x00100000003ec5fd
- (struct CGImage *)p_createImageForRemoveBackground;	// IMP=0x00100000003ec2a0
- (void)p_removeBackgroundFromImageInitiatedByUser:(_Bool)arg1;	// IMP=0x00100000003eb7aa
- (void)removeBackgroundFromImage;	// IMP=0x00100000003eb793
- (_Bool)canRemoveBackgroundFromImage;	// IMP=0x00100000003eb73d
- (_Bool)p_shouldRenderWithMaskMatchingImage;	// IMP=0x00100000003eb699
- (_Bool)p_shouldRenderWithMaskToBounds;	// IMP=0x00100000003eb5e8
- (_Bool)p_shouldBakeMaskIntoSizedImage;	// IMP=0x00100000003eb26e
- (void)p_injectSizedImageIntoLayerContentsIfReady;	// IMP=0x00100000003eaafb
- (void)p_generateSizedImageIfNecessary;	// IMP=0x00100000003ea67f
- (_Bool)p_okayToGenerateSizedImage;	// IMP=0x00100000003ea66a
- (void)p_updateMaskSublayersForMaskEditMode;	// IMP=0x00100000003ea3c2
- (void)p_createMaskRenderableForRenderable:(id)arg1;	// IMP=0x00100000003ea273
- (void)p_disposeMaskRenderable;	// IMP=0x00100000003ea136
- (void)p_disposeStrokeLayer;	// IMP=0x00100000003ea040
- (void)p_updateHUD;	// IMP=0x00100000003e9faa
- (void)p_cleanUpMaskModeUI;	// IMP=0x00100000003e9e20
- (void)p_setUpMaskModeUI;	// IMP=0x00100000003e9cdd
- (void)p_endEditingMask;	// IMP=0x00100000003e9a8e
- (void)p_setDefaultMaskWithActionString:(id)arg1;	// IMP=0x00100000003e98b8
- (id)additionalRenderablesOverRenderable;	// IMP=0x00100000003e9581
- (void)p_updateStrokeLayerForStroke:(id)arg1 repRenderable:(id)arg2;	// IMP=0x00100000003e9071
- (void)p_updateMaskRenderable:(id)arg1 forRepRenderable:(id)arg2 shouldIncludeMask:(_Bool)arg3 shouldIncludeInstantAlpha:(_Bool)arg4 siblingLayer:(_Bool)arg5;	// IMP=0x00100000003e85b6
- (void)p_updateCornerRadiusOnRenderable:(id)arg1;	// IMP=0x00100000003e841a
- (_Bool)shouldDisplayAsSpatial;	// IMP=0x00100000003e8390
- (void)didUpdateRenderable:(id)arg1;	// IMP=0x00100000003e700b
- (void)willUpdateRenderable:(id)arg1;	// IMP=0x00100000003e6912
- (void)updateRenderableGeometryFromLayout:(id)arg1;	// IMP=0x00100000003e61f1
- (void)p_getAliasedValuesForMaskToBoundsDirectLayerFrame:(out struct CGRect *)arg1 transform:(out struct CGAffineTransform *)arg2;	// IMP=0x00100000003e5e19
- (_Bool)p_directlyManagesContentForRenderable:(id)arg1;	// IMP=0x00100000003e5ada
- (void)p_updateDirectlyManagesLayerContentForRenderable:(id)arg1;	// IMP=0x00100000003e59d9
- (_Bool)directlyManagesLayerContent;	// IMP=0x00100000003e59c9
- (void)p_handleAssetPreparationCompletion;	// IMP=0x00100000003e5804
- (void)p_listenForAssetChangesIfAppropriate;	// IMP=0x00100000003e4ecd
- (void)beginEditingMaskInMaskEditMode:(long long)arg1;	// IMP=0x00100000003e4dfd
- (_Bool)canEditMaskInMaskEditMode:(long long)arg1;	// IMP=0x00100000003e4df5
- (void)dynamicMoveSmartShapeKnobDidEndWithTracker:(id)arg1;	// IMP=0x00100000003e4c3b
- (void)dynamicallyMovedSmartShapeKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;	// IMP=0x00100000003e4a9a
- (void)dynamicMoveSmartShapeKnobDidBegin;	// IMP=0x00100000003e4a45
@property(readonly, nonatomic) struct CGPoint centerForGuideRenderablePlacement;
- (id)actionStringForRotate;	// IMP=0x00100000003e493e
- (struct CGPoint)unscaledGuidePosition;	// IMP=0x00100000003e472b
- (_Bool)shouldRasterizeRenderableDuringRotation;	// IMP=0x00100000003e4716
- (double)angleForRotation;	// IMP=0x00100000003e4642
- (struct CGPoint)centerForRotation;	// IMP=0x00100000003e4584
- (id)actionStringForResize;	// IMP=0x00100000003e44ac
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000003e407a
- (_Bool)wantsGuidesWhileResizing;	// IMP=0x00100000003e3fed
- (id)infoForTransforming;	// IMP=0x00100000003e3f50
- (id)dynamicResizeDidBegin;	// IMP=0x00100000003e3da4
- (_Bool)allowDragAcrossPageBoundaries;	// IMP=0x00100000003e3d27
- (_Bool)demandsExclusiveSelection;	// IMP=0x00100000003e3cb0
- (void)dynamicOperationDidEnd;	// IMP=0x00100000003e3bc4
- (_Bool)dragDidChangeGeometry;	// IMP=0x00100000003e3b30
- (_Bool)maskGeometryDidChange;	// IMP=0x00100000003e3a44
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;	// IMP=0x00100000003e3222
- (_Bool)p_currentEditOperationDidChangeTheImageGeometry;	// IMP=0x00100000003e2fb8
- (struct CGPoint)i_dragOffset;	// IMP=0x00100000003e2e78
- (struct CGRect)snapRectForDynamicDragWithOffset:(struct CGPoint)arg1;	// IMP=0x00100000003e2a0c
- (id)actionStringForDrag;	// IMP=0x00100000003e2934
- (_Bool)exclusivelyProvidesGuidesWhileAligning;	// IMP=0x00100000003e28cb
- (_Bool)providesGuidesWhileAligning;	// IMP=0x00100000003e2789
- (void)dynamicDragDidBegin;	// IMP=0x00100000003e2697
- (_Bool)shouldShowDragHUD;	// IMP=0x00100000003e264f
- (struct CGAffineTransform)transformForCollaboratorCursorRenderable;	// IMP=0x00100000003e258e
- (struct CGRect)boundsForCollaboratorCursorRenderable;	// IMP=0x00100000003e23ce
- (_Bool)p_isResizingMaskInMaskEditMode;	// IMP=0x00100000003e2343
- (_Bool)p_isResizingImageInMaskEditMode;	// IMP=0x00100000003e22b8
- (id)commandForAcceptingPasteWithImageInfo:(id)arg1 outSelectionBehavior:(out id *)arg2;	// IMP=0x00100000003e1fc2
- (_Bool)canPasteDataFromPhysicalKeyboard:(id)arg1;	// IMP=0x00100000003e1f0e
- (_Bool)shouldAllowReplacementFromPaste;	// IMP=0x00100000003e1e96
- (struct CGAffineTransform)transformForHighlightLayer;	// IMP=0x00100000003e1d98
- (struct CGRect)boundsForHighlightLayer;	// IMP=0x00100000003e1d01
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;	// IMP=0x00100000003e1b36
- (_Bool)hitRepChrome:(struct CGPoint)arg1;	// IMP=0x00100000003e1ac2
- (long long)tilingMode;	// IMP=0x00100000003e1ab7
- (id)overlayRenderables;	// IMP=0x00100000003e1798
- (void)documentEditabilityDidChange;	// IMP=0x00100000003e1658
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;	// IMP=0x00100000003e1610
- (void)processChangedProperty:(unsigned long long)arg1;	// IMP=0x00100000003e0f17
- (void)processChanges:(id)arg1;	// IMP=0x00100000003e0eb1
- (id)pathSourceForSelectionHighlightBehavior;	// IMP=0x00100000003e0e37
- (_Bool)shouldShowSelectionHighlight;	// IMP=0x00100000003e0dbd
- (void)p_handleImageMask;	// IMP=0x00100000003e0c99
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x00100000003e0c30
- (_Bool)p_allowedToEditMask;	// IMP=0x00100000003e0bc6
- (_Bool)containsPoint:(struct CGPoint)arg1 withPrecision:(_Bool)arg2;	// IMP=0x00100000003e031b
- (void)p_invalidateCachedRemoveBackgroundImage;	// IMP=0x00100000003e0307
- (void)becameNotSelected;	// IMP=0x00100000003e0281
- (void)becameSelected;	// IMP=0x00100000003e01ac
- (void)p_selectionPathDidChange:(id)arg1;	// IMP=0x00100000003e00aa
- (void)editMaskWithHUD:(_Bool)arg1;	// IMP=0x00100000003dfb9a
- (void)p_enterMaskModeIfNecessaryWithHUD:(_Bool)arg1;	// IMP=0x00100000003dfab8
- (void)endEditingMask;	// IMP=0x00100000003df8ac
- (void)endDynamicallyChangingMaskScale:(double)arg1;	// IMP=0x00100000003df643
- (void)dynamicallySetMaskScale:(double)arg1;	// IMP=0x00100000003df3ec
- (void)beginDynamicallyChangingMaskScale;	// IMP=0x00100000003df17a
- (id)newMaskResizer;	// IMP=0x00100000003df115
@property(readonly, nonatomic) NSArray *maskScaleDetents;
- (void)maskScaleLimitsReturningMin:(out double *)arg1 max:(out double *)arg2;	// IMP=0x00100000003def7e
@property(readonly, nonatomic) double maskScale;
@property(readonly, nonatomic) _Bool isMaskScaleFromLayout;
@property(readonly, nonatomic) long long maskEditMode;
- (void)maskWithHUD:(_Bool)arg1;	// IMP=0x00100000003ded10
- (void)unhighlightImage;	// IMP=0x00100000003decb9
- (void)highlightImage;	// IMP=0x00100000003dec62
- (_Bool)shouldShowShadow;	// IMP=0x00100000003deb78
- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;	// IMP=0x00100000003deb66
- (_Bool)p_drawsInOneStep;	// IMP=0x00100000003dea60
- (id)p_validatedBitmapImageProvider;	// IMP=0x00100000003dea01
- (id)p_validatedImageProvider;	// IMP=0x00100000003de96d
- (struct CGRect)imageDrawingHelperRectForCenteringDownloadProgressPlaceholderImage:(id)arg1;	// IMP=0x00100000003de88a
- (void)imageDrawingHelper:(id)arg1 didGenerateSizedImageSynchronously:(_Bool)arg2;	// IMP=0x00100000003de4a5
- (_Bool)imageDrawingHelperShouldRetryGeneratingSizedImageLater:(id)arg1;	// IMP=0x00100000003de45a
- (_Bool)imageDrawingHelperShouldGenerateSizedImageSynchronously:(id)arg1;	// IMP=0x00100000003de360
- (struct CGPath *)imageDrawingHelper:(id)arg1 newMaskPathForSizedImageWithSize:(struct CGSize)arg2 orientation:(long long)arg3;	// IMP=0x00100000003de2e8
- (_Bool)imageDrawingHelperShouldBakeMaskIntoSizedImage:(id)arg1;	// IMP=0x00100000003de2d6
- (_Bool)imageDrawingHelperImageHasAlpha:(id)arg1;	// IMP=0x00100000003de292
- (struct CGAffineTransform)imageDrawingHelperImageTransformInRootForAntialiasingDefeat:(id)arg1;	// IMP=0x00100000003de204
- (struct CGRect)imageDrawingHelperImageRect:(id)arg1;	// IMP=0x00100000003de188
- (id)imageDrawingHelperThumbnailImageData:(id)arg1;	// IMP=0x00100000003de138
- (id)imageDrawingHelperImageData:(id)arg1;	// IMP=0x00100000003de0e8
- (struct CGRect)clipRect;	// IMP=0x00100000003de081
- (struct CGRect)frameInUnscaledCanvas;	// IMP=0x00100000003ddd31
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(double)arg4 withMask:(_Bool)arg5 forLayer:(_Bool)arg6 forShadow:(_Bool)arg7 forHitTest:(_Bool)arg8;	// IMP=0x00100000003dd481
- (_Bool)canDrawInParallel;	// IMP=0x00100000003dd479
- (id)imageOfStroke:(struct CGRect *)arg1;	// IMP=0x00100000003dd196
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 strokeDrawOptions:(unsigned long long)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6 keepingChildrenPassingTest:(CDUnknownBlockType)arg7;	// IMP=0x00100000003dd11c
- (void)drawInLayerContext:(struct CGContext *)arg1;	// IMP=0x00100000003dd0e2
- (id)downloadProgressPlaceholderImage;	// IMP=0x00100000003dd0c2
- (_Bool)shouldShowLoadingUI;	// IMP=0x00100000003dd0a5
- (id)visuallySignificantDataSet;	// IMP=0x00100000003dd00c
- (_Bool)allowsSupportedDynamicOperationsToBeRealTime;	// IMP=0x00100000003dcfc4
- (void)documentModeDidChange;	// IMP=0x00100000003dce59
@property(readonly) _TtC8Freeform8CRLAsset *imageDataForRendering;
- (struct CGRect)boundsForStandardKnobs;	// IMP=0x00100000003dcd56
- (struct CGRect)targetRectForEditMenu;	// IMP=0x00100000003dcd37
- (_Bool)wantsToDistortWithImagerContext;	// IMP=0x00100000003dcccc
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;	// IMP=0x00100000003dcb6e
- (void)updateFromLayout;	// IMP=0x00100000003dc555
- (id)layoutsForChildReps;	// IMP=0x00100000003dc3f4
- (void)willBeRemoved;	// IMP=0x00100000003dc0e6
@property(readonly, nonatomic) CRLMaskLayout *maskLayout;
@property(readonly, nonatomic) CRLMaskInfo *maskInfo;
@property(readonly, nonatomic) CRLImageLayout *imageLayout;
@property(readonly, nonatomic) _TtC8Freeform12CRLImageItem *imageInfo;
- (void)dealloc;	// IMP=0x00100000003dbe94
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;	// IMP=0x00100000003dbc06
- (void)enterPreviewMode;	// IMP=0x00100000007fd300
@property(nonatomic, readonly) _Bool wantsToHandleDoubleTapsWhenLocked;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

