//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CRLBoardItemEditor, CRLiOSArrangeInspectorPaneLineEndPointUI, CRLiOSArrangeInspectorPaneSizePositionUI, CRLiOSArrangeZOrderCell, CRLiOSInspectorButtonCell, CRLiOSInspectorTableViewCell, MISSING_TYPE, NSSet, NSString, _TtC8Freeform36CRLiOSArrangeInspectorPaneRotationUI;
@protocol CRLArrangeInspectorDelegate, _TtP8Freeform55CRLiOSArrangeInspectorPaneCustomShapeSectionUIProviding_;

@interface CRLArrangeInspectorPane
{
    _Bool _needsFullReload;	// 8 = 0x8
    unsigned long long _sectionsNeedingUpdate;	// 16 = 0x10
    unsigned long long _sectionsNeedingReload;	// 24 = 0x18
    unsigned long long _visibleSectionIDIndexes[13];	// 32 = 0x20
    NSSet *_layoutsFromLastRefresh;	// 136 = 0x88
    _Bool _trackingZOrder;	// 144 = 0x90
    _Bool _openedCommandGroup;	// 145 = 0x91
    _Bool _isObservingZOrderChanges;	// 146 = 0x92
    CRLiOSArrangeZOrderCell *_arrangeZOrderCell;	// 152 = 0x98
    CRLiOSArrangeInspectorPaneSizePositionUI *_sizeAndPositionUIProvider;	// 160 = 0xa0
    CRLiOSArrangeInspectorPaneLineEndPointUI *_lineEndPointUIProvider;	// 168 = 0xa8
    CRLiOSInspectorTableViewCell *_constrainCell;	// 176 = 0xb0
    CDUnknownBlockType _constrainedDidChange;	// 184 = 0xb8
    _TtC8Freeform36CRLiOSArrangeInspectorPaneRotationUI *_rotationUIProvider;	// 192 = 0xc0
    CRLiOSInspectorButtonCell *_horizontalFlipCell;	// 200 = 0xc8
    CRLiOSInspectorButtonCell *_verticalFlipCell;	// 208 = 0xd0
    CRLiOSInspectorButtonCell *_lockCell;	// 216 = 0xd8
    CRLiOSInspectorButtonCell *_breakApartCell;	// 224 = 0xe0
    CRLiOSInspectorButtonCell *_groupCell;	// 232 = 0xe8
    CRLiOSInspectorButtonCell *_ungroupCell;	// 240 = 0xf0
    CRLiOSInspectorButtonCell *_mergeCell;	// 248 = 0xf8
    id <_TtP8Freeform55CRLiOSArrangeInspectorPaneCustomShapeSectionUIProviding_> _customShapeSectionProvider;	// 256 = 0x100
    CRLiOSInspectorTableViewCell *_rightAlignCell;	// 264 = 0x108
    CRLiOSInspectorTableViewCell *_standardAlignCell;	// 272 = 0x110
    CRLiOSInspectorButtonCell *_verticalDistributeCell;	// 280 = 0x118
    CRLiOSInspectorButtonCell *_horizontalDistributeCell;	// 288 = 0x120
    CRLiOSInspectorTableViewCell *_booleanCell;	// 296 = 0x128
    id <CRLArrangeInspectorDelegate> _delegate;	// 304 = 0x130
}

- (void).cxx_destruct;	// IMP=0x00100000001740d8
@property(nonatomic) __weak id <CRLArrangeInspectorDelegate> delegate; // @synthesize delegate=_delegate;
- (id)p_imageButtonWithImageName:(id)arg1 accessibilityLabel:(id)arg2 action:(SEL)arg3 target:(id)arg4;	// IMP=0x0010000000173f64
- (void)p_updateTitle;	// IMP=0x0010000000173f4b
- (_Bool)p_isInspectingRotatableItems;	// IMP=0x0010000000173ed9
- (_Bool)p_isInspectingFlippableObject;	// IMP=0x0010000000173e7c
- (_Bool)p_isInspectingBooleanableItems;	// IMP=0x0010000000173e2f
- (_Bool)p_isInspectingAlignableOrDistributableItems;	// IMP=0x0010000000173de2
- (_Bool)p_isInspectingDistributableItems;	// IMP=0x0010000000173d23
- (_Bool)p_isInspectingRightAlignableItems;	// IMP=0x0010000000173c8c
- (_Bool)p_isInspectingAlignableItems;	// IMP=0x0010000000173bf5
- (_Bool)p_isInspectingGroupUngroupableItems;	// IMP=0x0010000000173ba8
- (_Bool)p_isInspectingMergeableItems;	// IMP=0x0010000000173b34
- (_Bool)p_isInspectingUngroupableItems;	// IMP=0x0010000000173ade
- (_Bool)p_isInspectingGroupableItems;	// IMP=0x0010000000173a88
- (_Bool)p_isInspectingBreakApartableItems;	// IMP=0x0010000000173a3b
- (_Bool)p_isInspectingFreehandDrawing;	// IMP=0x00100000001739ed
- (_Bool)p_isInspectingShape;	// IMP=0x001000000017399f
- (_Bool)p_isInspectingImage;	// IMP=0x0010000000173959
- (_Bool)p_isInspectingLockableDrawableInfo;	// IMP=0x00100000001737a5
- (_Bool)p_isConstrainProportionsSwitchOn;	// IMP=0x0010000000173708
- (_Bool)p_isInspectingConstrainableDrawableInfos;	// IMP=0x001000000017357f
- (id)p_freehandDrawingEditor;	// IMP=0x0010000000173520
- (id)p_shapeEditor;	// IMP=0x00100000001734c1
- (id)p_canvasEditorHelper;	// IMP=0x0010000000173471
- (id)p_canvasEditor;	// IMP=0x00100000001733f7
- (void)lock:(id)arg1;	// IMP=0x0010000000173346
- (void)flipHorizontally:(id)arg1;	// IMP=0x00100000001732dd
- (void)flipVertically:(id)arg1;	// IMP=0x0010000000173274
- (void)p_setConstrainProportionsValue:(_Bool)arg1;	// IMP=0x0010000000172fd3
- (void)p_constrainProportions:(id)arg1;	// IMP=0x0010000000172f53
- (id)sectionTitles;	// IMP=0x0010000000172a92
- (id)sectionCellArrays;	// IMP=0x0010000000172a14
- (void)p_handlePotentiallyChangedLayouts;	// IMP=0x00100000001724f5
- (void)p_layoutsDidChange;	// IMP=0x001000000017249f
- (void)p_canvasDidLayout;	// IMP=0x001000000017248d
- (void)p_maskEditModeDidChange:(id)arg1;	// IMP=0x00100000001723bc
- (id)p_currentLayouts;	// IMP=0x001000000017236c
- (void)p_reloadCellsForSectionID:(long long)arg1;	// IMP=0x0010000000172103
- (void)p_setNeedsUpdateForSectionID:(long long)arg1;	// IMP=0x00100000001720e5
- (void)p_setNeedsReloadForSectionID:(long long)arg1;	// IMP=0x00100000001720c7
- (MISSING_TYPE *)p_sectionIndexForSectionID: /* Error: Ran out of types for this method. */;	// IMP=0x00100000001720b6
- (_Bool)p_isSectionVisible:(long long)arg1;	// IMP=0x0010000000172098
- (void)p_beginReloadingCells;	// IMP=0x0010000000172063
- (_Bool)checkboxGoesOnRightForSection:(long long)arg1;	// IMP=0x001000000017205b
- (id)p_cellForHorizontalStackOfButtons:(id)arg1 grouped:(_Bool)arg2 uniqueIdentifier:(id)arg3;	// IMP=0x0010000000171fd6
- (id)p_cellForButtonSectionWithTitle:(id)arg1 identifier:(id)arg2 tag:(long long)arg3 target:(id)arg4 action:(SEL)arg5 image:(id)arg6;	// IMP=0x0010000000171e08
- (id)p_cellForButtonSectionWithTitle:(id)arg1 identifier:(id)arg2 tag:(long long)arg3 action:(SEL)arg4 systemImageName:(id)arg5;	// IMP=0x0010000000171d42
- (id)p_cellForButtonSectionWithTitle:(id)arg1 identifier:(id)arg2 tag:(long long)arg3 target:(id)arg4 action:(SEL)arg5 imageName:(id)arg6;	// IMP=0x0010000000171c34
- (unsigned long long)currentZOrderForCell:(id)arg1;	// IMP=0x0010000000171bf0
- (unsigned long long)maximumZOrderForCell:(id)arg1;	// IMP=0x0010000000171bac
- (unsigned long long)minimumZOrderForCell:(id)arg1;	// IMP=0x0010000000171b68
- (void)zOrderCell:(id)arg1 didEndTrackingZOrder:(unsigned long long)arg2;	// IMP=0x0010000000171b13
- (void)zOrderCell:(id)arg1 didChangeZOrder:(unsigned long long)arg2;	// IMP=0x0010000000171ac5
- (void)zOrderCell:(id)arg1 didBeginTrackingZOrder:(unsigned long long)arg2;	// IMP=0x0010000000171a7d
- (void)zOrderCellDidMoveFront:(id)arg1;	// IMP=0x0010000000171a40
- (void)zOrderCellDidMoveBack:(id)arg1;	// IMP=0x0010000000171a03
- (id)p_cellsForBooleanSection;	// IMP=0x00100000001715db
- (_Bool)p_alignDistributeCellsNeedRefresh;	// IMP=0x0010000000171519
- (id)p_cellsForDistributeSection;	// IMP=0x00100000001712b8
- (id)p_cellsForAlignSection;	// IMP=0x0010000000170b55
- (void)p_updateShapeSpecificSection;	// IMP=0x00100000001708c5
- (id)p_cellsForShapeSpecificSection;	// IMP=0x00100000001707e5
- (id)p_customShapeSectionProvider;	// IMP=0x0010000000170730
- (_Bool)p_groupCellsNeedRefresh;	// IMP=0x00100000001705f6
- (id)p_cellsForGroupSection;	// IMP=0x001000000017013c
- (id)p_cellsForBreakApartSection;	// IMP=0x001000000016fff3
- (id)p_cellsForLockSection;	// IMP=0x001000000016fe93
- (id)p_cellsForFlipSection;	// IMP=0x001000000016fd3d
- (id)p_layoutsForRotation;	// IMP=0x001000000016fcc3
- (void)p_updateRotationSection;	// IMP=0x001000000016faa4
- (id)p_cellsForRotationSection;	// IMP=0x001000000016f9fe
- (void)p_updateConstrainSection;	// IMP=0x001000000016f792
- (id)p_cellsForConstrainSection;	// IMP=0x001000000016f66f
- (void)p_updateLineEndPointUISection;	// IMP=0x001000000016f405
- (void)p_updateSizeAndPositionSection;	// IMP=0x001000000016f18b
- (void)p_updateSizeAndPositionConstrainControl;	// IMP=0x001000000016efda
- (id)p_cellsForSizeAndPositionSection;	// IMP=0x001000000016ef27
- (id)p_cellsForLineEndPointUISection;	// IMP=0x001000000016ee81
- (void)p_updateZOrderSection;	// IMP=0x001000000016ec70
- (id)p_cellsForZOrderSection;	// IMP=0x001000000016ebb3
- (void)p_addCellsIfNecessaryForSection:(long long)arg1 to:(id)arg2;	// IMP=0x001000000016eb18
- (void)p_updateCellsForInspectorSection:(long long)arg1;	// IMP=0x001000000016e5c4
- (id)p_cellsForInspectorSection:(long long)arg1;	// IMP=0x001000000016e324
- (id)p_titleForInspectorSection:(long long)arg1;	// IMP=0x001000000016dff0
- (_Bool)p_wantsInspectorSection:(long long)arg1;	// IMP=0x001000000016dcb7
- (void)refresh;	// IMP=0x001000000016d742
- (_Bool)wantsRefreshForChangeRecord:(id)arg1;	// IMP=0x001000000016d37a
- (_Bool)p_isZOrderChangeRecord:(id)arg1;	// IMP=0x001000000016d30c
- (_Bool)isEligibleForRefresh;	// IMP=0x001000000016d250
- (_Bool)p_canRefreshOffScreen;	// IMP=0x001000000016d1ac
- (_Bool)wantsRefreshForSelectionChangeFromPreviousSelectionPath:(id)arg1;	// IMP=0x001000000016cf5d
- (_Bool)wantsToReplaceTopLevelInspectorPanesForChangeRecord:(id)arg1;	// IMP=0x001000000016ce04
- (void)setEditor:(id)arg1;	// IMP=0x001000000016cdc3
- (id)p_arranger;	// IMP=0x001000000016cd64
- (id)paneIdentifier;	// IMP=0x001000000016cd57
- (void)updateDisplayedObjectsWithEditor:(id)arg1;	// IMP=0x001000000016cc51
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x001000000016cafa
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x001000000016c9b5
- (void)p_stopObservingZOrderChangesIfNeeded;	// IMP=0x001000000016c956
- (void)p_startObservingZOrderChangesIfNeeded;	// IMP=0x001000000016c8f7
- (_Bool)inspectsLayouts;	// IMP=0x001000000016c8ef
@property(readonly, nonatomic) CRLBoardItemEditor *p_boardItemEditor;
- (void)dealloc;	// IMP=0x001000000016c7ef
- (id)initWithEditor:(id)arg1;	// IMP=0x001000000016c6e4
@property(readonly, nonatomic) _Bool crl_representsPhysicalKeyboard;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

