//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CRLCanvasAccessibility, CRLCanvasInteractiveCanvasControllerAccessibility, CRLCanvasLayoutAccessibility, CRLCanvasRep, CRLCanvasViewAccessibility, CRLRepContainerAccessibilityElement, CRLiOSCanvasViewControllerAccessibility, NSArray, NSObject, NSSet, NSString, UIFocusEffect, UIView;
@protocol CRLCanvasElementInfo, UIFocusEnvironment, UIFocusItemContainer;

@interface CRLCanvasRepAccessibility
{
    _Bool _crlaxAllowsCaptionEditing;	// 8 = 0x8
    NSString *_crlaxUploadStatusDescription;	// 16 = 0x10
}

+ (id)disambiguatedConnectionDescriptionFormat;	// IMP=0x0020000000586bb9
+ (id)bidirectionalConnectionsString;	// IMP=0x0010000000586b56
+ (id)outboundConnectionsString;	// IMP=0x0010000000586af3
+ (id)inboundConnectionsString;	// IMP=0x0010000000586a90
+ (id)CRLAXShowFormatOptionsString;	// IMP=0x0010000000586a2d
+ (id)CRLAXJumpTextToFormatOptionsString;	// IMP=0x00100000005869ca
+ (id)CRLAXJumpToFormatOptionsString;	// IMP=0x0010000000586967
+ (id)crlaxBoardItemIDForLayout:(id)arg1;	// IMP=0x0010000000585e33
+ (id)crlaxDisambiguatedConnectionDescriptionsForSet:(id)arg1;	// IMP=0x00100000005855fb
+ (void)crlaxSetCurrentRepDragOffset:(struct CGPoint)arg1;	// IMP=0x00100000001c81a6
+ (struct CGPoint)crlaxCurrentRepDragOffset;	// IMP=0x00100000001c8190
+ (Class)crlaxBaseSafeCategoryClass;	// IMP=0x0010000000580f32
+ (id)crlaxTargetClassName;	// IMP=0x0010000000580f25
+ (id)crlaxCastFrom:(id)arg1;	// IMP=0x0010000000580f4c
- (void).cxx_destruct;	// IMP=0x0010000000586c3d
@property(readonly, nonatomic) NSString *crlaxUploadStatusDescription; // @synthesize crlaxUploadStatusDescription=_crlaxUploadStatusDescription;
@property(readonly, nonatomic) _Bool crlaxAllowsCaptionEditing; // @synthesize crlaxAllowsCaptionEditing=_crlaxAllowsCaptionEditing;
- (id)crlaxUserInputLabels;	// IMP=0x001000000058695f
- (id)crlaxValue;	// IMP=0x0010000000586957
- (id)crlaxLabel;	// IMP=0x001000000058694f
- (struct CGRect)_crlaxFrameByKnobPositions;	// IMP=0x00100000005866e2
- (id)crlaxConnectionLineConnectingToLayout:(id)arg1;	// IMP=0x00100000005864ec
- (id)_crlaxRepForConnectionLineMapping;	// IMP=0x001000000058645c
- (_Bool)_crlaxKeyCorrespondsToPropertyRequiringAccessToCanvas:(id)arg1;	// IMP=0x001000000058638d
- (void)_crlaxInvalidateKnobAccessibilityElements:(id)arg1;	// IMP=0x0010000000586267
- (id)crlaxValueForKey:(id)arg1;	// IMP=0x00100000005861d8
- (void)becameNotSelected;	// IMP=0x0010000000586168
- (void)becameSelected;	// IMP=0x00100000005860bc
- (void)invalidateKnobs;	// IMP=0x0010000000586076
- (void)i_willBeRemoved;	// IMP=0x0010000000585f7c
- (_Bool)crlaxFullscreenPreviewFile;	// IMP=0x0010000000585ef0
- (id)crlaxDescriptionOfConnectionLineConnectingToLayout:(id)arg1;	// IMP=0x001000000058555a
@property(readonly, nonatomic) NSSet *crlaxBidirectionallyConnectedLayouts;
@property(readonly, nonatomic) NSSet *crlaxOutboundOnlyConnectedLayouts;
@property(readonly, nonatomic) NSSet *crlaxOutboundConnectedLayouts;
@property(readonly, nonatomic) NSSet *crlaxInboundOnlyConnectedLayouts;
@property(readonly, nonatomic) NSSet *crlaxInboundConnectedLayouts;
@property(readonly, nonatomic) NSSet *crlaxConnectedLayouts;
@property(readonly, nonatomic) NSSet *crlaxConnectedConnectionLines;
@property(readonly, nonatomic) NSString *crlaxDescriptionForConnections;
- (_Bool)crlaxOpenURL;	// IMP=0x00100000005848a8
- (_Bool)crlaxShouldCreateAccessibilityElementForKnob:(id)arg1;	// IMP=0x001000000058488c
- (void)crlaxPerformCleanupTasksPriorToRemovalFromCanvas;	// IMP=0x001000000058487a
- (void)crlaxClearKnobAccessibilityElementCache;	// IMP=0x001000000058481d
- (struct CGRect)crlaxConvertLayerRelativeRectToNaturalRect:(struct CGRect)arg1;	// IMP=0x00100000005847b4
- (struct CGRect)crlaxConvertNaturalRectToScreenSpace:(struct CGRect)arg1;	// IMP=0x0010000000584680
- (struct CGPoint)crlaxConvertNaturalPointToScreenSpace:(struct CGPoint)arg1;	// IMP=0x0010000000584628
- (struct CGRect)crlaxConvertNaturalRectToUnscaledCanvas:(struct CGRect)arg1;	// IMP=0x00100000005844ef
- (struct CGPoint)crlaxConvertNaturalPointToUnscaledCanvas:(struct CGPoint)arg1;	// IMP=0x00100000005843cf
- (struct CGRect)crlaxConvertNaturalRectFromUnscaledCanvas:(struct CGRect)arg1;	// IMP=0x0010000000584296
- (struct CGPoint)crlaxConvertNaturalPointFromUnscaledCanvas:(struct CGPoint)arg1;	// IMP=0x0010000000584176
- (id)crlaxNewKnobElementForKnob:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x00100000005840c9
@property(readonly, nonatomic) _Bool crlaxIsContainedTextRep;
@property(readonly, nonatomic) _Bool crlaxMayRotate;
- (void)_crlaxRotateClockwiseByDegrees:(double)arg1;	// IMP=0x0010000000583ca8
- (void)crlaxRotateCounterclockwise;	// IMP=0x0010000000583c8e
- (void)crlaxRotateClockwise;	// IMP=0x0010000000583c74
- (void)crlaxAddToSelection;	// IMP=0x0010000000583c28
- (void)crlaxDeselectRep;	// IMP=0x0010000000583bdc
- (void)crlaxDeselectAll;	// IMP=0x0010000000583b9f
@property(readonly, nonatomic) NSString *crlaxGroupedStatusString;
@property(readonly, nonatomic) _Bool crlaxIsInGroup;
@property(readonly, nonatomic) struct CGAffineTransform crlaxTransformToConvertNaturalFromLayerRelative;
@property(readonly, nonatomic) _Bool crlaxSupportsChangeTracking;
@property(readonly, nonatomic) NSString *crlaxCollaboratorDescriptionDirect;
@property(readonly, nonatomic) NSString *crlaxCollaboratorDescription;
@property(readonly, nonatomic) NSString *crlaxSummaryDescription;
@property(readonly, nonatomic) _Bool crlaxShouldExposeAsAttachmentToken;
- (id)crlaxKnobElementForTag:(unsigned long long)arg1 index:(unsigned long long)arg2 identifier:(id)arg3;	// IMP=0x00100000005835bb
- (id)crlaxKnobForTag:(unsigned long long)arg1 index:(unsigned long long)arg2 identifier:(id)arg3;	// IMP=0x0010000000583361
@property(readonly, nonatomic) NSString *crlaxKnobLabel;
@property(readonly, nonatomic) NSArray *crlaxKnobAccessibilityElements;
@property(readonly, nonatomic) _Bool crlaxInReadOnlyMode;
- (id)_crlaxDrawableInfoAccessibility;	// IMP=0x0010000000582a1a
- (id)_crlaxDrawableInfo;	// IMP=0x00100000005829b7
@property(readonly, nonatomic) NSString *crlaxItemTypeDescription;
@property(readonly, nonatomic) NSString *crlaxCaptionLabel;
@property(readonly, nonatomic) NSString *crlaxTitleLabel;
@property(readonly, nonatomic) NSString *crlaxCaption;
@property(readonly, nonatomic) NSString *crlaxTitle;
@property(readonly, nonatomic) _Bool crlaxIsCaption;
@property(readonly, nonatomic) _Bool crlaxIsTitle;
@property(readonly, nonatomic) _Bool crlaxContainsCaption;
@property(readonly, nonatomic) _Bool crlaxContainsTitle;
@property(readonly, nonatomic) NSString *crlaxLockedHint;
@property(readonly, nonatomic) NSString *crlaxLockedLabel;
@property(readonly, nonatomic) _Bool crlaxIsLocked;
- (id)accessibilityCustomContent;	// IMP=0x00100000005820a1
@property(readonly, nonatomic) NSString *crlaxRotationDescription;
@property(readonly, nonatomic) NSString *crlaxWidthDescription;
@property(readonly, nonatomic) NSString *crlaxHeightDescription;
@property(readonly, nonatomic) struct CGRect crlaxNaturalBounds;
@property(readonly, nonatomic) _Bool crlaxIsDraggable;
@property(readonly, nonatomic) _Bool crlaxShouldCreateKnobs;
@property(readonly, nonatomic) CRLCanvasRepAccessibility *crlaxRepForSelecting;
@property(readonly, nonatomic) _Bool crlaxIsSelectable;
@property(readonly, nonatomic) _Bool crlaxIsSelected;
@property(readonly, nonatomic) _Bool crlaxIsSelectedIgnoringLocking;
@property(readonly, nonatomic) CRLCanvasLayoutAccessibility *crlaxLayout;
@property(readonly, nonatomic) NSObject<CRLCanvasElementInfo> *crlaxInfo;
@property(readonly, nonatomic) CRLCanvasRepAccessibility *crlaxParentRep;
@property(readonly, nonatomic) CRLCanvasViewAccessibility *crlaxCanvasView;
@property(readonly, nonatomic) CRLCanvasInteractiveCanvasControllerAccessibility *crlaxInteractiveCanvasController;
@property(readonly, nonatomic) CRLCanvasAccessibility *crlaxCanvas;
@property(readonly, nonatomic) struct CGRect crlaxFrameInScreenSpace;
@property(readonly, nonatomic) struct CGPoint crlaxCenterInUnscaledCanvas;
@property(readonly, nonatomic) struct CGRect crlaxLayerFrameInScaledCanvas;
@property(readonly, nonatomic) struct CGRect crlaxFrameInUnscaledCanvas;
@property(readonly, nonatomic) CRLCanvasRep *crlaxRetainedTarget;
- (id)accessibilityUserInputLabels;	// IMP=0x0010000000581415
- (id)accessibilityValue;	// IMP=0x0010000000581389
- (id)accessibilityLabel;	// IMP=0x00100000005810ba
@property(nonatomic, setter=crlaxSetIsBeingRemoved:) _Bool crlaxIsBeingRemoved;
@property(nonatomic, setter=_crlaxSetKnobElementCacheIsInvalid:) _Bool _crlaxKnobElementCacheIsInvalid;
@property(nonatomic, setter=_crlaxSetShouldPreventAccessToCanvas:) _Bool _crlaxShouldPreventAccessToCanvas;
@property(retain, nonatomic, setter=_crlaxSetKnobAccessibilityElementsCache:) NSArray *_crlaxKnobAccessibilityElementsCache;
@property(nonatomic, setter=crlaxSetWasExplicitlyFocused:) _Bool crlaxWasExplicitlyFocused;
@property(readonly, nonatomic) struct CGRect frame;
@property(readonly, nonatomic) _Bool canBecomeFocused;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;	// IMP=0x00100000001ccec5
- (_Bool)shouldUpdateFocusInContext:(id)arg1;	// IMP=0x00100000001cce57
- (void)updateFocusIfNeeded;	// IMP=0x00100000001cce10
- (void)setNeedsFocusUpdate;	// IMP=0x00100000001ccdba
@property(readonly, nonatomic) id <UIFocusItemContainer> focusItemContainer;
@property(readonly, nonatomic) __weak id <UIFocusEnvironment> parentFocusEnvironment;
@property(readonly, copy, nonatomic) NSArray *preferredFocusEnvironments;
- (id)_makeNavigateToConnectedElementCustomActionsFor:(id)arg1 inCategory:(id)arg2;	// IMP=0x00100000001cc75e
- (_Bool)_crlaxReaderModePerformCopy;	// IMP=0x00100000001cc614
- (void)_crlaxGoToFormatInspector;	// IMP=0x00100000001cc48e
- (_Bool)_crlaxCanBeSelected;	// IMP=0x00100000001cc47a
- (_Bool)_crlaxCanBeSelectedWithSelectableRepReference:(id *)arg1;	// IMP=0x00100000001cc3ca
- (id)_crlaxPrimaryTextEditor;	// IMP=0x00100000001cc2a8
- (void)crlaxPerformExtraCleanupTasksPriorToRemovalFromCanvas;	// IMP=0x00100000001cc1b6
- (id)crlaxCompleteConnectionsCustomContent;	// IMP=0x00100000001cbfdd
- (void)dynamicallyResizingWithTracker:(id)arg1;	// IMP=0x00100000001cbc82
- (void)dynamicDragDidBegin;	// IMP=0x00100000001cbc29
- (void)dealloc;	// IMP=0x00100000001cbbeb
- (_Bool)crlaxSelect;	// IMP=0x00100000001cb95a
- (_Bool)crlaxShouldSortChildrenUsingStandardAlgorithm;	// IMP=0x00100000001cb952
- (void)crlaxDidInvalidateChildren;	// IMP=0x00100000001cb946
- (void)crlaxChildWillBeRemoved:(id)arg1;	// IMP=0x00100000001cb92f
- (void)crlaxLoadChildrenIntoCollection:(id)arg1;	// IMP=0x00100000001cb419
- (_Bool)crlaxIsReadyToLoadChildren;	// IMP=0x00100000001cb400
- (id)accessibilityDropPointDescriptors;	// IMP=0x00100000001cb1c5
- (id)accessibilityDragSourceDescriptors;	// IMP=0x00100000001cae48
- (id)accessibilityCustomActions;	// IMP=0x00100000001c9ebd
- (_Bool)_accessibilityIsSpeakThisElement;	// IMP=0x00100000001c9eb5
- (id)_accessibilityParentView;	// IMP=0x00100000001c9e58
- (_Bool)accessibilityActivate;	// IMP=0x00100000001c9dbb
- (_Bool)_accessibilitySupportsActivateAction;	// IMP=0x00100000001c9d75
- (struct CGPoint)accessibilityActivationPoint;	// IMP=0x00100000001c9c57
- (id)accessibilityHint;	// IMP=0x00100000001c9b09
@property(readonly, nonatomic) _Bool crlaxUsesParentAccessibilityPath;
@property(readonly, nonatomic) _Bool crlaxUsesAccessibilityPath;
- (id)accessibilityPath;	// IMP=0x00100000001c9462
- (struct CGRect)accessibilityFrame;	// IMP=0x00100000001c9443
- (id)accessibilityContainer;	// IMP=0x00100000001c93c9
- (id)accessibilityElements;	// IMP=0x00100000001c9385
- (unsigned long long)accessibilityTraits;	// IMP=0x00100000001c9328
- (_Bool)isAccessibilityElement;	// IMP=0x00100000001c9320
- (_Bool)accessibilityEditOperationAction:(id)arg1;	// IMP=0x00100000001c930e
- (_Bool)_accessibilityTextOperationAction:(id)arg1;	// IMP=0x00100000001c8fe1
- (id)_adjustActionNamesForSet:(id)arg1;	// IMP=0x00100000001c8dd1
- (id)_accessibilityTextOperations;	// IMP=0x00100000001c8844
- (id)hitRep:(struct CGPoint)arg1;	// IMP=0x00100000001c8772
- (id)crlaxReaderModeEditOperations;	// IMP=0x00100000001c86af
- (id)crlaxReaderModeEditOperationTitle;	// IMP=0x00100000001c864c
- (id)crlaxReaderModeCopyOperationTitle;	// IMP=0x00100000001c85e9
- (id)accessibilityCustomRotors;	// IMP=0x00100000001c8575
- (_Bool)crlaxSupportsPublicCustomRotors;	// IMP=0x00100000001c856d
- (id)crlaxLayoutDescription;	// IMP=0x00100000001c83de
@property(readonly, nonatomic) _Bool crlaxNeedsFormatEditOperation;
@property(readonly, nonatomic) _Bool crlaxIsInDrawingMode;
@property(readonly, nonatomic) id crlaxFocusedElement;
@property(readonly, nonatomic) CRLiOSCanvasViewControllerAccessibility *crlaxCanvasViewController;
@property(readonly, nonatomic) CRLRepContainerAccessibilityElement *crlaxAccessibilityElement;
@property(readonly, nonatomic) _Bool crlaxNeedsEditRotorMenu;
- (void)_crlaxSetLastBoundsAnnouncementTime:(double)arg1;	// IMP=0x00100000001c817f
- (double)_crlaxLastBoundsAnnouncementTime;	// IMP=0x00100000001c816e
- (void)_crlaxSetRepContainerElementCache:(id)arg1;	// IMP=0x00100000001c815d
- (id)_crlaxRepContainerElementCache;	// IMP=0x00100000001c814c
- (id)crlaxTarget;	// IMP=0x0010000000580f43

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) UIFocusEffect *focusEffect;
@property(readonly, copy, nonatomic) NSString *focusGroupIdentifier;
@property(readonly, nonatomic) long long focusGroupPriority;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isTransparentFocusItem;
@property(readonly, nonatomic) __weak UIView *preferredFocusedView;
@property(readonly) Class superclass;

@end

