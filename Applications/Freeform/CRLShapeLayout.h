//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CRLBezierPath, CRLCanvasInfoGeometry, CRLEditableBezierPathSource, CRLFill, CRLLineEnd, CRLMutableStroke, CRLPathSource, CRLStroke, MISSING_TYPE, NSArray, NSObject, _TtC8Freeform12CRLShapeItem;
@protocol CRLShapeLayoutHelperProtocol, CRLSmartPathSource;

@interface CRLShapeLayout
{
    struct {
        unsigned int path:1;
        unsigned int pathIsOpen:1;
        unsigned int pathIsLineSegment:1;
        unsigned int pathHasAtLeastTwoVisuallyDistinctSubregions:1;
        unsigned int headAndTail:1;
        unsigned int headLineEnd:1;
        unsigned int tailLineEnd:1;
        unsigned int clippedPath:1;
    } mShapeInvalidFlags;	// 8 = 0x8
    CRLBezierPath *mCachedPath;	// 16 = 0x10
    _Bool mCachedPathIsOpen;	// 24 = 0x18
    _Bool mCachedPathIsLineSegment;	// 25 = 0x19
    _Bool mCachedPathHasAtLeastTwoVisuallyDistinctSubregions;	// 26 = 0x1a
    CDStruct_5bfcb38a mCachedPathBoundsStruct;	// 32 = 0x20
    CDStruct_5bfcb38a mCachedPathBoundsWithoutStrokeStruct;	// 104 = 0x68
    CRLBezierPath *mCachedClippedPath;	// 176 = 0xb0
    CDStruct_5bfcb38a mCachedClippedPathStroked;	// 184 = 0xb8
    CDStruct_5bfcb38a mCachedClippedPathRotatedStroked;	// 256 = 0x100
    struct CGAffineTransform mClippedPathRotatedTransform;	// 328 = 0x148
    CDStruct_5bfcb38a mCachedAlignmentFrame;	// 376 = 0x178
    CDStruct_5bfcb38a mCachedAlignmentFrameInRoot;	// 448 = 0x1c0
    struct CGAffineTransform mCachedAlignmentFrameInRootTransformInRoot;	// 520 = 0x208
    struct CGPoint mHeadPoint;	// 568 = 0x238
    struct CGPoint mTailPoint;	// 584 = 0x248
    struct CGPoint mHeadLineEndPoint;	// 600 = 0x258
    struct CGPoint mTailLineEndPoint;	// 616 = 0x268
    double mHeadLineEndAngle;	// 632 = 0x278
    double mTailLineEndAngle;	// 640 = 0x280
    long long mHeadCutSegment;	// 648 = 0x288
    long long mTailCutSegment;	// 656 = 0x290
    double mHeadCutT;	// 664 = 0x298
    double mTailCutT;	// 672 = 0x2a0
    CRLPathSource *mShrunkenPathSource;	// 680 = 0x2a8
    CRLPathSource *mOriginalShrunkenPathSource;	// 688 = 0x2b0
    CRLEditableBezierPathSource *mCachedEditableBezierPathSource;	// 696 = 0x2b8
    CRLPathSource *mCachedPathSource;	// 704 = 0x2c0
    CRLPathSource *mDynamicPathSource;	// 712 = 0x2c8
    CRLCanvasInfoGeometry *mDynamicInfoGeometry;	// 720 = 0x2d0
    CRLBezierPath *mDynamicMaskPath;	// 728 = 0x2d8
    CRLPathSource *mInitialPathSource;	// 736 = 0x2e0
    CRLCanvasInfoGeometry *mInitialInfoGeometry;	// 744 = 0x2e8
    CRLBezierPath *mInitialMaskPath;	// 752 = 0x2f0
    CRLStroke *mInitialStroke;	// 760 = 0x2f8
    CRLMutableStroke *mDynamicStroke;	// 768 = 0x300
    CRLFill *mDynamicFill;	// 776 = 0x308
    NSArray *mDynamicStrokeOffsetArray;	// 784 = 0x310
    _Bool mIsDynamicallyInvisible;	// 792 = 0x318
    NSObject<CRLShapeLayoutHelperProtocol> *mHelper;	// 800 = 0x320
    struct CGSize mLastParentLimitedSize;	// 808 = 0x328
    _Bool mOkayToSetGeometry;	// 824 = 0x338
    NSArray *mDynamicPatternOffsetsBySubpath;	// 832 = 0x340
}

- (void).cxx_destruct;	// IMP=0x00200000004d2633
@property(readonly, nonatomic) NSArray *dynamicPatternOffsetsBySubpath; // @synthesize dynamicPatternOffsetsBySubpath=mDynamicPatternOffsetsBySubpath;
@property(retain, nonatomic) CRLFill *dynamicFill; // @synthesize dynamicFill=mDynamicFill;
- (id)commandForSettingCalloutTailPositionY:(double)arg1;	// IMP=0x00100000004d253a
- (id)commandForSettingCalloutTailPositionX:(double)arg1;	// IMP=0x00100000004d2459
- (double)adjustedCalloutTailPositionXWithValue:(double)arg1;	// IMP=0x00100000004d236d
- (id)commandForSettingCalloutTailSize:(double)arg1;	// IMP=0x00100000004d22b7
- (id)commandForSettingCalloutCornerRadius:(double)arg1;	// IMP=0x00100000004d2201
- (id)p_calloutPathSourceForCommand;	// IMP=0x00100000004d2173
- (id)commandForSettingArrowIndent:(double)arg1;	// IMP=0x00100000004d20c3
- (id)commandForSettingArrowHead:(double)arg1;	// IMP=0x00100000004d2013
- (id)commandForSettingStarRadius:(double)arg1;	// IMP=0x00100000004d1f63
- (id)commandForSettingStarPoints:(double)arg1;	// IMP=0x00100000004d1eb3
- (id)commandForSettingNumberOfSides:(double)arg1;	// IMP=0x00100000004d1ea1
- (id)commandForSettingCornerRadius:(double)arg1;	// IMP=0x00100000004d1e8f
- (id)p_commandForSettingPathSourcePointValue:(struct CGPoint)arg1 onPathSource:(id)arg2;	// IMP=0x00100000004d1dcf
- (id)p_commandToSetPathSourceScalarValue:(double)arg1;	// IMP=0x00100000004d1cc4
- (void)p_updateResizeInfoGeometryFromDynamicPathSource;	// IMP=0x00100000004d1be2
- (id)p_unitePath:(id)arg1 withLineEndForHead:(_Bool)arg2 stroke:(id)arg3;	// IMP=0x00100000004d1a5e
- (id)p_createClippedPath;	// IMP=0x00100000004d1877
- (void)p_validateTailLineEnd;	// IMP=0x00100000004d16af
- (void)p_validateHeadLineEnd;	// IMP=0x00100000004d14e4
- (void)p_validateHeadAndTail;	// IMP=0x00100000004d1467
- (void)p_invalidateClippedPath;	// IMP=0x00100000004d1423
- (void)p_invalidateTail;	// IMP=0x00100000004d1406
- (void)p_invalidateHead;	// IMP=0x00100000004d13e9
- (_Bool)p_cachedPathHasAtLeastTwoVisuallyDistinctSubregions;	// IMP=0x00100000004d1372
- (_Bool)p_cachedPathIsLineSegment;	// IMP=0x00100000004d12fb
- (_Bool)p_cachedPathIsOpen;	// IMP=0x00100000004d1284
- (struct CGRect)p_cachedPathBoundsWithoutStroke;	// IMP=0x00100000004d11d4
- (struct CGRect)p_updatedCachedClipRectIfNeededForRotation:(struct CGAffineTransform)arg1;	// IMP=0x00100000004d1015
- (struct CGRect)p_cachedClippedPathStroked;	// IMP=0x00100000004d0f29
- (struct CGRect)p_cachedPathBounds;	// IMP=0x00100000004d0ea7
- (id)p_cachedPath;	// IMP=0x00100000004d0e10
- (void)validate;	// IMP=0x00100000004d0d4a
- (id)commandToClampModelToLayoutSizeWithAdditionalTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000004d0b9c
- (void)transferLayoutGeometryToInfo:(id)arg1 withAdditionalTransform:(struct CGAffineTransform)arg2 assertIfInDocument:(_Bool)arg3;	// IMP=0x00100000004d0ae2
- (id)computeWrapPathClosed:(_Bool)arg1;	// IMP=0x00100000004d085d
- (id)computeWrapPath;	// IMP=0x00100000004d07ed
- (void)invalidateExteriorWrap;	// IMP=0x00100000004d070d
- (void)dynamicallyMakeShapeInvisible;	// IMP=0x00100000004d0663
- (void)dynamicallySetBezierPathSource:(id)arg1 atUnscaledOrigin:(struct CGPoint)arg2 withPatternOffsetsBySubpath:(id)arg3;	// IMP=0x00100000004d01f9
- (void)dynamicallySetBezierPathSource:(id)arg1 atUnscaledOrigin:(struct CGPoint)arg2;	// IMP=0x00100000004cffd6
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;	// IMP=0x00100000004cff30
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x00100000004cfe89
@property(readonly, nonatomic) unsigned long long numberOfControlKnobs;
@property(readonly, nonatomic) CRLLineEnd *strokeTailLineEnd;
@property(readonly, nonatomic) CRLLineEnd *strokeHeadLineEnd;
@property(readonly, nonatomic) struct CGPoint unclippedTailPoint;
@property(readonly, nonatomic) struct CGPoint unclippedHeadPoint;
- (_Bool)isBeingManipulated;	// IMP=0x00100000004cfb91
- (id)finalInfoGeometryForFreeTransform;	// IMP=0x00100000004cfb7c
- (void)takeFreeTransformFromTracker:(id)arg1;	// IMP=0x00100000004cf907
- (void)takeRotationFromTracker:(id)arg1;	// IMP=0x00100000004cf76e
- (_Bool)supportsRotation;	// IMP=0x00100000004cf766
- (void)dynamicMovePathKnobDidEnd;	// IMP=0x00100000004cf717
- (void)dynamicallyMovedPathKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;	// IMP=0x00100000004cf6dc
- (void)dynamicMovePathKnobDidBegin;	// IMP=0x00100000004cf5bc
- (void)dynamicallyMovedSmartShapeKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;	// IMP=0x00100000004cf4d3
- (void)dynamicMoveSmartShapeKnobDidBegin;	// IMP=0x00100000004cf4cd
- (void)setDynamicGeometry:(id)arg1;	// IMP=0x00100000004cf405
- (void)offsetGeometryBy:(struct CGPoint)arg1;	// IMP=0x00100000004cf1c6
- (void)dynamicallyMovingLineSegmentWithTracker:(id)arg1;	// IMP=0x00100000004cf102
- (id)finalInfoGeometryForResize;	// IMP=0x00100000004cf0ed
- (MISSING_TYPE *)p_endResizeOrFreeTransform;	// IMP=0x00100000004cef57
- (void)endFreeTransform;	// IMP=0x00100000004cef16
- (void)endResize;	// IMP=0x00100000004ceed5
- (_Bool)i_shouldTryToScaleCachedRectsDuringResize;	// IMP=0x00100000004ceec3
- (void)p_applyResizeTransform:(struct CGAffineTransform)arg1 transformInParentSpace:(struct CGAffineTransform)arg2 preservingAspectRatio:(_Bool)arg3 layoutSize:(struct CGSize)arg4 geometryForLayout:(id)arg5 hasHorizontalFlip:(_Bool)arg6 hasVerticalFlip:(_Bool)arg7;	// IMP=0x00100000004cda37
- (void)takeSizeFromTracker:(id)arg1;	// IMP=0x00100000004cd857
- (_Bool)p_canResizeViaTransform;	// IMP=0x00100000004cd704
- (struct CGSize)minimumSizeForResizingKnob:(id)arg1;	// IMP=0x00100000004cd6f2
- (struct CGSize)minimumSize;	// IMP=0x00100000004cd5e0
- (void)endDynamicOperation;	// IMP=0x00100000004ccdf1
- (id)captureDynamicInfoGeometryToBeginDynamicOperation;	// IMP=0x00100000004ccb4a
- (void)beginDynamicOperationWithRealTimeCommands:(_Bool)arg1;	// IMP=0x00100000004cbaad
- (void)p_beginResizeOrFreeTransform;	// IMP=0x00100000004cb926
- (void)beginFreeTransformWithTracker:(id)arg1;	// IMP=0x00100000004cb8e5
- (void)beginResize;	// IMP=0x00100000004cb8a4
- (_Bool)p_dynamicallyUpdatingStrokedFramesDuringResize;	// IMP=0x00100000004cb80d
- (_Bool)i_isInsideResizingFreehandDrawing;	// IMP=0x00100000004cb6d1
- (void)invalidatePathBounds;	// IMP=0x00100000004cb65b
- (void)invalidatePath;	// IMP=0x00100000004cb5ec
- (void)invalidateFrame;	// IMP=0x00100000004cb478
- (_Bool)supportsCalloutAttributes;	// IMP=0x00100000004cb406
@property(readonly, nonatomic) _Bool canResetTextAndObjectHandles;
@property(readonly, nonatomic) _Bool canBeDivided;
@property(readonly, nonatomic) _Bool canBeIntersected;
@property(readonly, nonatomic) CRLFill *fill;
- (void)aliasPathForScale:(double)arg1 originalStroke:(id)arg2 adjustedStroke:(id *)arg3 adjustedPath:(id *)arg4 startDelta:(struct CGPoint *)arg5 endDelta:(struct CGPoint *)arg6;	// IMP=0x00100000004ca43e
- (void)aliasPathForScale:(double)arg1 adjustedStroke:(id *)arg2 adjustedPath:(id *)arg3 startDelta:(struct CGPoint *)arg4 endDelta:(struct CGPoint *)arg5;	// IMP=0x00100000004ca3bf
- (struct CGRect)aliasedAlignmentFrameForScale:(double)arg1;	// IMP=0x00100000004ca381
- (struct CGPoint)centerForConnecting;	// IMP=0x00100000004ca2b3
- (_Bool)isInvisibleAutosizingShape;	// IMP=0x00100000004ca184
- (_Bool)isInvisible;	// IMP=0x00100000004ca174
- (struct CGRect)shapeFrameWithTransform:(struct CGAffineTransform)arg1 strokeDrawOptions:(unsigned long long)arg2;	// IMP=0x00100000004c9e9a
- (struct CGRect)shapeFrameWithTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000004c9e59
@property(readonly, nonatomic) CRLBezierPath *clippedPathForLineEnds;
- (double)lineEndScale:(_Bool)arg1;	// IMP=0x00100000004c9d65
@property(readonly, nonatomic) _Bool isTailEndOnLeft;
@property(readonly, nonatomic) double tailLineEndAngle;
@property(readonly, nonatomic) double headLineEndAngle;
@property(readonly, nonatomic) struct CGPoint tailLineEndPoint;
@property(readonly, nonatomic) struct CGPoint headLineEndPoint;
@property(readonly, nonatomic) struct CGPoint tailPoint;
@property(readonly, nonatomic) struct CGPoint headPoint;
@property(readonly, nonatomic) CRLCanvasInfoGeometry *layoutInfoGeometry;
@property(readonly, nonatomic) _Bool pathIsLineSegment;
@property(readonly, nonatomic) _Bool pathIsOpen;
@property(readonly, nonatomic) CRLPathSource<CRLSmartPathSource> *smartPathSource;
@property(readonly, nonatomic) struct CGRect pathBoundsWithoutStroke;
@property(readonly, nonatomic) struct CGRect pathBounds;
@property(readonly, nonatomic) CRLBezierPath *path;
- (id)editablePathSource;	// IMP=0x00100000004c9732
@property(readonly, nonatomic) NSArray *pencilKitStrokesInParentInfoSpace;
@property(readonly, nonatomic) NSArray *pencilKitStrokes;
@property(readonly, nonatomic) CRLBezierPath *maskPath;
@property(readonly, nonatomic) CRLPathSource *pathSource;
@property(readonly, nonatomic) _TtC8Freeform12CRLShapeItem *shapeInfo;
- (_Bool)currentlySupportsAddingFrames;	// IMP=0x00100000004c8ffc
- (_Bool)isStrokeBeingManipulated;	// IMP=0x00100000004c8fe7
- (void)dynamicStrokeWidthChangeDidEnd;	// IMP=0x00100000004c8fc6
- (void)dynamicStrokeWidthUpdateToValue:(double)arg1;	// IMP=0x00100000004c8ce0
- (void)dynamicStrokeWidthChangeDidBegin;	// IMP=0x00100000004c8a9b
- (id)stroke;	// IMP=0x00100000004c8a2f
@property(readonly, nonatomic) _Bool shouldAdjustForStrokeWidthForCollabCursor;
- (void)dragBy:(struct CGPoint)arg1;	// IMP=0x00100000004c86a8
- (id)dependentLayoutsForDrag;	// IMP=0x00100000004c860f
- (struct CGRect)frameForPartitioning;	// IMP=0x00100000004c85bd
- (struct CGRect)frameForCullingWithBaseFrame:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;	// IMP=0x00100000004c8524
- (struct CGRect)boundsForStandardKnobs;	// IMP=0x00100000004c8464
- (void)processChangedProperty:(unsigned long long)arg1;	// IMP=0x00100000004c82ed
- (struct CGRect)alignmentFrameInRoot;	// IMP=0x00100000004c8132
- (struct CGRect)baseFrameForFrameForCullingWithAdditionalTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000004c7fd4
- (struct CGRect)alignmentFrame;	// IMP=0x00100000004c7f23
- (void)setGeometry:(id)arg1;	// IMP=0x00100000004c7914
- (void)p_performBlockOkayToSetGeometry:(CDUnknownBlockType)arg1;	// IMP=0x00100000004c7703
- (struct CGAffineTransform)computeLayoutTransform;	// IMP=0x00100000004c762f
- (id)computeLayoutGeometry;	// IMP=0x00100000004c71dd
- (id)layoutGeometryFromInfo;	// IMP=0x00100000004c7169
- (void)dealloc;	// IMP=0x00100000004c6f67
- (id)initWithInfo:(id)arg1;	// IMP=0x00100000004c6e70

@end

