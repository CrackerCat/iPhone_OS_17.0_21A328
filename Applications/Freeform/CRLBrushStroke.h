//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@interface CRLBrushStroke
{
}

+ (id)p_metalShaderQueue;	// IMP=0x0020000000553223
+ (id)p_metalTextureQueue;	// IMP=0x00100000005531cc
+ (void)p_drawColor:(id)arg1 intoContext:(struct CGContext *)arg2 usingImageAsMask:(struct CGImage *)arg3 withRect:(struct CGRect)arg4;	// IMP=0x00100000005523be
+ (struct CGColor *)p_colorForDrawingIntoDirectContext:(id)arg1 fromOriginalColor:(id)arg2;	// IMP=0x0010000000552291
+ (_Bool)p_isDirectContextWideColorCapable:(id)arg1;	// IMP=0x00100000005521f6
+ (void)backgroundLoadAllBrushStrokes;	// IMP=0x00100000005476da
+ (_Bool)brushStrokeUsesMetal;	// IMP=0x0010000000546069
+ (_Bool)isMoreOptimalToDrawWithOtherStrokesIfPossible;	// IMP=0x0010000000545d05
+ (Class)mutableClass;	// IMP=0x0010000000545cf4
- (id)p_metalOpacityShaderForPixelFormat:(unsigned long long)arg1 andDevice:(id)arg2;	// IMP=0x0040000000554560
- (id)p_metalBrushShaderForPixelFormat:(unsigned long long)arg1 andDevice:(id)arg2;	// IMP=0x0010000000554168
- (id)p_metalTextureForCurrentStrokeAndDevice:(id)arg1;	// IMP=0x001000000055327a
- (long long)p_fastElementPercentage:(double *)arg1 forOverallPercentage:(double)arg2 onPath:(id)arg3 withCachedCurrentElementPercentage:(CDStruct_45a6b6f8 *)arg4;	// IMP=0x00100000005530a1
- (_Bool)p_isFreehandDrawingStrokeWithFixedTileWidth;	// IMP=0x0010000000552fda
- (_Bool)p_isDrawingRasterizedIntoPDFWithContext:(struct CGContext *)arg1;	// IMP=0x0010000000552d4b
- (_Bool)p_prefersRasterRenderingInContext:(struct CGContext *)arg1;	// IMP=0x0010000000552a47
- (_Bool)p_shouldDrawAsVectorInContext:(struct CGContext *)arg1;	// IMP=0x00100000005527c3
- (void)p_finishMetalRenderInContext:(struct CGContext *)arg1 orDirectly:(id)arg2 pathVertexData:(void *)arg3 parameterized:(_Bool)arg4 shouldReverseDrawOrder:(_Bool)arg5 withLayoutOptions:(id)arg6;	// IMP=0x001000000054e891
- (void)p_rasterRenderSection:(id)arg1 sectionIndex:(unsigned long long)arg2 ontoPath:(id)arg3 inElementRange:(struct _NSRange)arg4 into:(void *)arg5 viewScale:(double)arg6 strokeTileLayout:(CDStruct_d2b197d1)arg7 cachedCurrentElementPercentage:(CDStruct_45a6b6f8 *)arg8;	// IMP=0x001000000054b619
- (void)p_rasterBrushPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2 orDirectly:(id)arg3 parameterized:(_Bool)arg4 shouldReverseDrawOrder:(_Bool)arg5 withLayoutOptions:(id)arg6;	// IMP=0x001000000054b441
- (void)p_brushSection:(id)arg1 sectionIndex:(unsigned long long)arg2 ontoPath:(id)arg3 inElementRange:(struct _NSRange)arg4 intoPath:(id)arg5 orIntoVector:(void *)arg6 viewScale:(double)arg7 strokeTileLayout:(CDStruct_d2b197d1)arg8 cachedCurrentElementPercentage:(CDStruct_45a6b6f8 *)arg9;	// IMP=0x001000000054ab68
- (void)p_brushPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 inElementRange:(struct _NSRange)arg3 intoPath:(id)arg4 orIntoVector:(void *)arg5 sectionIndex:(unsigned long long *)arg6 viewScale:(double)arg7 withLayoutOptions:(id)arg8 currentSubpathIndex:(unsigned long long)arg9 cachedCurrentElementPercentage:(CDStruct_45a6b6f8 *)arg10;	// IMP=0x00100000005495f5
- (id)p_brushPath:(id)arg1 inContext:(struct CGContext *)arg2 orDirectly:(id)arg3 parameterized:(_Bool)arg4 drawRasterized:(_Bool)arg5 shouldReverseDrawOrder:(_Bool)arg6 withLayoutOptions:(id)arg7;	// IMP=0x00100000005476f3
- (id)strokedCopyOfPath:(id)arg1;	// IMP=0x0010000000547395
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4 parameterized:(_Bool)arg5 shouldReverseDrawOrder:(_Bool)arg6 withLayoutOptions:(id)arg7;	// IMP=0x001000000054721f
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4 parameterized:(_Bool)arg5 shouldReverseDrawOrder:(_Bool)arg6;	// IMP=0x0010000000547189
- (void)paintPath:(struct CGPath *)arg1 directlyUsingContext:(id)arg2 withLayoutOptions:(id)arg3;	// IMP=0x0010000000547164
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(_Bool)arg6;	// IMP=0x0010000000546f93
- (id)strokeLineEnd:(id)arg1;	// IMP=0x0010000000546958
- (_Bool)p_shouldSplitAtSharpAngles;	// IMP=0x001000000054641e
- (_Bool)needsToExtendJoinsForBoundsCalculation;	// IMP=0x001000000054640c
- (double)horizontalMarginForSwatch;	// IMP=0x0010000000546368
- (void)i_setCap:(unsigned long long)arg1;	// IMP=0x0010000000546334
- (unsigned long long)cap;	// IMP=0x00100000005460d0
- (_Bool)supportsPattern;	// IMP=0x00100000005460c8
- (_Bool)drawsInOneStep;	// IMP=0x0010000000546061
- (_Bool)prefersToApplyToShapeRenderableDuringManipulation;	// IMP=0x0010000000546059
- (_Bool)canApplyToShapeRenderable;	// IMP=0x0010000000546051
- (double)suggestedMinimumLineWidth;	// IMP=0x0010000000546043
- (double)lineEndInsetAdjustment;	// IMP=0x001000000054603a
- (id)description;	// IMP=0x0010000000545f70
- (id)initWithName:(id)arg1 color:(id)arg2 width:(double)arg3 cap:(unsigned long long)arg4 join:(unsigned long long)arg5 pattern:(id)arg6 miterLimit:(double)arg7;	// IMP=0x0010000000545e6f
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;	// IMP=0x0010000000545d18
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0010000000545d0d

@end

