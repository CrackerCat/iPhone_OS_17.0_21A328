//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRLCanvas, CRLCanvasKnob, CRLCanvasKnobTracker, CRLCanvasLayout, CRLCanvasLayoutGeometry, CRLCanvasRenderable, CRLCanvasShapeRenderable, CRLColor, CRLInteractiveCanvasController, CRLShadow, NSArray, NSMutableArray, NSSet, NSString, UIView, _TtC8Freeform20CRLCommandController;
@protocol CRLCanvasElementInfo, OS_dispatch_queue;

@interface CRLCanvasRep : NSObject
{
    CRLCanvas *mCanvas;	// 8 = 0x8
    CRLCanvasRep *mParentRep;	// 16 = 0x10
    NSMutableArray *mChildReps;	// 24 = 0x18
    CRLCanvasKnobTracker *mKnobTracker;	// 32 = 0x20
    _Bool mSelectionHighlightRenderableValid;	// 40 = 0x28
    CRLCanvasRenderable *mSelectionHighlightRenderable;	// 48 = 0x30
    _Bool mCollaboratorCursorRenderableValid;	// 56 = 0x38
    CRLCanvasRenderable *mCollaboratorCursorRenderable;	// 64 = 0x40
    _Bool mShowDragAndDropHighlight;	// 72 = 0x48
    CRLCanvasRenderable *mDragAndDropHighlightRenderable;	// 80 = 0x50
    CRLCanvasLayout *mLayout;	// 88 = 0x58
    CRLCanvasLayoutGeometry *mLastGeometryInRoot;	// 96 = 0x60
    struct CGRect mOriginalLayerFrameInScaledCanvas;	// 104 = 0x68
    NSObject<OS_dispatch_queue> *mKnobsAccessQueue;	// 136 = 0x88
    NSArray *mKnobs;	// 144 = 0x90
    _Bool mKnobPositionsInvalid;	// 152 = 0x98
    _Bool mShowKnobsWhenManipulated;	// 153 = 0x99
    _Bool mKnobsAreShowing;	// 154 = 0x9a
    _Bool mHasInvalidatedChildKnobPositionsForEndingDynamicOperation;	// 155 = 0x9b
    _Bool mShadowRenderableInvalid;	// 156 = 0x9c
    _Bool mHasBeenRemoved;	// 157 = 0x9d
    CRLCanvasRenderable *mProgressBarRenderable;	// 160 = 0xa0
    _Bool mProgressBarRenderableIsOverCheckerboard;	// 168 = 0xa8
    CRLCanvasShapeRenderable *mProgressBarWhiteBackingRenderable;	// 176 = 0xb0
    CRLCanvasRenderable *mShadowRenderable;	// 184 = 0xb8
}

- (void).cxx_destruct;	// IMP=0x00100000002e10c4
@property(readonly, nonatomic) _Bool shouldShowDragAndDropHighlight; // @synthesize shouldShowDragAndDropHighlight=mShowDragAndDropHighlight;
@property(readonly, nonatomic) CRLCanvasRenderable *shadowRenderable; // @synthesize shadowRenderable=mShadowRenderable;
@property(readonly, nonatomic, getter=isSelectionHighlightRenderableValid) _Bool selectionHighlightRenderableValid; // @synthesize selectionHighlightRenderableValid=mSelectionHighlightRenderableValid;
@property(readonly, nonatomic) _Bool knobsAreShowing; // @synthesize knobsAreShowing=mKnobsAreShowing;
@property(nonatomic) _Bool showKnobsDuringManipulation; // @synthesize showKnobsDuringManipulation=mShowKnobsWhenManipulated;
@property(nonatomic) __weak CRLCanvasKnobTracker *currentKnobTracker; // @synthesize currentKnobTracker=mKnobTracker;
@property(nonatomic) __weak CRLCanvasRep *parentRep; // @synthesize parentRep=mParentRep;
@property(readonly, nonatomic) __weak CRLCanvas *canvas; // @synthesize canvas=mCanvas;
@property(readonly, nonatomic, getter=isCollaboratorCursorRenderableValid) _Bool collaboratorCursorRenderableValid; // @synthesize collaboratorCursorRenderableValid=mCollaboratorCursorRenderableValid;
- (void)documentEditabilityDidChange;	// IMP=0x00100000002e101f
- (_Bool)handleSingleTapsWhileExtendingSelectionAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x00100000002e1017
- (void)i_applicationDidBecomeActive;	// IMP=0x00100000002e1011
- (_Bool)shouldBeginScribbleAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000002e0ffc
- (_Bool)shouldPreventMarqueeInitiationAtPoint:(struct CGPoint)arg1 withTouchType:(long long)arg2;	// IMP=0x00100000002e0f80
- (void)didFinishPencilKitStroke;	// IMP=0x00100000002e0f7a
- (void)didBeginPencilKitStroke;	// IMP=0x00100000002e0f74
- (void)prepareForPencilKitSnapshotting;	// IMP=0x00100000002e0f6e
- (void)suppressionOfFreehandContentDidChange;	// IMP=0x00100000002e0f68
- (void)documentModeDidChange;	// IMP=0x00100000002e0f62
- (void)willEnterForeground;	// IMP=0x00100000002e0f5c
- (id)unscaledPathToIncludeForSystemPreviewOutline;	// IMP=0x00100000002e0dc6
- (id)backgroundColorForContextMenuPreview;	// IMP=0x00100000002e0dad
- (_Bool)wantsBestGuessCanvasBackgroundColorForContextMenuPreview;	// IMP=0x00100000002e0da5
- (id)backgroundColorForDragPreview;	// IMP=0x00100000002e0d8c
- (_Bool)supportsAlternateLiftDelay:(double)arg1;	// IMP=0x00100000002e0d84
- (_Bool)allowDragOnPhoneAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000002e0d7c
- (id)dragItemsForBeginningDragOfChildRep:(id)arg1;	// IMP=0x00100000002e0d74
- (_Bool)shouldOverrideParentForBeginningDragAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000002e0d6c
- (id)p_newImagerToGenerateSystemPreviewOfBoardItems:(id)arg1;	// IMP=0x00100000002e0acd
- (id)dragItemsForBeginningDragWithItemProvider:(id)arg1 deepCopiedBoardItems:(id)arg2 withUnscaledTracedPaths:(id)arg3 previewBackgroundColor:(id)arg4 localObjectProvider:(CDUnknownBlockType)arg5;	// IMP=0x00100000002dfdc7
- (id)dragItemsForBeginningDragAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000002df3ee
- (struct CGPoint)p_centerForPreviewFrame:(struct CGRect)arg1;	// IMP=0x00100000002df37c
- (_Bool)wantsContextMenuWhenEditingDisabledAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000002df374
- (id)contextMenuPreviewForHighlightingMenuAtPoint:(struct CGPoint)arg1 withConfiguration:(id)arg2;	// IMP=0x00100000002df36c
- (id)contextMenuConfigurationAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000002df364
- (void)willBeginEyedropperMode;	// IMP=0x00100000002df35e
- (_Bool)containsUnknownContent;	// IMP=0x00100000002df316
@property(readonly, nonatomic) _Bool crlaxShouldSetAccessibilityFrameByKnobPositions;
@property(readonly, nonatomic) NSArray *hyperlinkRegions;
@property(readonly, nonatomic) _Bool wantsToDistortWithImagerContext;
@property(readonly, nonatomic) _Bool wantsContentPlatformViewEventHandling;
@property(readonly, nonatomic) UIView *contentPlatformView;
@property(readonly, nonatomic) _Bool directlyManagesContentPlatformView;
@property(readonly, nonatomic) long long tilingMode;
- (_Bool)shouldSelectInfoWhenTargetOfDrag:(id)arg1;	// IMP=0x00100000002df0a4
- (id)p_highlightRenderable;	// IMP=0x00100000002deff9
@property(readonly, nonatomic) CRLCanvasRenderable *dragAndDropHighlightRenderable;
- (struct CGPath *)newHighlightPathInScaledSpace;	// IMP=0x00100000002dee8d
- (void)hideDragAndDropUI;	// IMP=0x00100000002dee17
- (void)updateDragAndDropUIForPoint:(struct CGPoint)arg1 dragInfo:(id)arg2;	// IMP=0x00100000002dedb6
- (_Bool)handleDragOperation:(unsigned long long)arg1 withDragInfo:(id)arg2 atUnscaledPoint:(struct CGPoint)arg3;	// IMP=0x00100000002dedae
- (unsigned long long)dragOperationForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x00100000002deda6
- (id)repToHighlightForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x00100000002ded9d
@property(readonly, nonatomic) struct CGPoint centerForRotation;
@property(readonly, nonatomic) _Bool directlyManagesLayerContent;
@property(readonly, nonatomic) struct CGRect boundsForResizeGuideUI;
@property(readonly, nonatomic) _Bool wantsGuidesWhileResizing;
@property(readonly, nonatomic) NSObject<CRLCanvasElementInfo> *infoForTransforming;
@property(readonly, nonatomic) _Bool canFlipDuringResize;
- (unsigned long long)adjustedKnobForComputingResizeGeometry:(unsigned long long)arg1;	// IMP=0x00100000002decb1
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000002debb6
- (_Bool)handleContextMenuClickAtPoint:(struct CGPoint)arg1 withPlatformObject:(id)arg2 onKnob:(id)arg3;	// IMP=0x00100000002dea62
- (_Bool)wantsContextMenuAtPoint:(struct CGPoint)arg1 withPlatformObject:(id)arg2 onKnob:(id)arg3;	// IMP=0x00100000002dea5a
@property(readonly, nonatomic) struct CGRect targetRectForEditMenu;
@property(readonly, nonatomic) NSArray *itemsToAddToEditMenu;
@property(readonly, nonatomic) _Bool handlesEditMenu;
@property(readonly, nonatomic) _Bool isLocked;
@property(readonly, nonatomic) _Bool isPlaceholder;
- (long long)dragHUDAndGuidesTypeAtCanvasPoint:(struct CGPoint)arg1;	// IMP=0x00100000002de9d9
- (id)repForAlternatePressureDragAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000002de9d0
@property(readonly, nonatomic) _Bool supportsAlternatePressureDrag;
- (long long)dragTypeAtCanvasPoint:(struct CGPoint)arg1 forTouchType:(long long)arg2;	// IMP=0x00100000002de96a
@property(readonly, nonatomic) _Bool shouldSuppressFontSmoothing;
@property(readonly, nonatomic) _Bool shouldShowSizesInRulers;
@property(readonly, nonatomic) _Bool shouldShowDragHUD;
@property(readonly, nonatomic) _Bool isOpaque;
@property(readonly, nonatomic) double opacity;
@property(readonly, nonatomic) struct CGRect rectToClipChildRepRenderables;
@property(readonly, nonatomic) _Bool masksToBounds;
@property(readonly, nonatomic) NSArray *allPlatformViews;
@property(readonly, nonatomic) NSArray *allRenderables;
@property(readonly, nonatomic) NSSet *childrenToExcludeWhenDrawingDescendantsIntoLayer;
@property(readonly, nonatomic) _Bool wantsRenderableToBeDescendedFromParentRepRenderable;
@property(readonly, nonatomic) _Bool drawsDescendantsIntoLayer;
@property(readonly, nonatomic) NSArray *additionalRenderablesOverRenderableIncludingKnobs;
@property(readonly, nonatomic) NSArray *additionalRenderablesOverRenderable;
- (id)i_additionalRenderablesOverRenderableIncludingKnobs;	// IMP=0x00100000002de37c
@property(readonly, nonatomic) UIView *additionalPlatformViewOverRenderable;
@property(readonly, nonatomic) _Bool directlyManagesAdditionalPlatformViewOverRenderable;
@property(readonly, nonatomic) UIView *additionalPlatformViewUnderRenderable;
@property(readonly, nonatomic) _Bool directlyManagesAdditionalPlatformViewUnderRenderable;
@property(readonly, nonatomic) NSArray *additionalRenderablesToFadeDuringZoom;
@property(readonly, nonatomic) NSArray *additionalRenderablesUnderRenderable;
- (void)didUpdateChildLayers;	// IMP=0x00100000002de10e
- (void)addAdditionalChildLayersToArray:(id)arg1;	// IMP=0x00100000002de108
- (void)willUpdateChildLayers;	// IMP=0x00100000002de102
@property(readonly, nonatomic) _Bool wantsChildRepLayerUpdatingCallsEvenWithNoChildren;
- (void)didUpdateRenderable:(id)arg1;	// IMP=0x00100000002de0e8
- (void)willUpdateRenderable:(id)arg1;	// IMP=0x00100000002de0d6
- (_Bool)canEditWithEditor:(id)arg1;	// IMP=0x00100000002de0ce
- (void)willBeRemoved;	// IMP=0x00100000002de0c8
- (void)processChangedProperty:(unsigned long long)arg1;	// IMP=0x00100000002ddf47
- (void)drawInContext:(struct CGContext *)arg1;	// IMP=0x00100000002ddf41
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;	// IMP=0x00100000002ddec4
- (_Bool)shouldLayoutTilingLayer:(id)arg1;	// IMP=0x00100000002dde56
@property(readonly, nonatomic) _Bool wantsToHandleDoubleTapsWhenLocked;
@property(readonly, nonatomic) _Bool wantsToHandleTapsWhenLocked;
@property(readonly, nonatomic) _Bool wantsToHandleTapsOnBehalfOfRepForSelecting;
- (_Bool)handleMultipleTapAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000002dde36
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x00100000002dde2e
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x00100000002ddd19
- (_Bool)shouldIgnoreSingleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;	// IMP=0x00100000002ddd11
- (_Bool)shouldIgnoreEditMenuTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;	// IMP=0x00100000002ddd09
- (void)handleEditMenuTapAtPoint:(struct CGPoint)arg1 inputType:(long long)arg2;	// IMP=0x00100000002ddd03
- (_Bool)wantsToManuallyHandleEditMenuTapAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000002ddcfb
- (_Bool)wantsEditMenuForTapAtPoint:(struct CGPoint)arg1 onKnob:(id)arg2;	// IMP=0x00100000002ddcf3
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 onKnob:(id)arg2 inputType:(long long)arg3;	// IMP=0x00100000002ddceb
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 onKnob:(id)arg2 inputType:(long long)arg3;	// IMP=0x00100000002ddce3
- (void)dynamicFreeTransformDidEndWithTracker:(id)arg1;	// IMP=0x00100000002ddc73
- (_Bool)willHandleFreeTransformingLayoutForRep:(id)arg1;	// IMP=0x00100000002ddc6b
- (void)dynamicallyFreeTransformingWithTracker:(id)arg1;	// IMP=0x00100000002ddb40
@property(readonly, nonatomic) NSString *actionStringForFreeTransform;
- (_Bool)inFreeTransformRotateResizeMode;	// IMP=0x00100000002dda6c
@property(readonly, nonatomic) _Bool isBeingFreeTransformResized;
@property(readonly, nonatomic) _Bool isBeingFreeTransformRotated;
@property(readonly, nonatomic) _Bool isBeingFreeTransformDragged;
@property(readonly, nonatomic) _Bool isBeingFreeTransformed;
- (void)dynamicFreeTransformDidBeginWithTracker:(id)arg1;	// IMP=0x00100000002dd694
- (_Bool)willHandleResizingLayoutForRep:(id)arg1;	// IMP=0x00100000002dd68c
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;	// IMP=0x00100000002dd42f
- (void)dynamicResizeDidEndWithTracker:(id)arg1;	// IMP=0x00100000002dd3bf
- (void)dynamicallyResizingWithTracker:(id)arg1;	// IMP=0x00100000002dd2b5
@property(readonly, nonatomic) NSString *actionStringForResize;
@property(readonly, nonatomic) _Bool isBeingResized;
- (id)dynamicResizeDidBegin;	// IMP=0x00100000002dcfb7
- (void)dynamicRotateDidEndWithTracker:(id)arg1;	// IMP=0x00100000002dca71
- (void)p_dynamicRotateDidEnd;	// IMP=0x00100000002dca19
- (void)dynamicallyRotatingWithTracker:(id)arg1;	// IMP=0x00100000002dc9b0
@property(readonly, nonatomic) _Bool shouldRasterizeRenderableDuringRotation;
@property(readonly, nonatomic) struct CGPoint unscaledGuidePosition;
@property(readonly, nonatomic) double angleForRotation;
@property(readonly, nonatomic) NSString *actionStringForRotate;
@property(readonly, nonatomic) _Bool isBeingRotated;
- (void)p_dynamicRotateDidBegin;	// IMP=0x00100000002dc5e7
- (void)dynamicRotateDidBegin;	// IMP=0x00100000002dc593
@property(readonly, nonatomic) _Bool allowDragAcrossPageBoundaries;
@property(readonly, nonatomic) _Bool demandsExclusiveSelection;
- (void)endDragInsertFromPalette:(id)arg1;	// IMP=0x00100000002dc53d
- (void)beginDragInsertFromPalette:(id)arg1;	// IMP=0x00100000002dc537
@property(readonly, nonatomic) _Bool allowRotateDelegate;
@property(readonly, nonatomic) _Bool allowResizeDelegate;
@property(readonly, nonatomic) _Bool allowDragDelegate;
- (void)dynamicDragDidEnd;	// IMP=0x00100000002dc0ce
- (id)commandForAcceptingPasteWithImageInfo:(id)arg1 outSelectionBehavior:(out id *)arg2;	// IMP=0x00100000002dc0bf
- (_Bool)canPasteDataFromPhysicalKeyboard:(id)arg1;	// IMP=0x00100000002dc0b7
- (_Bool)shouldAllowReplacementFromDrop;	// IMP=0x00100000002dc0af
- (_Bool)shouldAllowReplacementFromPaste;	// IMP=0x00100000002dc0a7
- (_Bool)dragDidChangeGeometry;	// IMP=0x00100000002dc095
- (_Bool)p_dragDidChangeGeometry;	// IMP=0x00100000002dc06b
@property(readonly, nonatomic) struct CGRect i_originalLayerFrameInScaledCanvas;
@property(readonly, nonatomic) struct CGPoint i_dragOffset;
- (void)i_dynamicDragDidEnd;	// IMP=0x00100000002dbecc
- (id)additionalRectsForSnappingWithOffset:(struct CGPoint)arg1;	// IMP=0x00100000002dbebf
- (_Bool)resetGuidesAfterDragAfterReset;	// IMP=0x00100000002dbeb7
@property(readonly, nonatomic) _Bool exclusivelyProvidesGuidesWhileAligning;
@property(readonly, nonatomic) _Bool providesGuidesWhileAligning;
- (struct CGRect)snapRectForDynamicDragWithOffset:(struct CGPoint)arg1;	// IMP=0x00100000002dbe16
@property(readonly, nonatomic) _Bool isBeingDragged;
- (void)p_dynamicDragDidBegin;	// IMP=0x00100000002dbbc0
@property(readonly, nonatomic) NSString *actionStringForDrag;
- (void)dynamicDragDidBegin;	// IMP=0x00100000002dbb0c
- (struct CGImage *)newShadowImageWithSize:(struct CGSize)arg1 unflipped:(_Bool)arg2 withChildren:(_Bool)arg3;	// IMP=0x00100000002dba7b
- (struct CGImage *)newShadowImageWithSize:(struct CGSize)arg1 shadow:(id)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;	// IMP=0x00100000002dba5c
- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;	// IMP=0x00100000002dba54
- (void)p_positionShadowRenderable:(id)arg1 forShadow:(id)arg2 withNaturalBounds:(struct CGRect)arg3;	// IMP=0x00100000002db264
- (void)invalidateShadowRenderable;	// IMP=0x00100000002db257
- (void)p_didUpdateEffectRenderablesForRenderable:(id)arg1;	// IMP=0x00100000002da993
- (_Bool)isInvisible;	// IMP=0x00100000002da98b
- (void)p_willUpdateEffectRenderablesForRenderable:(id)arg1;	// IMP=0x00100000002da8bc
@property(readonly, nonatomic) _Bool shouldShowShadow;
- (void)drawInContextWithoutEffectsOrChildrenForAlphaOnly:(struct CGContext *)arg1;	// IMP=0x00100000002da806
- (void)drawInContextWithoutEffectsForAlphaOnly:(struct CGContext *)arg1;	// IMP=0x00100000002da7f4
@property(readonly, nonatomic) CRLShadow *shadow;
- (void)gesturesDidEnd;	// IMP=0x00100000002da761
- (void)didExitPreviewMode;	// IMP=0x00100000002da75b
- (void)didEndZooming;	// IMP=0x00100000002da755
- (void)willBeginZooming;	// IMP=0x00100000002da74f
@property(readonly, nonatomic) _Bool allowsSupportedDynamicOperationsToBeRealTime;
@property(readonly, nonatomic) _Bool isInDynamicOperation;
- (void)p_dynamicOperationDidEnd;	// IMP=0x00100000002da68b
- (void)p_invalidateChildKnobPositionsForEndingDynamicOperation;	// IMP=0x00100000002da553
- (void)dynamicOperationDidEnd;	// IMP=0x00100000002da467
- (void)p_dynamicOperationDidBeginWithRealTimeCommands:(id)arg1;	// IMP=0x00100000002da1d4
- (void)dynamicOperationDidBeginWithRealTimeCommands:(_Bool)arg1;	// IMP=0x00100000002da178
- (double)contentsScale;	// IMP=0x00100000002da128
- (_Bool)p_shouldShowSelectionHighlight;	// IMP=0x00100000002da09a
@property(readonly, nonatomic) NSArray *overlayRenderables;
- (id)p_addRenderablesForKnobsToArray:(id)arg1 withDelegate:(id)arg2 isOverlay:(_Bool)arg3;	// IMP=0x00100000002d90ca
- (struct CGPoint)convertKnobPositionFromUnscaledCanvas:(struct CGPoint)arg1;	// IMP=0x00100000002d9022
- (struct CGPoint)convertKnobPositionToUnscaledCanvas:(struct CGPoint)arg1;	// IMP=0x00100000002d8f7a
- (void)i_invalidateSelectionHighlightRenderable;	// IMP=0x00100000002d8f48
- (void)updateSelectionHighlightRenderable:(id)arg1;	// IMP=0x00100000002d8cf6
- (id)makeSelectionHighlightRenderable;	// IMP=0x00100000002d8c8b
@property(readonly, nonatomic) CRLCanvasRenderable *selectionHighlightRenderable;
- (void)invalidateSelectionHighlightRenderable;	// IMP=0x00100000002d8bab
@property(readonly, nonatomic) struct CGAffineTransform transformForHighlightLayer;
@property(readonly, nonatomic) struct CGRect boundsForHighlightLayer;
@property(readonly, nonatomic) CRLColor *selectionHighlightColor;
@property(readonly, nonatomic) CRLColor *defaultSelectionHighlightColor;
@property(readonly, nonatomic) double selectionHighlightWidth;
- (void)handleFadeInForZoom;	// IMP=0x00100000002d8990
- (void)handleFadeOutForZoom;	// IMP=0x00100000002d898a
- (_Bool)knobTrackingShouldFailForForceTouchOnKnob:(id)arg1 atNaturalPoint:(struct CGPoint)arg2;	// IMP=0x00100000002d8982
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;	// IMP=0x00100000002d8940
- (void)fadeKnobsOut;	// IMP=0x00100000002d8578
- (void)fadeKnobsIn;	// IMP=0x00100000002d8153
- (void)turnKnobsOn;	// IMP=0x00100000002d7ee6
@property(readonly, nonatomic) _Bool shouldShowKnobs;
@property(readonly, nonatomic) _Bool isEditingPath;
@property(readonly, nonatomic) _Bool shouldCreateLockedKnobs;
@property(readonly, nonatomic) _Bool shouldSuppressSelectionHighlightDuringMultiselection;
@property(readonly, nonatomic) _Bool shouldIgnoreICCSuppressSelectionKnobs;
@property(readonly, nonatomic) _Bool shouldCreateSelectionKnobs;
@property(readonly, nonatomic) _Bool shouldCreateConnectionLineKnobs;
@property(readonly, nonatomic) _Bool shouldCreateKnobs;
@property(readonly, nonatomic) _Bool shouldShowSelectionHighlight;
@property(readonly, nonatomic) struct CGAffineTransform knobPositionTransformForInspectorResize;
@property(readonly, nonatomic) CRLCanvasKnob *knobForInspectorResize;
@property(readonly, nonatomic) double additionalRotationForKnobOrientation;
- (id)knobForTag:(unsigned long long)arg1;	// IMP=0x00100000002d78c1
- (void)p_toggleHyperlinkUIVisibility;	// IMP=0x00100000002d7875
- (id)newTrackerForKnob:(id)arg1;	// IMP=0x00100000002d760f
- (void)invalidateKnobPositions;	// IMP=0x00100000002d758d
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;	// IMP=0x00100000002d6e7a
@property(readonly, nonatomic) double horizontalOffsetForHyperlinkKnob;
@property(readonly, nonatomic) _Bool forcesPlacementOnTop;
- (void)updatePositionsOfKnobs:(id)arg1;	// IMP=0x00100000002d6c8d
@property(readonly, nonatomic) struct CGRect trackingBoundsForStandardKnobs;
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;	// IMP=0x00100000002d6bb4
@property(readonly, nonatomic) NSSet *additionalRepsToResize;
- (void)addLockedKnobsToArray:(id)arg1;	// IMP=0x00100000002d6a08
- (void)addSelectionKnobsToArray:(id)arg1;	// IMP=0x00100000002d6815
- (id)newSelectionKnobForType:(unsigned long long)arg1 tag:(unsigned long long)arg2;	// IMP=0x00100000002d67b4
- (void)addKnobsToArray:(id)arg1;	// IMP=0x00100000002d66e9
@property(readonly, nonatomic) unsigned long long enabledKnobMask;
- (void)invalidateKnobs;	// IMP=0x00100000002d62fb
@property(readonly, nonatomic) NSArray *knobs;
@property(readonly, nonatomic) struct CGRect boundsForStandardKnobs;
@property(readonly, nonatomic) CRLCanvasRenderable *collaboratorCursorRenderable;
- (void)collaborationParticipantsDidChange;	// IMP=0x00100000002d4869
- (void)invalidateDragAndDropHighlightLayer;	// IMP=0x00100000002d484f
@property(readonly, nonatomic, getter=isDragAndDropHighlightLayerValid) _Bool dragAndDropHighlightLayerValid;
- (void)invalidateCollaboratorCursorRenderable;	// IMP=0x00100000002d47cf
@property(readonly, nonatomic) struct CGAffineTransform transformForCollaboratorCursorRenderable;
@property(readonly, nonatomic) struct CGRect boundsForCollaboratorCursorRenderable;
- (void)hideCollaboratorCursors;	// IMP=0x00100000002d460c
- (void)collaboratorCursorChangedToSelectionPath:(id)arg1;	// IMP=0x00100000002d44f8
@property(readonly, nonatomic) CRLColor *currentCollaboratorCursorColor;
- (id)p_currentCollaboratorPresence;	// IMP=0x00100000002d43f9
@property(readonly, nonatomic) _Bool shouldShowCollaboratorCursorHighlight;
@property(readonly, nonatomic) _Bool shouldAddCollaboratorLayerToOverlays;
- (void)cursorExitedAtPoint:(struct CGPoint)arg1 withPlatformObject:(id)arg2;	// IMP=0x00100000002d4377
- (void)cursorMovedAtPoint:(struct CGPoint)arg1 withPlatformObject:(id)arg2;	// IMP=0x00100000002d4371
- (void)cursorEnteredAtPoint:(struct CGPoint)arg1 withPlatformObject:(id)arg2;	// IMP=0x00100000002d436b
@property(readonly, nonatomic) NSSet *childRepsToInformForSelectabilityChanges;
- (void)becameNotSelectable;	// IMP=0x00100000002d41c9
- (void)becameSelectable;	// IMP=0x00100000002d408a
- (void)becameNotSelected;	// IMP=0x00100000002d4018
- (void)becameSelected;	// IMP=0x00100000002d3c63
- (_Bool)isSelected;	// IMP=0x00100000002d3c2c
- (_Bool)isSelectedIgnoringLocking;	// IMP=0x00100000002d3970
- (void)willLayoutAndRenderInBackground;	// IMP=0x00100000002d396a
- (void)i_configureFontSmoothingForContext:(struct CGContext *)arg1 layer:(id)arg2;	// IMP=0x00100000002d3964
- (void)recursivelyDrawChildrenInContext:(struct CGContext *)arg1 keepingChildrenPassingTest:(CDUnknownBlockType)arg2;	// IMP=0x00100000002d37c2
- (void)recursivelyDrawInContext:(struct CGContext *)arg1 keepingChildrenPassingTest:(CDUnknownBlockType)arg2;	// IMP=0x00100000002d35ba
@property(readonly, nonatomic) struct CGRect i_clipRectRecursive;
@property(readonly, nonatomic) struct CGRect clipRect;
@property(readonly, nonatomic) _Bool isDrawingInFlippedContext;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;	// IMP=0x00100000002d29ca
- (void)drawInLayerContext:(struct CGContext *)arg1;	// IMP=0x00100000002d29b8
- (void)setupForDrawingInLayer:(id)arg1 context:(struct CGContext *)arg2;	// IMP=0x00100000002d262c
- (id)colorBehindLayer:(id)arg1;	// IMP=0x00100000002d2624
@property(readonly, nonatomic) Class layerClass;
- (void)viewScrollingEnded;	// IMP=0x00100000002d260d
- (void)viewScrollDidChange;	// IMP=0x00100000002d2607
- (void)viewScaleDidChange;	// IMP=0x00100000002d25b6
- (void)wideGamutValueDidChange;	// IMP=0x00100000002d25a4
- (void)screenScaleDidChange;	// IMP=0x00100000002d2569
- (void)p_invalidateContentLayers;	// IMP=0x00100000002d251d
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x00100000002d2442
- (void)setNeedsDisplay;	// IMP=0x00100000002d23d4
- (void)processChanges:(id)arg1;	// IMP=0x00100000002d2082
- (void)layerHostContainerFocusDidChange;	// IMP=0x00100000002d207c
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 basedOnLayoutGeometry:(id)arg3;	// IMP=0x00100000002d1fd4
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2;	// IMP=0x00100000002d1ecb
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 basedOnTransform:(struct CGAffineTransform)arg3 andSize:(struct CGSize)arg4;	// IMP=0x00100000002d1b1a
- (void)antiAliasDefeatLayerFrame:(struct CGRect *)arg1 forTransform:(struct CGAffineTransform)arg2;	// IMP=0x00100000002d1947
- (void)antiAliasDefeatLayerTransform:(struct CGAffineTransform *)arg1 forFrame:(struct CGRect)arg2;	// IMP=0x00100000002d1577
- (void)updateRenderableGeometryFromLayout:(id)arg1;	// IMP=0x00100000002d14ac
@property(readonly, nonatomic) struct CGAffineTransform layerTransformInRootForZeroAnchor;
@property(readonly, nonatomic) struct CGAffineTransform parentLayerInverseTransformInRootForZeroAnchor;
- (struct CGAffineTransform)p_layerTransformForRotationFromPureTransformInRoot:(struct CGAffineTransform)arg1 toPureTransformInRoot:(struct CGAffineTransform)arg2;	// IMP=0x00100000002d0f9e
@property(readonly, nonatomic) struct CGAffineTransform i_layerTransform;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;	// IMP=0x00100000002d05a0
@property(readonly, nonatomic) _Bool skipsRerenderForTranslation;
- (_Bool)p_isBeingDraggedRecursive;	// IMP=0x00100000002d0406
- (void)updateFromLayout;	// IMP=0x00100000002d0225
- (void)didAddChildRep:(id)arg1;	// IMP=0x00100000002d014e
- (void)removeChildRep:(id)arg1;	// IMP=0x00100000002d00e1
- (void)p_setChildReps:(id)arg1;	// IMP=0x00100000002cfcc1
- (void)updateChildrenFromLayout;	// IMP=0x00100000002cf677
@property(readonly, nonatomic) NSArray *layoutsForChildReps;
@property(readonly, nonatomic) CRLCanvasRep *repForPreviewing;
@property(readonly, nonatomic) _Bool isPreviewable;
@property(readonly, nonatomic) _Bool manuallyControlsMiniFormatter;
@property(readonly, nonatomic) CRLCanvasRep *repForHandleSingleTap;
- (void)p_showAlertForGroupWithUnknownContent;	// IMP=0x00100000002cf26b
- (_Bool)p_isNotSelectableDueToUnknownContent;	// IMP=0x00100000002cf1b7
@property(readonly, nonatomic) CRLCanvasRep *repForFreeTransforming;
@property(readonly, nonatomic) CRLCanvasRep *repForRotating;
@property(readonly, nonatomic) _Bool everAllowedToBeSelectedAsADrawable;
- (id)p_repForSelectingIgnoringTopLevelEditing:(_Bool)arg1 ignoringInlineEditing:(_Bool)arg2;	// IMP=0x00100000002cea28
@property(readonly, nonatomic) CRLCanvasRep *i_repForSelectingIgnoringTopLevelEditing;
@property(readonly, nonatomic) CRLCanvasRep *repForSelecting;
- (id)additionalRepsForDraggingConnectionLine:(id)arg1;	// IMP=0x00100000002ce4ca
@property(readonly, nonatomic) NSSet *additionalRepsForDragging;
- (id)p_repForDraggingIgnoringTopLevelEditing:(_Bool)arg1;	// IMP=0x00100000002ce189
@property(readonly, nonatomic) CRLCanvasRep *i_repForDraggingIgnoringTopLevelEditing;
@property(readonly, nonatomic) CRLCanvasRep *repForDragging;
- (id)cursorAtPoint:(struct CGPoint)arg1 forKnob:(id)arg2 withCursorPlatformObject:(id)arg3;	// IMP=0x00100000002cdfdb
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;	// IMP=0x00100000002cde9d
- (double)shortestDistanceToPoint:(struct CGPoint)arg1 countAsHit:(_Bool *)arg2;	// IMP=0x00100000002cde8f
@property(readonly, nonatomic) _Bool shouldHitTestChildrenLikeTopLevelReps;
@property(readonly, nonatomic) _Bool shouldExpandHitRegionWhenSmall;
@property(readonly, nonatomic) NSArray *childRepsForHitTesting;
- (_Bool)i_shouldCountAsClosestSmallRepForSizeLimit:(double)arg1;	// IMP=0x00100000002cdd9c
@property(readonly, nonatomic) _Bool i_shouldSmallHitRepTestingRecurse;
- (struct CGPoint)p_transformNaturalPoint:(struct CGPoint)arg1 inUnscaledSpaceWithTransformFromBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000002cdcb2
- (id)i_smallHitRepNearPoint:(struct CGPoint)arg1 smallRepOutset:(double)arg2 forShortestDistance:(double *)arg3 unscaledPointTransformForRep:(CDUnknownBlockType)arg4 passingTest:(CDUnknownBlockType)arg5;	// IMP=0x00100000002cd63e
- (_Bool)hitRepChrome:(struct CGPoint)arg1;	// IMP=0x00100000002cd636
- (id)hitRepChrome:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;	// IMP=0x00100000002cd284
- (id)hitReps:(struct CGPoint)arg1 withSlopBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000002cce80
- (id)hitReps:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;	// IMP=0x00100000002cce0f
- (id)hitRep:(struct CGPoint)arg1 withPrecision:(_Bool)arg2;	// IMP=0x00100000002ccdfb
- (id)hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;	// IMP=0x00100000002ccde4
- (id)hitRep:(struct CGPoint)arg1 withPrecision:(_Bool)arg2 passingTest:(CDUnknownBlockType)arg3;	// IMP=0x00100000002cc963
- (_Bool)containsPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;	// IMP=0x00100000002cc8e2
- (_Bool)containsPoint:(struct CGPoint)arg1 withPrecision:(_Bool)arg2;	// IMP=0x00100000002cc893
- (struct CGRect)convertNaturalRectFromLayerRelative:(struct CGRect)arg1;	// IMP=0x00100000002cc82a
- (struct CGRect)convertNaturalRectToLayerRelative:(struct CGRect)arg1;	// IMP=0x00100000002cc7c1
- (struct CGPoint)convertNaturalPointFromLayerRelative:(struct CGPoint)arg1;	// IMP=0x00100000002cc76f
- (struct CGPoint)convertNaturalPointToLayerRelative:(struct CGPoint)arg1;	// IMP=0x00100000002cc71d
@property(readonly, nonatomic) struct CGAffineTransform transformToConvertNaturalFromLayerRelative;
@property(readonly, nonatomic) struct CGAffineTransform transformToConvertNaturalToLayerRelative;
@property(readonly, nonatomic) struct CGPoint layerOffsetForDragging;
@property(readonly, nonatomic) struct CGRect layerFrameInScaledCanvasRelativeToParent;
@property(readonly, nonatomic) struct CGRect i_layerFrameInScaledCanvasIgnoringDragging;
@property(readonly, nonatomic) struct CGRect layerFrameInScaledCanvas;
@property(readonly, nonatomic) struct CGRect frameInScreenSpace;
@property(readonly, nonatomic) struct CGRect i_baseFrameInUnscaledCanvasForPositioningLayer;
@property(readonly, nonatomic) struct CGRect frameInUnscaledCanvasIncludingChrome;
@property(readonly, nonatomic) struct CGRect frameInUnscaledCanvasForMarqueeSelecting;
@property(readonly, nonatomic) struct CGRect frameInUnscaledCanvas;
- (struct CGPoint)convertNaturalPointFromUnscaledCanvas:(struct CGPoint)arg1;	// IMP=0x00100000002cb956
- (struct CGPoint)convertNaturalPointToUnscaledCanvas:(struct CGPoint)arg1;	// IMP=0x00100000002cb8e8
- (struct CGPath *)newPathInScaledCanvasFromNaturalRect:(struct CGRect)arg1;	// IMP=0x00100000002cb58e
- (struct CGRect)convertNaturalRectFromUnscaledCanvas:(struct CGRect)arg1;	// IMP=0x00100000002cb516
- (struct CGRect)convertNaturalRectToUnscaledCanvas:(struct CGRect)arg1;	// IMP=0x00100000002cb49e
@property(readonly, nonatomic) struct CGRect naturalBounds;
- (void)addToSet:(id)arg1;	// IMP=0x00100000002cb407
@property(readonly, nonatomic) CRLCanvasRep *ancestorRepForDrawingIntoLayer;
@property(readonly, nonatomic) _Bool canOcclude;
@property(readonly, nonatomic) _Bool canBeOccluded;
@property(readonly, nonatomic) _Bool occludesSelectedRep;
- (void)selectChildRep:(id)arg1 extendingSelection:(_Bool)arg2;	// IMP=0x00100000002caefa
- (_Bool)canSelectChildRep:(id)arg1;	// IMP=0x00100000002caef2
@property(readonly, nonatomic) CRLCanvasRep *parentRepToPerformSelecting;
@property(readonly, nonatomic) _Bool hasBeenRemoved;
- (void)i_willBeRemoved;	// IMP=0x00100000002caccf
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;	// IMP=0x00100000002cab2c
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;	// IMP=0x00100000002ca9ac
- (void)recursivelyPerformSelector:(SEL)arg1;	// IMP=0x00100000002ca85a
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;	// IMP=0x00100000002ca69f
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;	// IMP=0x00100000002ca50b
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;	// IMP=0x00100000002ca3a4
@property(readonly, nonatomic) NSArray *childReps;
- (void)p_setNeedsDisplayForParentChangeIfNeeded;	// IMP=0x00100000002ca24b
- (id)p_connectedReps;	// IMP=0x00100000002ca008
@property(readonly, nonatomic) _TtC8Freeform20CRLCommandController *commandController;
@property(readonly, nonatomic) NSObject<CRLCanvasElementInfo> *info;
@property(readonly, nonatomic) CRLCanvasLayout *layout; // @synthesize layout=mLayout;
@property(readonly, nonatomic) CRLInteractiveCanvasController *interactiveCanvasController;
- (id)description;	// IMP=0x00100000002c9b9e
- (void)dealloc;	// IMP=0x00100000002c9b62
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;	// IMP=0x00100000002c9894
- (id)getConnectionLineLayoutToCopyStyleForNewConnectionLine;	// IMP=0x001000000081aba0

@end

