//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRLCanvasRep, CRLImageRepSizingState, TSDSizedImageDescription, _TtC8Freeform8CRLAsset;
@protocol CRLImageRepDrawingDataSource, OS_dispatch_queue;

@interface CRLImageRepDrawingHelper : NSObject
{
    NSObject<OS_dispatch_queue> *_sizedImageAccessQueue;	// 8 = 0x8
    CRLImageRepSizingState *_sizingState;	// 16 = 0x10
    _Bool _sizingStateReady;	// 24 = 0x18
    struct CGImage *_sizedImage;	// 32 = 0x20
    TSDSizedImageDescription *_sizedImageDescription;	// 40 = 0x28
    long long _sizedImageOrientation;	// 48 = 0x30
    struct CGPath *_sizedImageMaskPath;	// 56 = 0x38
    CRLCanvasRep<CRLImageRepDrawingDataSource> *_rep;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x002000000054229f
@property(readonly, nonatomic) __weak CRLCanvasRep<CRLImageRepDrawingDataSource> *rep; // @synthesize rep=_rep;
- (void)retryGeneratingSizedImageIfNeeded;	// IMP=0x0010000000542184
@property(readonly, nonatomic) _Bool isGeneratingSizedImageWithBakedMask;
- (void)p_invalidateSizedImageOnAccessQueue;	// IMP=0x0010000000542029
- (void)invalidateSizedImageIfNeededForBakedMaskPathFromBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000541a40
- (void)invalidateSizedImageIfItHasBakedMask;	// IMP=0x0010000000541992
- (void)invalidateSizedImage;	// IMP=0x0010000000541931
@property(readonly, nonatomic) struct CGImage *sizedImage;
- (void)p_retryGeneratingSizedImageIfPossible;	// IMP=0x0010000000541755
- (void)p_takeSizedImageFromStateIfReady;	// IMP=0x00100000005412b2
- (_Bool)p_generateSizedImage:(id)arg1;	// IMP=0x001000000054118b
- (void)p_startGeneratingSizedImage;	// IMP=0x0010000000540daf
- (void)p_prepareToGenerateSizedImageWithDescription:(id)arg1;	// IMP=0x00100000005408a8
- (struct CGSize)p_desiredSizedImageSize;	// IMP=0x00100000005404e3
- (id)p_desiredSizedImageDescription;	// IMP=0x0010000000540244
- (void)generateSizedImageIfNeeded;	// IMP=0x001000000053ff47
- (_Bool)isDesiredImageSizePerceptuallyMuchBiggerThanGeneratedImageSize;	// IMP=0x001000000053fe0a
- (id)p_validatedThumbnailImageProvider;	// IMP=0x001000000053fb71
- (id)p_validatedBitmapImageProvider;	// IMP=0x001000000053fb12
- (id)p_validatedImageProvider;	// IMP=0x001000000053fa86
- (id)p_imageProvider;	// IMP=0x001000000053f9fd
- (struct CGSize)p_imagePixelSize;	// IMP=0x001000000053f72f
@property(readonly, nonatomic) _Bool shouldShowLoadingUI;
@property(readonly, nonatomic) _Bool imagePrefersDrawing;
@property(readonly, nonatomic) _Bool drawsBitmap;
@property(readonly, nonatomic) _Bool drawsError;
@property(readonly, nonatomic) _TtC8Freeform8CRLAsset *imageDataForDrawing;
- (id)p_contentsRecipeForDirectlyManagedRenderable:(id)arg1 requiringProperlySizedImage:(_Bool)arg2;	// IMP=0x001000000053ea61
- (_Bool)canRenderDirectlyManagedForRenderable:(id)arg1;	// IMP=0x001000000053ea2c
- (id)contentsRecipeForDirectlyManagedRenderable:(id)arg1;	// IMP=0x001000000053ea15
- (_Bool)p_canDrawThumbnailAsSizedImage;	// IMP=0x001000000053e760
- (struct CGRect)p_antialiasingDefeatedRectForRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x001000000053e393
- (void)drawInContext:(struct CGContext *)arg1 forLayer:(_Bool)arg2 forShadowOrHitTest:(_Bool)arg3;	// IMP=0x001000000053da5f
- (struct CGRect)imageRectInContext:(struct CGContext *)arg1;	// IMP=0x001000000053d714
- (void)teardown;	// IMP=0x001000000053d6aa
- (void)dealloc;	// IMP=0x001000000053d667
- (id)initWithRep:(id)arg1;	// IMP=0x001000000053d5e7

@end

