//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRLCanvas, CRLColor, NSArray, NSSet, NSString, _TtC8Freeform8CRLBoard;
@protocol CRLCanvasElementInfo;

@interface CRLCanvasImager : NSObject
{
    NSArray *mInfos;	// 8 = 0x8
    CRLColor *mBackgroundColor;	// 16 = 0x10
    struct CGRect mUnscaledClipRect;	// 24 = 0x18
    double mViewScale;	// 56 = 0x38
    double mContentsScale;	// 64 = 0x40
    struct CGSize mScaledImageSize;	// 72 = 0x48
    struct CGSize mMaximumImagePixelSize;	// 88 = 0x58
    _Bool mUseScaledImageSize;	// 104 = 0x68
    _Bool mDistortedToMatch;	// 105 = 0x69
    _Bool mImageMustHaveEvenDimensions;	// 106 = 0x6a
    _Bool mShouldReuseBitmapContext;	// 107 = 0x6b
    _TtC8Freeform8CRLBoard *mBoard;	// 112 = 0x70
    CRLCanvas *mCanvas;	// 120 = 0x78
    _Bool mMayBeReused;	// 128 = 0x80
    _Bool mHasBeenUsed;	// 129 = 0x81
    struct CGRect mActualScaledClipRect;	// 136 = 0x88
    _Bool mDrawingIntoPDF;	// 168 = 0xa8
    _Bool mIsPrinting;	// 169 = 0xa9
    struct CGContext *mReusableBitmapContext;	// 176 = 0xb0
    struct CGRect mReusableBounds;	// 184 = 0xb8
    struct CGRect mReusableIntegralBounds;	// 216 = 0xd8
    struct CGRect mReusableActualScaledClipRect;	// 248 = 0xf8
    struct CGSize mReusableScaledImageSize;	// 280 = 0x118
    NSSet *mPreviousRenderDatasNeedingDownload;	// 296 = 0x128
    CDUnknownBlockType mPostRenderAction;	// 304 = 0x130
    NSObject<CRLCanvasElementInfo> *mInfoToDrawBeneath;	// 312 = 0x138
    CDUnknownBlockType mInfoToDrawBeneathFilter;	// 320 = 0x140
    _Bool mShouldShowInstructionalText;	// 328 = 0x148
    _Bool mShouldSuppressBackgrounds;	// 329 = 0x149
}

- (void).cxx_destruct;	// IMP=0x002000000008f568
@property(nonatomic) _Bool shouldSuppressBackgrounds; // @synthesize shouldSuppressBackgrounds=mShouldSuppressBackgrounds;
@property(nonatomic) _Bool mayBeReused; // @synthesize mayBeReused=mMayBeReused;
@property(copy, nonatomic) NSSet *previousRenderDatasNeedingDownload; // @synthesize previousRenderDatasNeedingDownload=mPreviousRenderDatasNeedingDownload;
@property(nonatomic) _Bool isPrinting; // @synthesize isPrinting=mIsPrinting;
@property(nonatomic) _Bool shouldShowInstructionalText; // @synthesize shouldShowInstructionalText=mShouldShowInstructionalText;
@property(nonatomic) _Bool shouldReuseBitmapContext; // @synthesize shouldReuseBitmapContext=mShouldReuseBitmapContext;
@property(nonatomic) _Bool imageMustHaveEvenDimensions; // @synthesize imageMustHaveEvenDimensions=mImageMustHaveEvenDimensions;
@property(nonatomic) _Bool distortedToMatch; // @synthesize distortedToMatch=mDistortedToMatch;
@property(nonatomic) struct CGRect unscaledClipRect; // @synthesize unscaledClipRect=mUnscaledClipRect;
@property(copy, nonatomic) CRLColor *backgroundColor; // @synthesize backgroundColor=mBackgroundColor;
@property(retain, nonatomic) NSArray *infos; // @synthesize infos=mInfos;
@property(readonly, nonatomic) CRLCanvas *canvas; // @synthesize canvas=mCanvas;
- (struct CGImage *)p_newImageInReusableContext;	// IMP=0x001000000008f03f
- (void)p_drawPageInContext:(struct CGContext *)arg1 createPage:(_Bool)arg2 includeMargin:(_Bool)arg3;	// IMP=0x001000000008ee41
- (struct CGSize)p_evenDimensionsWithSize:(struct CGSize)arg1;	// IMP=0x001000000008eaa8
- (_Bool)p_configureCanvas;	// IMP=0x001000000008e02a
@property(readonly, nonatomic) struct CGRect actualScaledClipRect; // @synthesize actualScaledClipRect=mActualScaledClipRect;
- (void)p_assertHasReadLock;	// IMP=0x001000000008dfe8
- (_Bool)shouldShowInstructionalTextForLayout:(id)arg1;	// IMP=0x001000000008dfd6
- (_Bool)isPrintingCanvas;	// IMP=0x001000000008dfca
- (_Bool)isCanvasDrawingIntoPDF:(id)arg1;	// IMP=0x001000000008ddf6
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1;	// IMP=0x001000000008dbd0
- (id)boardItemOwnerForCanvas:(id)arg1;	// IMP=0x001000000008d9ef
- (_Bool)drawPageInContext:(struct CGContext *)arg1 createPage:(_Bool)arg2 includeMargin:(_Bool)arg3;	// IMP=0x001000000008d983
- (id)pdfData;	// IMP=0x001000000008d878
- (id)pngData;	// IMP=0x001000000008d831
- (id)generateImage;	// IMP=0x001000000008d7da
- (struct CGImage *)newImage;	// IMP=0x001000000008d4aa
- (void)i_setDrawsOnlyBelowInfo:(id)arg1;	// IMP=0x001000000008d496
@property(nonatomic) struct CGSize maximumImagePixelSize;
@property(nonatomic) struct CGSize scaledImageSize;
@property(nonatomic) double contentsScale;
@property(nonatomic) double viewScale;
- (void)setInfos:(id)arg1 allowLayoutIfNeeded:(_Bool)arg2;	// IMP=0x001000000008c2b4
- (void)setPostRenderAction:(CDUnknownBlockType)arg1;	// IMP=0x001000000008c26a
@property(readonly, nonatomic) NSString *boardTitle;
- (void)dealloc;	// IMP=0x001000000008c1cd
- (id)initWithBoard:(id)arg1 renderForWideGamut:(_Bool)arg2;	// IMP=0x001000000008bf2c
- (id)initWithBoard:(id)arg1;	// IMP=0x001000000008bf15

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

