//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CRLBezierNode, CRLBezierPath, NSArray, NSMutableArray;

@interface CRLBezierSubpath : NSObject
{
    NSMutableArray *mNodes;	// 8 = 0x8
    _Bool mClosed;	// 16 = 0x10
}

- (void).cxx_destruct;	// IMP=0x00200000001d0ddc
@property(nonatomic, getter=isClosed) _Bool closed; // @synthesize closed=mClosed;
@property(copy, nonatomic) NSArray *nodes; // @synthesize nodes=mNodes;
- (void)convertToHobby;	// IMP=0x00100000001d0b1f
- (id)splitEdgeAtIndex:(unsigned long long)arg1 atPercentage:(double)arg2;	// IMP=0x00100000001d0706
- (void)addNodesToArray:(id)arg1;	// IMP=0x00100000001d069d
@property(readonly, nonatomic) _Bool closeIfEndpointsAreEqual;
- (void)smoothNode:(id)arg1;	// IMP=0x00100000001cfec5
- (void)sharpenAllNodes;	// IMP=0x00100000001cfe81
@property(readonly, nonatomic) struct CGRect nodeBounds;
- (id)bezierNodeUnderPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 andTolerance:(double)arg3 returningType:(long long *)arg4;	// IMP=0x00100000001cfb63
- (double)distanceToPoint:(struct CGPoint)arg1 elementIndex:(unsigned long long *)arg2 tValue:(double *)arg3 threshold:(double)arg4;	// IMP=0x00100000001cf67b
- (void)deselectAllNodes;	// IMP=0x00100000001cf54a
- (void)selectAllNodes;	// IMP=0x00100000001cf416
- (void)deleteSelectedNodes;	// IMP=0x00100000001cf2c3
@property(readonly, nonatomic) _Bool canDeleteSelectedNodes;
@property(readonly, nonatomic) _Bool hasSelectedNode;
@property(readonly, nonatomic) _Bool allNodesSelected;
- (void)offsetSelectedEdgesByDelta:(struct CGPoint)arg1;	// IMP=0x00100000001ceef7
- (void)offsetSelectedNodesByDelta:(struct CGPoint)arg1;	// IMP=0x00100000001ced48
@property(readonly, nonatomic) CRLBezierNode *lastNode;
@property(readonly, nonatomic) CRLBezierNode *firstNode;
- (id)nodeAfterNode:(id)arg1;	// IMP=0x00100000001ceb53
- (id)nodePriorToNode:(id)arg1;	// IMP=0x00100000001cea4d
- (void)removeLastNode;	// IMP=0x00100000001cea37
- (void)removeNode:(id)arg1;	// IMP=0x00100000001cea21
- (void)addNode:(id)arg1;	// IMP=0x00100000001cea0b
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x00100000001ce8b1
- (void)reverseDirection;	// IMP=0x00100000001ce796
- (void)updateReflectedState;	// IMP=0x00100000001ce752
- (void)appendToBezierPath:(id)arg1;	// IMP=0x00100000001ce73b
- (void)appendToBezierPath:(id)arg1 selectedNodesOnly:(_Bool)arg2 fromIndex:(unsigned long long)arg3;	// IMP=0x00100000001ce3f0
@property(readonly, nonatomic) CRLBezierPath *bezierPath;
- (_Bool)isCircular;	// IMP=0x00100000001ce33a
@property(readonly, nonatomic) _Bool isRectangular;
- (id)description;	// IMP=0x00100000001cded1
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00100000001cde1c
- (id)init;	// IMP=0x00100000001cddc6
- (void)addTemporarySmoothNodes;	// IMP=0x001000000053388c
- (void)removeTemporaryNodes;	// IMP=0x00100000005333fa
- (void)updateSmoothNodes;	// IMP=0x00100000005333ac
- (void)updateSmoothNodes:(id)arg1 addTemporaryNodes:(_Bool)arg2;	// IMP=0x0010000000532d18
- (long long)updateSmoothNodes:(id)arg1 from:(long long)arg2 to:(long long)arg3 closed:(_Bool)arg4 addTemporaryNodes:(_Bool)arg5;	// IMP=0x0010000000530e2f
- (void)morphWithMorphInfo:(id)arg1;	// IMP=0x001000000052f4c3
- (struct CGPoint)calculateNewControlFromOriginalDelta:(struct CGPoint)arg1 currentDelta:(struct CGPoint)arg2 originalSmoothDelta:(struct CGPoint)arg3 node:(struct CGPoint)arg4;	// IMP=0x001000000052f391
- (void)smoothAllNodes;	// IMP=0x001000000052f244

@end

