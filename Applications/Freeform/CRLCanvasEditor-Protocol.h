//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "CRLBoardItemInsertionEditor-Protocol.h"
#import "CRLDragAndDropDestination-Protocol.h"
#import "CRLEditor-Protocol.h"
#import "CRLMediaCompatibilityAlertPresenter-Protocol.h"
#import "CRLPasteboardReadingEditor-Protocol.h"

@class CRLCanvasEditorHelper, CRLCanvasLayout, CRLCanvasRep, CRLCanvasSelection, CRLInsertionContext, CRLInteractiveCanvasController, CRLPasteboard, CRLPasteboardController, CRLSelectionPath, NSArray, NSObject, NSSet, _TtC8Freeform10CRLCommand, _TtC8Freeform12CRLBoardItem, _TtC8Freeform21CRLConnectionLineItem;
@protocol CRLArrangeInspectorDelegate, CRLCanvasElementInfo;

@protocol CRLCanvasEditor <CRLEditor, CRLBoardItemInsertionEditor, CRLPasteboardReadingEditor, CRLMediaCompatibilityAlertPresenter, CRLDragAndDropDestination>
+ (id)new;
@property(readonly, nonatomic) _TtC8Freeform21CRLConnectionLineItem *connectionLineItemToUseForConnecting;
@property(readonly, nonatomic) NSArray *infosToConnect;
@property(readonly, nonatomic) CRLPasteboardController *pasteboardController;
@property(readonly, nonatomic) id <CRLArrangeInspectorDelegate> arrangeInspectorDelegate;
@property(readonly, nonatomic) CRLCanvasSelection *canvasSelection;
@property(readonly, nonatomic) CRLCanvasEditorHelper *canvasEditorHelper;
@property(readonly, nonatomic) CRLInteractiveCanvasController *interactiveCanvasController;
- (void)hideLassoSelectionEditMenuInDrawingModeIfLassoToolIsSelected;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
- (void)ungroup:(id)arg1;
- (void)group:(id)arg1;
- (struct CGPath *)newDragAndDropHighlightPathWithInset:(double)arg1;
- (_Bool)insertBoardItemsFromDragAndDrop:(NSArray *)arg1 atPoint:(struct CGPoint)arg2 onRep:(CRLCanvasRep *)arg3 insertionContext:(CRLInsertionContext *)arg4 alreadyPositionedInputInfos:(_Bool)arg5;
- (_Bool)isLayoutSelectable:(CRLCanvasLayout *)arg1;
- (_Bool)canvasEditorCanUngroupWithSender:(id)arg1;
- (_Bool)canvasEditorCanGroupWithSender:(id)arg1;
- (_Bool)canvasEditorCanDeselectAllWithSender:(id)arg1;
- (_Bool)canvasEditorCanSelectAllWithSender:(id)arg1;
- (_Bool)canvasEditorCanCopyStyleWithSender:(id)arg1;
- (_Bool)canvasEditorCanOptionDragDuplicateWithSender:(id)arg1;
- (_Bool)canvasEditorCanDuplicateWithSender:(id)arg1;
- (_Bool)canvasEditorCanPasteValuesWithSender:(id)arg1;
- (_Bool)canvasEditorCanPasteAsPlainTextWithSender:(id)arg1;
- (_Bool)canvasEditorCanPasteWithSender:(id)arg1;
- (_Bool)canvasEditorCanCopyWithSender:(id)arg1;
- (_Bool)canvasEditorCanCutWithSender:(id)arg1;
- (_Bool)canvasEditorCanDeleteWithSender:(id)arg1;
- (_Bool)shouldUseAlternateSelectionHighlight;
- (void)sendToBack:(id)arg1;
- (void)sendBackward:(id)arg1;
- (void)bringForward:(id)arg1;
- (void)bringToFront:(id)arg1;
- (void)unlock:(id)arg1;
- (void)lock:(id)arg1;
- (void)distributeDrawablesEvenly:(id)arg1;
- (void)distributeDrawablesVertically:(id)arg1;
- (void)distributeDrawablesHorizontally:(id)arg1;
- (void)alignDrawablesByHorizontalCenter:(id)arg1;
- (void)alignDrawablesByBottomEdge:(id)arg1;
- (void)alignDrawablesByTopEdge:(id)arg1;
- (void)alignDrawablesByVerticalCenter:(id)arg1;
- (void)alignDrawablesByRightEdge:(id)arg1;
- (void)alignDrawablesByLeftEdge:(id)arg1;
- (void)connectWithConnectionLine:(id)arg1;
- (_Bool)canGroupBoardItem:(_TtC8Freeform12CRLBoardItem *)arg1;
- (NSArray *)pasteNativeInfosFromPasteboard:(CRLPasteboard *)arg1 allowImageReplacement:(_Bool)arg2;
- (void)pasteWithPasteboard:(CRLPasteboard *)arg1 selectionPath:(CRLSelectionPath *)arg2 forceMatchStyle:(_Bool)arg3 sender:(id)arg4;
- (struct CGSize)sizeForInsertingMediaOfSize:(struct CGSize)arg1;
- (_TtC8Freeform10CRLCommand *)commandForInsertingBoardItems:(NSArray *)arg1 below:(_TtC8Freeform12CRLBoardItem *)arg2;
- (_TtC8Freeform10CRLCommand *)commandForInsertingBoardItems:(NSArray *)arg1 below:(_TtC8Freeform12CRLBoardItem *)arg2 withOffset:(unsigned long long)arg3;
- (void)maskWithShapeType:(id)arg1;
- (void)maskWithShape:(id)arg1;
- (void)mask:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)insertBacktab:(id)arg1;
- (void)delete:(id)arg1;
- (void)deselectAll:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)pasteValues:(id)arg1;
- (void)pasteAsPlainText:(id)arg1;
- (void)paste:(id)arg1;
- (void)copyForKeyboardMovementDuplicationToPasteboard:(CRLPasteboard *)arg1;
- (void)copyBoardItems:(NSSet *)arg1 toPasteboard:(CRLPasteboard *)arg2 asPDF:(_Bool)arg3 nativeOnly:(_Bool)arg4;
- (void)copyToPasteboard:(CRLPasteboard *)arg1 asPDF:(_Bool)arg2 nativeOnly:(_Bool)arg3 withSender:(id)arg4;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (long long)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (CRLSelectionPath *)selectionPathForDraggingSelectionPath:(CRLSelectionPath *)arg1;
- (CRLSelectionPath *)selectionPathWithInfos:(NSSet *)arg1;
- (CRLSelectionPath *)selectionPathWithInfo:(NSObject<CRLCanvasElementInfo> *)arg1;
- (void)teardown;
- (void)repWasCreated:(CRLCanvasRep *)arg1;
- (void)canvasInfosDidChange;
- (id)init;
- (id)initWithInteractiveCanvasController:(CRLInteractiveCanvasController *)arg1;
@end

