//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CALayer, CAShapeLayer, CRLCanvasLayout, CRLCanvasRenderable, CRLColor, CRLNoDefaultImplicitActionLayer, CRLPulseAnimationController, CRLWPDragAndDropHelper, CRLWPHighlightArrayController, CRLWPRangeArray, CRLWPRepCaretController, CRLWPSearchReference, CRLWPSelection, CRLWPStorageSpellChecker, MISSING_TYPE, NSArray, NSObject, NSString, NSUUID, _TtC8Freeform11CRLWPEditor, _TtC8Freeform12CRLWPStorage, _TtC8Freeform14CRLWPRepHelper;
@protocol CRLContainerInfo, CRLWPLayoutTarget;

@interface CRLWPRep
{
    CALayer *_textLayers[2];	// 8 = 0x8
    CAShapeLayer *_caretLayer;	// 24 = 0x18
    CAShapeLayer *_selectionLineLayers[2];	// 32 = 0x20
    CAShapeLayer *_selectionHighlightLayer;	// 48 = 0x30
    CAShapeLayer *_selectionParagraphBorderLayer;	// 56 = 0x38
    CAShapeLayer *_markHighlightLayer;	// 64 = 0x40
    CAShapeLayer *_smartFieldHighlightLayer;	// 72 = 0x48
    CAShapeLayer *_secondaryHighlightLayer;	// 80 = 0x50
    struct _NSRange _secondaryHighlightRange;	// 88 = 0x58
    int _secondaryHighlightPathStyle;	// 104 = 0x68
    CRLWPHighlightArrayController *_pulseArrayController;	// 112 = 0x70
    CRLWPHighlightArrayController *_highlightArrayController;	// 120 = 0x78
    CRLPulseAnimationController *_caretPulseController;	// 128 = 0x80
    _Bool _caretAnimationDisabled;	// 136 = 0x88
    _Bool _suppressCaret;	// 137 = 0x89
    CRLWPStorageSpellChecker *_spellChecker;	// 144 = 0x90
    CRLWPRangeArray *_misspelledRanges;	// 152 = 0x98
    CRLWPRangeArray *_ungrammaticRanges;	// 160 = 0xa0
    struct _NSRange _suppressedMisspellingRange;	// 168 = 0xa8
    _Bool _updatingHighlights;	// 184 = 0xb8
    _Bool _suppressSelectionHighlight;	// 185 = 0xb9
    struct _NSRange _dragRange;	// 192 = 0xc0
    CRLWPSelection *_lastSelection;	// 208 = 0xd0
    _Bool _selectionChanged;	// 216 = 0xd8
    _Bool _markChanged;	// 217 = 0xd9
    unsigned long long _newSelectionFlags;	// 224 = 0xe0
    _Bool _repFieldsAreActive;	// 232 = 0xe8
    _Bool _hudStateDirty;	// 233 = 0xe9
    _Bool _useKeyboardWhenEditing;	// 234 = 0xea
    double _listLevelIndents[9];	// 240 = 0xf0
    CRLWPSelection *_dropSelection;	// 312 = 0x138
    _Bool _isShowingCommentKnobs;	// 320 = 0x140
    _Bool _tornDown;	// 321 = 0x141
    _Bool _searchHitsAreInvalid;	// 322 = 0x142
    CRLCanvasRenderable *_collaboratorCursorRenderable;	// 328 = 0x148
    _Bool _collaboratorCursorRenderableValid;	// 336 = 0x150
    CRLWPRepCaretController *_caretController;	// 344 = 0x158
    _TtC8Freeform14CRLWPRepHelper *_repHelper;	// 352 = 0x160
    unsigned long long _changeCountForSpellingSuppression;	// 360 = 0x168
    _Bool _dataChangeObserverIsConfigured;	// 368 = 0x170
    _Bool _findIsShowing;	// 369 = 0x171
    _Bool _usesStandardHighlightColorForReplaceSelections;	// 370 = 0x172
    _Bool _dragOperationInProgress;	// 371 = 0x173
    _Bool _suppressSelectionControls;	// 372 = 0x174
    _Bool _shouldIgnoreFirstRequestToShowEditMenu;	// 373 = 0x175
    _Bool _hasOverflowed;	// 374 = 0x176
    _Bool _dragAndDropCaretLayerIsForCaret;	// 375 = 0x177
    NSUUID *_scribbleIdentifier;	// 376 = 0x178
    CRLWPDragAndDropHelper *_dragAndDropHelper;	// 384 = 0x180
    CRLWPSearchReference *_primaryFindResultSearchReference;	// 392 = 0x188
    CALayer *_dragAndDropTopicLayer;	// 400 = 0x190
    CRLNoDefaultImplicitActionLayer *_dragAndDropTopicIndentLayer;	// 408 = 0x198
    CAShapeLayer *_dragAndDropCaretLayer;	// 416 = 0x1a0
    CRLColor *_backgroundColor;	// 424 = 0x1a8
    NSArray *_searchReferences;	// 432 = 0x1b0
    CAShapeLayer *_floatingCaretLayer;	// 440 = 0x1b8
    double _ibeamLength;	// 448 = 0x1c0
    CRLColor *_overrideCaretColor;	// 456 = 0x1c8
}

+ (void)initialize;	// IMP=0x002000000046df79
+ (id)unfocusedHighlightColorForDarkMode:(_Bool)arg1;	// IMP=0x001000000046dc31
+ (id)focusedHighlightColorForDarkMode:(_Bool)arg1;	// IMP=0x001000000046dbd0
- (void).cxx_destruct;	// IMP=0x001000000048a364
@property(retain, nonatomic) CRLColor *overrideCaretColor; // @synthesize overrideCaretColor=_overrideCaretColor;
@property(nonatomic) double ibeamLength; // @synthesize ibeamLength=_ibeamLength;
@property(copy, nonatomic) CRLWPSelection *lastSelection; // @synthesize lastSelection=_lastSelection;
@property(nonatomic) _Bool dragAndDropCaretLayerIsForCaret; // @synthesize dragAndDropCaretLayerIsForCaret=_dragAndDropCaretLayerIsForCaret;
@property(retain, nonatomic) CAShapeLayer *floatingCaretLayer; // @synthesize floatingCaretLayer=_floatingCaretLayer;
@property(retain, nonatomic) NSArray *searchReferences; // @synthesize searchReferences=_searchReferences;
@property(nonatomic) _Bool hasOverflowed; // @synthesize hasOverflowed=_hasOverflowed;
@property(nonatomic) _Bool shouldIgnoreFirstRequestToShowEditMenu; // @synthesize shouldIgnoreFirstRequestToShowEditMenu=_shouldIgnoreFirstRequestToShowEditMenu;
@property(nonatomic) _Bool useKeyboardWhenEditing; // @synthesize useKeyboardWhenEditing=_useKeyboardWhenEditing;
@property(nonatomic) struct _NSRange dragRange; // @synthesize dragRange=_dragRange;
@property(nonatomic) _Bool suppressSelectionControls; // @synthesize suppressSelectionControls=_suppressSelectionControls;
@property(nonatomic, getter=isSelectionHighlightSuppressed) _Bool suppressSelectionHighlight; // @synthesize suppressSelectionHighlight=_suppressSelectionHighlight;
@property(nonatomic) _Bool dragOperationInProgress; // @synthesize dragOperationInProgress=_dragOperationInProgress;
@property(nonatomic) __weak CRLWPSelection *dropSelection; // @synthesize dropSelection=_dropSelection;
@property(retain, nonatomic) CRLColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) CAShapeLayer *dragAndDropCaretLayer; // @synthesize dragAndDropCaretLayer=_dragAndDropCaretLayer;
@property(retain, nonatomic) CRLNoDefaultImplicitActionLayer *dragAndDropTopicIndentLayer; // @synthesize dragAndDropTopicIndentLayer=_dragAndDropTopicIndentLayer;
@property(retain, nonatomic) CALayer *dragAndDropTopicLayer; // @synthesize dragAndDropTopicLayer=_dragAndDropTopicLayer;
@property(nonatomic) _Bool usesStandardHighlightColorForReplaceSelections; // @synthesize usesStandardHighlightColorForReplaceSelections=_usesStandardHighlightColorForReplaceSelections;
@property(readonly, nonatomic) CRLWPStorageSpellChecker *spellChecker; // @synthesize spellChecker=_spellChecker;
@property(nonatomic) _Bool findIsShowing; // @synthesize findIsShowing=_findIsShowing;
@property(retain, nonatomic) CRLWPSearchReference *primaryFindResultSearchReference; // @synthesize primaryFindResultSearchReference=_primaryFindResultSearchReference;
@property(readonly, nonatomic) NSUUID *scribbleIdentifier; // @synthesize scribbleIdentifier=_scribbleIdentifier;
- (id)p_textEditorForTextStorage:(id)arg1;	// IMP=0x0010000000489e28
- (id)p_selectionPathIncludingInfo:(id)arg1 excludingInfo:(id)arg2;	// IMP=0x0010000000489e20
- (struct CGRect)p_convertRectIntoZoomCoordinates:(struct CGRect)arg1;	// IMP=0x0010000000489d32
- (void)updateUniversalAccessZoomWindow;	// IMP=0x00100000004896dd
- (void)layerHostContainerFocusDidChange;	// IMP=0x00100000004896d7
- (struct UIEdgeInsets)hitToleranceInsetsWithDefaultInsets:(struct UIEdgeInsets)arg1;	// IMP=0x00100000004896bf
@property(readonly, nonatomic) _Bool scribbleElementIsFocused;
@property(readonly, nonatomic) _Bool shouldDelayScribbleFocus;
@property(readonly, nonatomic) struct CGRect scaledScribbleEditingFrame;
- (_Bool)scribbleExceedsVerticalDistanceForNearestCharIndex:(unsigned long long)arg1 boundsPoint:(struct CGPoint)arg2 isAtEndOfLine:(_Bool)arg3;	// IMP=0x00100000004894c0
- (void)scribbleSetSelectionForBeginEditingWithBoundsPoint:(struct CGPoint)arg1 tappedInRep:(id)arg2;	// IMP=0x0010000000488e37
@property(readonly, copy, nonatomic) CDUnknownBlockType scribbleEditingBlock;
@property(readonly, copy, nonatomic) CDUnknownBlockType willBeginWritingBlock;
@property(readonly, copy, nonatomic) CDUnknownBlockType prepareForScribbleBlock;
@property(readonly, nonatomic) NSArray *scribbleCapableElements;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;	// IMP=0x00100000004888d9
- (id)imageForSearchReference:(id)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(_Bool)arg3;	// IMP=0x00100000004887e3
- (struct CGPath *)newPathForSearchReference:(id)arg1;	// IMP=0x00100000004880b8
- (void)p_updateHighlights;	// IMP=0x0010000000487b73
- (void)prepareLayoutForImagingSearchReferencesAsActive:(_Bool)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000487529
- (void)i_setSearchReferencesToHighlight:(id)arg1;	// IMP=0x00100000004873af
- (void)p_setPrimaryFindResultSearchReference:(id)arg1;	// IMP=0x001000000048723e
- (void)i_primaryFindResultChanged:(id)arg1;	// IMP=0x00100000004871ab
- (_Bool)p_doesRepIntersectSearchReference:(id)arg1;	// IMP=0x0010000000487036
- (void)p_setPulseControllerActive:(_Bool)arg1 autohide:(_Bool)arg2;	// IMP=0x0010000000486eab
- (unsigned long long)pulseAnimationStyle:(id)arg1;	// IMP=0x0010000000486e1a
- (void)pulseAnimationDidStopForPulse:(id)arg1;	// IMP=0x0010000000486d77
- (void)pulseAnimationDidStop:(id)arg1;	// IMP=0x00100000004868eb
- (void)p_clearICCPrimaryFindResultSearchReference;	// IMP=0x001000000048669e
- (id)backgroundColorForDragPreviewOfSelection:(id)arg1;	// IMP=0x001000000048664f
@property(readonly, nonatomic) _TtC8Freeform12CRLWPStorage *storageForDragDropOperation;
@property(readonly, nonatomic) _Bool allowGenericDrags;
- (_Bool)isDragPoint:(struct CGPoint)arg1 inSelection:(id)arg2 includeEndpoints:(_Bool)arg3;	// IMP=0x0010000000486465
- (id)textEditorForDropIntoStorage:(id)arg1;	// IMP=0x0010000000485f2b
- (id)selectionForDragAndDropNaturalPoint:(struct CGPoint)arg1;	// IMP=0x0010000000485e02
@property(readonly, nonatomic) struct CGAffineTransform transformToConvertNaturalToScaledRoot;
- (struct CGColor *)p_highlightLineColor;	// IMP=0x0010000000485c41
- (struct CGColor *)p_caretLayerColor;	// IMP=0x0010000000485b9b
- (void)p_updateCaretLayerColor;	// IMP=0x0010000000485b0f
- (void)p_editingDidEndNotification:(id)arg1;	// IMP=0x0010000000485b09
- (void)p_markChangedNotification:(id)arg1;	// IMP=0x0010000000485b03
- (void)p_selectionChangedNotification:(id)arg1;	// IMP=0x0010000000485842
- (void)p_invalidateCommentKnobs;	// IMP=0x001000000048583c
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;	// IMP=0x001000000048580d
- (void)p_destroySpellChecker;	// IMP=0x00100000004857ec
- (void)p_spellcheckFinished:(id)arg1;	// IMP=0x001000000048569c
- (void)p_createSpellChecker;	// IMP=0x0010000000485367
- (_Bool)p_needsSpellChecker;	// IMP=0x0010000000485223
- (_Bool)p_automaticTextSubstitutionEnabled;	// IMP=0x0010000000485172
- (_Bool)p_spellCheckingEnabled;	// IMP=0x0010000000485076
- (void)p_showCollaboratorCursorLayer;	// IMP=0x0010000000484fb2
- (void)p_hideCollaboratorCursorLayer;	// IMP=0x0010000000484ed7
- (id)currentCollaboratorCursorColor;	// IMP=0x0010000000484ebe
- (id)collaboratorCursorRenderable;	// IMP=0x00100000004848e1
- (void)p_withCollaboratorCursorPerformBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000483ac9
- (double)collaborativeCursorOpacityForCaret:(_Bool)arg1;	// IMP=0x0010000000483961
- (_Bool)p_storageMatchesSelectionPath:(id)arg1;	// IMP=0x001000000048367c
- (void)hideCollaboratorCursors;	// IMP=0x0010000000483604
- (void)collaboratorCursorChangedToSelectionPath:(id)arg1;	// IMP=0x00100000004834c6
- (_Bool)shouldShowCollaboratorCursorHighlight;	// IMP=0x0010000000483252
- (_Bool)shouldAddCollaboratorLayerToOverlays;	// IMP=0x001000000048320c
- (void)invalidateCollaboratorCursorRenderable;	// IMP=0x00100000004831a1
- (struct CGRect)boundsForCollaboratorCursorRenderable;	// IMP=0x0010000000483183
- (void)p_updateMarkHighlightLayer;	// IMP=0x00100000004829e8
- (void)p_hideMarkHighlightLayer;	// IMP=0x00100000004829c6
- (void)p_createMarkHighlightLayer;	// IMP=0x0010000000482850
- (void)p_showSelectionParagraphBorderLayerWithPath:(struct CGPath *)arg1;	// IMP=0x00100000004826df
- (void)p_hideSelectionParagraphBorderLayer;	// IMP=0x001000000048257f
- (void)p_hideSelectionHighlightLayer;	// IMP=0x001000000048255d
- (void)p_createSelectionParagraphBorderLayer;	// IMP=0x00100000004821a7
- (void)p_createSelectionHighlightLayer;	// IMP=0x0010000000481ec3
- (void)p_setSelectionHighlightColor;	// IMP=0x00100000004819be
- (void)p_setSelectionLineLayersHidden:(_Bool)arg1;	// IMP=0x001000000048196f
- (void)p_createSelectionLineLayers;	// IMP=0x0010000000481549
- (void);	// IMP=0x00100000004814d1
- (void)i_textInputResponderDidResignFirstResponder;	// IMP=0x0010000000481459
@property(readonly, nonatomic) _Bool isShowingCaret;
- (void)hideCaretLayer;	// IMP=0x0010000000481434
- (void)showCaretLayerStartingAnimation;	// IMP=0x0010000000481417
@property(readonly, nonatomic) _Bool caretIsHidden;
- (_Bool)p_positionCaretLayer:(id)arg1 forSelection:(id)arg2 layerRelative:(_Bool)arg3;	// IMP=0x0010000000480bb6
- (struct CGPoint)p_applyLineSnappingToFloatingCaret:(id)arg1 atPoint:(struct CGPoint)arg2 withRect:(struct CGRect)arg3;	// IMP=0x0010000000480959
- (void)p_positionAndSizeFloatingCaret:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x0010000000480636
- (id)p_caretLayerWithZPosition:(double)arg1;	// IMP=0x00100000004804c4
- (void)p_destroyLayer:(long long)arg1;	// IMP=0x0010000000480487
- (void)p_createLayer:(long long)arg1;	// IMP=0x00100000004800a6
- (void)p_drawTextInLayer:(id)arg1 context:(struct CGContext *)arg2 limitSelection:(id)arg3 rubyGlyphRange:(struct _NSRange)arg4 renderMode:(unsigned long long)arg5 suppressInvisibles:(_Bool)arg6;	// IMP=0x001000000047f48f
- (void)p_teardown;	// IMP=0x001000000047efd6
@property(readonly, nonatomic) _Bool textIsVertical;
- (_Bool)shouldLayoutTilingLayer:(id)arg1;	// IMP=0x001000000047eef2
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;	// IMP=0x001000000047eec9
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;	// IMP=0x001000000047edc3
- (void)p_drawTextBackgroundLayerInContext:(struct CGContext *)arg1;	// IMP=0x001000000047ecb9
- (void)p_drawTextLayerInContext:(struct CGContext *)arg1;	// IMP=0x001000000047ebaf
- (void)p_validateWithLayoutController;	// IMP=0x001000000047eb1d
- (void)i_setNeedsDisplayForSelectionChange;	// IMP=0x001000000047e244
- (void)p_updateForCurrentSelectionWithFlags:(unsigned long long)arg1;	// IMP=0x001000000047dc33
- (void)p_updateSuppressedSpellingRange;	// IMP=0x001000000047d326
- (void)p_setSuppressedMisspellingRange:(struct _NSRange)arg1;	// IMP=0x001000000047d27b
- (void)p_invalidateSuppressedMisspellingRange;	// IMP=0x001000000047d243
- (void)i_renderingOptionsDidChange;	// IMP=0x001000000047d231
- (void)i_spellCheckerWordsDidChange;	// IMP=0x001000000047d1ec
- (void)i_setNeedsErasableDisplayInRange:(struct _NSRange)arg1;	// IMP=0x001000000047cf90
- (void)p_hideSelectionLayers;	// IMP=0x001000000047cf36
- (_Bool)p_canShowSelectionAndCaretLayers;	// IMP=0x001000000047cd53
- (void)p_updateLayersForRangeSelection:(id)arg1 selectionFlags:(unsigned long long)arg2;	// IMP=0x001000000047c753
- (struct CGPoint)p_pinPoint:(struct CGPoint)arg1 toRect:(struct CGRect)arg2;	// IMP=0x001000000047c715
- (id)lineSearchReferencesForSearchReference:(id)arg1;	// IMP=0x001000000047c3fd
- (id)p_lineSelectionsForSelection:(id)arg1;	// IMP=0x001000000047c195
- (struct CGPath *)p_newSelectionPathForSelection:(id)arg1 transform:(struct CGAffineTransform *)arg2 headPinRect:(out struct CGRect *)arg3 tailPinRect:(out struct CGRect *)arg4 markedText:(_Bool)arg5;	// IMP=0x001000000047b888
- (struct CGPath *)p_newSelectionPathForSelection:(id)arg1 transform:(struct CGAffineTransform *)arg2 headPinRect:(out struct CGRect *)arg3 tailPinRect:(out struct CGRect *)arg4;	// IMP=0x001000000047b866
- (struct CGPath *)newSelectionPathForSelection:(id)arg1 transform:(struct CGAffineTransform *)arg2 headPinRect:(out struct CGRect *)arg3 tailPinRect:(out struct CGRect *)arg4;	// IMP=0x001000000047b854
- (void)updateVisualSelection:(id)arg1;	// IMP=0x001000000047b7fa
- (void)p_updateAnimationWithAnimatingPulse:(_Bool)arg1;	// IMP=0x001000000047b541
- (void)editingDidEndWithTextEditor:(id)arg1;	// IMP=0x001000000047b473
- (_Bool)doesNeedDisplayOnEditingDidEnd;	// IMP=0x001000000047b46b
- (_Bool)isOverflowing;	// IMP=0x001000000047b3d1
- (id)textImageForRect:(struct CGRect)arg1;	// IMP=0x001000000047b381
- (id)textImageForSelection:(id)arg1 frame:(struct CGRect *)arg2 usingGlyphRect:(_Bool)arg3 shouldPulsate:(_Bool)arg4 suppressInvisibles:(_Bool)arg5 suppressChildReps:(_Bool)arg6 drawBackground:(_Bool)arg7 inset:(double)arg8;	// IMP=0x001000000047af1d
- (id)p_imageForZeroLengthPath:(struct CGPath *)arg1;	// IMP=0x001000000047a6cf
- (id)p_imageForRect:(struct CGRect)arg1 usingGlyphRect:(_Bool)arg2 prepareBackground:(_Bool)arg3 drawBackground:(_Bool)arg4 shouldPulsate:(_Bool)arg5 forCaret:(_Bool)arg6 drawSelection:(id)arg7 suppressInvisibles:(_Bool)arg8 suppressChildReps:(_Bool)arg9;	// IMP=0x001000000047a002
- (void)p_updateLayersForInsertionPointSelection:(id)arg1;	// IMP=0x0010000000479da7
- (_Bool)p_allowCaretForSelection:(id)arg1;	// IMP=0x0010000000479c74
- (struct CGRect)p_convertNaturalRectToRotated:(struct CGRect)arg1 repAngle:(double)arg2;	// IMP=0x0010000000479b6b
- (struct _NSRange)rangeOfMisspelledWordAtCharIndex:(unsigned long long)arg1;	// IMP=0x0010000000479acd
- (struct CGRect)glyphRectForRubyFieldAtCharIndex:(unsigned long long)arg1 glyphRange:(struct _NSRange)arg2;	// IMP=0x00100000004798b5
- (unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)arg1;	// IMP=0x0010000000479711
- (unsigned int)fontTraitsForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;	// IMP=0x0010000000479509
- (struct CGRect)glyphRectForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;	// IMP=0x001000000047928a
- (struct CGRect)columnRectForRange:(struct _NSRange)arg1;	// IMP=0x0010000000479204
- (struct CGRect)labelRectForCharIndex:(unsigned long long)arg1;	// IMP=0x001000000047918d
- (_Bool)shouldCreateTextKnobs;	// IMP=0x0010000000479084
- (_Bool)shouldCreateLockedKnobs;	// IMP=0x001000000047907c
- (_Bool)shouldCreateSelectionKnobs;	// IMP=0x0010000000479074
- (void)updatePositionsOfKnobs:(id)arg1;	// IMP=0x0010000000478e6c
- (id)knobClassWithTag:(unsigned long long)arg1;	// IMP=0x0010000000478d6a
- (void)addKnobsToArray:(id)arg1;	// IMP=0x0010000000478812
@property(readonly, nonatomic) CRLWPSelection *selection;
@property(readonly, nonatomic) NSArray *columns;
@property(readonly, nonatomic) _TtC8Freeform12CRLWPStorage *storage;
@property(readonly, nonatomic) __weak CRLCanvasLayout<CRLWPLayoutTarget> *layout;
- (_Bool)wantsContextMenuWhenEditingDisabledAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000004784d7
- (_Bool)wantsToHandleTapsWhenLocked;	// IMP=0x00100000004784cf
- (_Bool)wantsToHandleTapsOnBehalfOfRepForSelecting;	// IMP=0x00100000004784c7
- (void)willDisplayEditHyperlinkUIForHyperlinkField:(id)arg1 beginEditing:(_Bool)arg2;	// IMP=0x00100000004784c1
- (id)hyperlinkContainerRep;	// IMP=0x0010000000478420
- (_Bool)shouldPreventMarqueeInitiationAtPoint:(struct CGPoint)arg1 withTouchType:(long long)arg2;	// IMP=0x00100000004782a5
- (id)repForDragging;	// IMP=0x0010000000478250
- (id)dragItemsForBeginningDragAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000478243
- (id)siblings;	// IMP=0x0010000000477f31
- (id)repForCharIndex:(unsigned long long)arg1 isStart:(_Bool)arg2;	// IMP=0x0010000000477d5b
- (_Bool)p_doesRep:(id)arg1 containCharIndex:(unsigned long long)arg2 isStart:(_Bool)arg3;	// IMP=0x0010000000477cf7
- (_Bool)containsStartOfSelection:(id)arg1;	// IMP=0x0010000000477b64
- (void)pulseCaret;	// IMP=0x0010000000477829
- (void)didEnterBackground;	// IMP=0x001000000047780c
- (void)willEnterForeground;	// IMP=0x00100000004777ef
- (void)enableCaretAnimation;	// IMP=0x00100000004777cd
- (void)disableCaretAnimation;	// IMP=0x00100000004777ae
@property(nonatomic) _Bool caretBlinks;
@property(readonly, nonatomic) _Bool selectionChangeWasLocal;
- (void)endFloatingCursorWithRepForAnimation:(id)arg1;	// IMP=0x0010000000477608
- (void)updateFloatingCursorAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000477591
- (void)beginFloatingCursorAtPoint:(struct CGPoint)arg1 animate:(_Bool)arg2;	// IMP=0x001000000047735c
- (void)textInteractionCaretDragStopped;	// IMP=0x001000000047730a
- (void)textInteractionCaretEndedFloating;	// IMP=0x00100000004772c2
- (void)textInteractionCaretBeganFloating;	// IMP=0x001000000047727d
- (void)textInteractionCaretDragStarted;	// IMP=0x001000000047726b
- (void)suppressCaret:(_Bool)arg1;	// IMP=0x001000000047724e
- (void)updateCaretColorForFinishedFloatingCursor;	// IMP=0x001000000047723a
- (void)updateCaretColorForFloatingCursorInFlight;	// IMP=0x0010000000477223
@property(nonatomic) _Bool ghostCaretAppearance;
- (void)p_addDropAnimationToFloatingCursorWithEndingRep:(id)arg1;	// IMP=0x0010000000476c76
- (void)p_addLiftAnimationToFloatingCursor;	// IMP=0x0010000000476c40
- (void)gesturesDidEnd;	// IMP=0x0010000000476c2e
- (void)handleFadeInForZoom;	// IMP=0x0010000000476b97
- (void)handleFadeOutForZoom;	// IMP=0x0010000000476b3a
@property(readonly, nonatomic) _TtC8Freeform11CRLWPEditor *textEditor;
@property(readonly, nonatomic) struct CGSize hitTestingSlop;
@property(readonly, nonatomic) _Bool isDropTarget;
@property(readonly, nonatomic) _Bool isBeingEdited;
- (id)columnForCharIndex:(unsigned long long)arg1;	// IMP=0x0010000000476589
- (id)closestColumnForPoint:(struct CGPoint)arg1;	// IMP=0x00100000004764b9
- (_Bool)shouldIgnoreSingleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;	// IMP=0x00100000004764a7
- (void)setHighlightedHyperlinkField:(id)arg1;	// IMP=0x00100000004763c4
- (void)clearSecondaryHighlight;	// IMP=0x00100000004763a8
- (void)setSecondaryHighlightRange:(struct _NSRange)arg1 color:(struct CGColor *)arg2 pathStyle:(int)arg3;	// IMP=0x0010000000476228
- (void)p_updateSecondaryHighlightLayer;	// IMP=0x00100000004760f0
- (id)smartFieldAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000475f8e
- (_Bool)p_canRepBeginEditingOnDoubleTap;	// IMP=0x0010000000475f86
- (_Bool)canEditWithEditor:(id)arg1;	// IMP=0x0010000000475dcb
- (void)didBeginEditingWithTextEditor:(id)arg1;	// IMP=0x0010000000475c62
- (void)beginEditing;	// IMP=0x0010000000475a8e
- (Class)wpEditorClass;	// IMP=0x0010000000475a7d
- (struct CGRect)newTextLayerUnscaledBounds:(struct CGRect)arg1 forNewTextBounds:(struct CGRect)arg2;	// IMP=0x0010000000475a65
- (void)screenScaleDidChange;	// IMP=0x00100000004758ff
- (struct CGRect)rectToClipChildRepRenderables;	// IMP=0x00100000004757fc
- (void)didUpdateRenderable:(id)arg1;	// IMP=0x0010000000475250
- (struct CGRect)clipRect;	// IMP=0x00100000004751e6
- (struct CGRect)p_clipRect:(struct CGRect)arg1;	// IMP=0x0010000000474f8b
- (void)updateFromLayout;	// IMP=0x0010000000474b39
- (void)invalidateHUDState;	// IMP=0x0010000000474763
- (void)p_scheduleUpdateHUDState;	// IMP=0x001000000047448a
- (void)addAdditionalChildLayersToArray:(id)arg1;	// IMP=0x001000000047415f
- (_Bool)wantsChildRepLayerUpdatingCallsEvenWithNoChildren;	// IMP=0x0010000000474157
- (id)overlayRenderables;	// IMP=0x0010000000473768
- (void)drawRubyInContext:(struct CGContext *)arg1 rubyFieldStart:(unsigned long long)arg2 rubyGlyphRange:(struct _NSRange)arg3;	// IMP=0x001000000047365c
- (void)recursivelyDrawInContext:(struct CGContext *)arg1 limitSelection:(id)arg2 suppressInvisibles:(_Bool)arg3;	// IMP=0x001000000047364a
- (void)p_drawInContext:(struct CGContext *)arg1 limitSelection:(id)arg2 suppressInvisibles:(_Bool)arg3;	// IMP=0x00100000004735b7
- (void)drawInContext:(struct CGContext *)arg1;	// IMP=0x00100000004735a0
- (void)drawInLayerContext:(struct CGContext *)arg1;	// IMP=0x001000000047335f
- (id)colorBehindLayer:(id)arg1;	// IMP=0x0010000000473270
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;	// IMP=0x001000000047303f
- (void)setNeedsDisplayInRange:(struct _NSRange)arg1;	// IMP=0x0010000000472faf
- (void)setNeedsDisplay;	// IMP=0x0010000000472de7
- (id)textBackgroundLayer;	// IMP=0x0010000000472dd2
- (id)textLayer;	// IMP=0x0010000000472dbc
- (void)performBlockOnTextLayers:(CDUnknownBlockType)arg1;	// IMP=0x0010000000472d50
- (id)p_hyperlinkAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000472cc1
- (void)spellCheckingStateChanged;	// IMP=0x0010000000472c65
- (void)processChangedProperty:(unsigned long long)arg1;	// IMP=0x0010000000472bf1
- (void)verticalTextPropertyChanged;	// IMP=0x0010000000472b7d
- (long long)tilingMode;	// IMP=0x0010000000472b63
- (_Bool)directlyManagesLayerContent;	// IMP=0x0010000000472b5b
- (Class)layerClass;	// IMP=0x0010000000472b4a
- (double)knobOffsetForKnob:(id)arg1 paragraphMode:(_Bool)arg2;	// IMP=0x00100000004729df
- (struct CGPoint)knobCenterForSelection:(id)arg1 knob:(id)arg2;	// IMP=0x00100000004728f9
- (id)knobPositioner;	// IMP=0x0010000000472840
- (id)newTrackerForKnob:(id)arg1;	// IMP=0x0010000000472591
- (void)p_unregisterNotifications;	// IMP=0x001000000047246c
- (void)p_registerNotifications;	// IMP=0x0010000000472332
- (id)cursorForPoint:(struct CGPoint)arg1 withCursorPlatformObject:(id)arg2;	// IMP=0x00100000004717c0
- (double)p_maximumBeamLength;	// IMP=0x00100000004717b2
- (id)cursorAtPoint:(struct CGPoint)arg1 forKnob:(id)arg2 withCursorPlatformObject:(id)arg3;	// IMP=0x00100000004716d0
- (struct CGRect)p_closestCaretRectForPoint:(struct CGPoint)arg1 inSelection:(_Bool)arg2 allowPastBreak:(_Bool)arg3;	// IMP=0x0010000000471292
- (struct CGRect)p_closestCaretRectForCharacterAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000470f74
- (struct CGRect)p_topicDragRectForSelection:(id)arg1;	// IMP=0x00100000004707b2
- (struct CGRect)p_caretRectForSelection:(id)arg1;	// IMP=0x00100000004704c6
- (struct CGRect)caretRectForSelection:(id)arg1;	// IMP=0x001000000047044e
- (CDStruct_249a8bf0)wordMetricsAtCharIndex:(unsigned long long)arg1;	// IMP=0x001000000047028e
- (CDStruct_9f83f5df)lineMetricsAtCharIndex:(unsigned long long)arg1;	// IMP=0x0010000000470204
- (CDStruct_9f83f5df)lineMetricsAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000004701e3
- (CDStruct_9f83f5df)p_lineMetricsAtPoint:(struct CGPoint)arg1 allowNotFound:(_Bool)arg2;	// IMP=0x00100000004700c3
- (struct CGRect)caretRectForCharIndex:(unsigned long long)arg1 leadingEdge:(_Bool)arg2 caretAffinity:(int)arg3;	// IMP=0x001000000046ffd3
- (MISSING_TYPE *)caretRectForCharIndex:caretAffinity: /* Error: Ran out of types for this method. */;	// IMP=0x001000000046ff48
- (struct CGPath *)p_newPathForSelection:(id)arg1 withTransform:(struct CGAffineTransform)arg2 withInset:(double)arg3;	// IMP=0x001000000046fb01
- (struct CGPath *)newPathForSelection:(id)arg1;	// IMP=0x001000000046f68c
- (struct CGRect)rectForSelection:(id)arg1 includeRuby:(_Bool)arg2 includePaginatedAttachments:(_Bool)arg3;	// IMP=0x001000000046f5d7
- (_Bool)isPointInSelectedArea:(struct CGPoint)arg1;	// IMP=0x001000000046f1bb
- (_Bool)didPointHitSelectionEnd:(struct CGPoint)arg1;	// IMP=0x001000000046eecc
- (_Bool)containsPoint:(struct CGPoint)arg1 withPrecision:(_Bool)arg2;	// IMP=0x001000000046edf2
- (struct CGRect)selectionRect;	// IMP=0x001000000046ed81
- (struct CGRect)caretRect;	// IMP=0x001000000046ed16
- (struct CGPoint)pinToClosestColumn:(struct CGPoint)arg1;	// IMP=0x001000000046ec69
- (struct CGPoint)pinToNaturalBounds:(struct CGPoint)arg1 andLastLineFragment:(_Bool)arg2;	// IMP=0x001000000046e7d2
- (struct _NSRange)range;	// IMP=0x001000000046e623
- (_Bool)p_isRedesignedTextCursorEnabled;	// IMP=0x001000000046e60b
- (void)willBeRemoved;	// IMP=0x001000000046e5cd
- (void)setParentRep:(id)arg1;	// IMP=0x001000000046e37b
- (void)dealloc;	// IMP=0x001000000046e2f0
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;	// IMP=0x001000000046e0a0
@property(readonly, nonatomic) CRLWPDragAndDropHelper *dragAndDropHelper; // @synthesize dragAndDropHelper=_dragAndDropHelper;
@property(readonly, nonatomic) NSObject<CRLContainerInfo> *containerInfo;
- (_Bool)shouldShowKnobs;	// IMP=0x001000000046dcce
- (_Bool)p_shouldDisplaySelectionControls;	// IMP=0x001000000046dcb9
- (id)p_textEditorForStorage:(id)arg1;	// IMP=0x00100000002e4197
- (id)p_styleProvider;	// IMP=0x00100000002e4140
- (id)dragItemsForBeginningDragOfChildRep:(id)arg1;	// IMP=0x00100000002e4138
- (id)p_dragItemsForBeginningDragWithSelection:(id)arg1 inlineRepBeingDragged:(id)arg2;	// IMP=0x00100000002e36c3
- (id)dragItemsForBeginningDragAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000002e3528
- (void)hideDragAndDropUI;	// IMP=0x00100000002e3404
- (void)updateDragAndDropUIForPoint:(struct CGPoint)arg1 dragInfo:(id)arg2;	// IMP=0x00100000002e2c56
- (_Bool)handleDragOperation:(unsigned long long)arg1 withDragInfo:(id)arg2 atUnscaledPoint:(struct CGPoint)arg3;	// IMP=0x00100000002e2bc4
- (unsigned long long)dragOperationForDragInfo:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;	// IMP=0x00100000002e2b3a
- (struct CGRect)getCurrentTextFieldBounds;	// IMP=0x00100000009fe3c0
@property(nonatomic, readonly) NSArray *hyperlinkRegions;
- (id)contextMenuPreviewForHighlightingMenuAtPoint:(struct CGPoint)arg1 withConfiguration:(id)arg2;	// IMP=0x0010000000b27f40
- (id)contextMenuConfigurationAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000b27e90

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

