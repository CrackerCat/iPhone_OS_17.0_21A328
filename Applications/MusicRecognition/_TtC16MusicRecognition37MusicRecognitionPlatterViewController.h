//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIViewController.h>

@class MISSING_TYPE, UIView;
@protocol SBUISystemApertureAccessoryView, SBUISystemApertureElement;

@interface _TtC16MusicRecognition37MusicRecognitionPlatterViewController : UIViewController
{
    MISSING_TYPE *listeningAccessoryView;	// 8 = 0x8
    MISSING_TYPE *waveformAccessoryView;	// 16 = 0x10
    MISSING_TYPE *minimalAccessoryView;	// 24 = 0x18
    MISSING_TYPE *matchingFlowView;	// 32 = 0x20
    MISSING_TYPE *presentationStyle;	// 40 = 0x28
    MISSING_TYPE *activeLayoutMode;	// 48 = 0x30
    MISSING_TYPE *contentRole;	// 56 = 0x38
    MISSING_TYPE *preferredLayoutMode;	// 64 = 0x40
    MISSING_TYPE *musicRecognitionCancellable;	// 72 = 0x48
    MISSING_TYPE *assertionTimer;	// 80 = 0x50
    MISSING_TYPE *$__lazy_storage_$_customLayoutHeightConstraint;	// 88 = 0x58
    MISSING_TYPE *maximumLayoutMode;	// 96 = 0x60
    MISSING_TYPE *activeConstraints;	// 104 = 0x68
}

- (void).cxx_destruct;	// IMP=0x0040000000006290
- (id)initWithCoder:(id)arg1;	// IMP=0x00100000000085d0
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;	// IMP=0x0010000000008360
- (_Bool)_canShowWhileLocked;	// IMP=0x00100000000080d0
- (void)viewWillLayoutSubviewsWithTransitionCoordinator:(id)arg1;	// IMP=0x0010000000008080
- (void)receivedWithSpectralOutput:(id)arg1;	// IMP=0x00100000000077d0
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x00100000000073e0
- (void)viewDidLoad;	// IMP=0x0010000000006840
- (void)dealloc;	// IMP=0x0010000000006270
@property(nonatomic, readonly) unsigned long long presentationBehaviors;
@property(nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *minimalView;
@property(nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *trailingView;
@property(nonatomic, readonly) UIView<SBUISystemApertureAccessoryView> *leadingView;
@property(nonatomic, readonly) UIViewController<SBUISystemApertureElement> *systemApertureElementViewController;
@property(nonatomic) long long maximumLayoutMode; // @synthesize maximumLayoutMode;
@property(nonatomic) long long preferredLayoutMode; // @synthesize preferredLayoutMode;
@property(nonatomic) long long contentRole; // @synthesize contentRole;
@property(nonatomic) long long activeLayoutMode; // @synthesize activeLayoutMode;

@end

