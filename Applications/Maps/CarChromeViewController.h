//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CarAccessoriesOverlay, CarAlertViewController, CarCardsOverlay, CarFocusContainerGuideController, CarFocusOrderEnvironment, CarFocusOrderItem, CarMapControlsOverlay, CarMapNudgerizer, CarRouteGeniusAnnotationsManager, CarRouteSelectionController, CarStatusBannerOverlay, ChromeMapSettings, CustomPOIsController, InterruptionManager, MapViewResponder, MapsTokenStorage, NSArray, NSLayoutConstraint, NSMapTable, NSMutableArray, NSString, NSTimer, PersonalizedItemManager, UILayoutGuide, UITapGestureRecognizer, UIView;
@protocol CarChromeContext, NSObject, UIFocusEnvironment, UIFocusItemContainer;

@interface CarChromeViewController
{
    NSTimer *_autohideIdleTimer;	// 56 = 0x38
    UITapGestureRecognizer *_autohideTapRecognizer;	// 64 = 0x40
    UITapGestureRecognizer *_doubleTapRecognizer;	// 72 = 0x48
    id <NSObject> _autohidePresenceObserverToken;	// 80 = 0x50
    MapsTokenStorage *_forcedAutohideTokens;	// 88 = 0x58
    MapsTokenStorage *_modernMapTokens;	// 96 = 0x60
    id _usingOfflineDataModernMapToken;	// 104 = 0x68
    NSTimer *_navigationObscuredTimeout;	// 112 = 0x70
    _Bool _isCurrentlyVisible;	// 120 = 0x78
    _Bool _mapViewRegionIsChanging;	// 121 = 0x79
    _Bool _configuringMapView;	// 122 = 0x7a
    _Bool _didSetupOverlayConstraints;	// 123 = 0x7b
    id _visibilityDeactivationToken;	// 128 = 0x80
    CarAlertViewController *_currentAlertViewController;	// 136 = 0x88
    NSMutableArray *_alertDismissalBlocks;	// 144 = 0x90
    PersonalizedItemManager *_personalizedItemManager;	// 152 = 0x98
    CustomPOIsController *_customPOIsController;	// 160 = 0xa0
    id <CarChromeContext> _restoreFocusForContext;	// 168 = 0xa8
    _Bool _ownsFocus;	// 176 = 0xb0
    CarFocusContainerGuideController *_focusContainerGuideController;	// 184 = 0xb8
    InterruptionManager *_interruptionManager;	// 192 = 0xc0
    NSLayoutConstraint *_headingUpMapInsetAdjustmentConstraint;	// 200 = 0xc8
    CDStruct_b7cb895d _mapViewRegion;	// 208 = 0xd0
    double _zoomLevel;	// 240 = 0xf0
    _Bool _haveVehicleDirection;	// 248 = 0xf8
    long long _sceneType;	// 256 = 0x100
    CarRouteGeniusAnnotationsManager *_routeGeniusAnnotationsManager;	// 264 = 0x108
    ChromeMapSettings *_defaultMapSettings;	// 272 = 0x110
    CarMapNudgerizer *_nudgerizer;	// 280 = 0x118
    UILayoutGuide *_notificationLayoutGuide;	// 288 = 0x120
    UILayoutGuide *_cardsLayoutGuide;	// 296 = 0x128
    UILayoutGuide *_statusBannerLayoutGuide;	// 304 = 0x130
    UILayoutGuide *_accessoriesCompactLayoutGuide;	// 312 = 0x138
    CarCardsOverlay *_cardsOverlay;	// 320 = 0x140
    CarAccessoriesOverlay *_accessoriesOverlay;	// 328 = 0x148
    CarMapControlsOverlay *_mapControlsOverlay;	// 336 = 0x150
    CarStatusBannerOverlay *_statusBannerOverlay;	// 344 = 0x158
    MapViewResponder *_mapViewResponder;	// 352 = 0x160
    CarRouteSelectionController *_routeSelectionController;	// 360 = 0x168
    UITapGestureRecognizer *_backButtonRecognizer;	// 368 = 0x170
    CDUnknownBlockType _doubleTapBlock;	// 376 = 0x178
    NSMapTable *_chromeItemsByContext;	// 384 = 0x180
    NSMapTable *_lastFocusedIdentifiersByContext;	// 392 = 0x188
    NSMapTable *_lastFocusedItemsByContext;	// 400 = 0x190
}

+ (void)_updateAllowOneHandedZooming;	// IMP=0x00200000001a7a15
+ (_Bool)allowOneHandedZooming;	// IMP=0x00100000001a7a09
+ (Class)userLocationViewClass;	// IMP=0x00100000001a4f0f
+ (id)localizedLocationAuthorizationMessage;	// IMP=0x001000000019d026
+ (id)localizedLocationAuthorizationTitle;	// IMP=0x001000000019cf33
+ (void)initialize;	// IMP=0x001000000019cead
- (void).cxx_destruct;	// IMP=0x00200000001b33c8
@property(retain, nonatomic) NSMapTable *lastFocusedItemsByContext; // @synthesize lastFocusedItemsByContext=_lastFocusedItemsByContext;
@property(retain, nonatomic) NSMapTable *lastFocusedIdentifiersByContext; // @synthesize lastFocusedIdentifiersByContext=_lastFocusedIdentifiersByContext;
@property(retain, nonatomic) NSMapTable *chromeItemsByContext; // @synthesize chromeItemsByContext=_chromeItemsByContext;
@property(copy, nonatomic) CDUnknownBlockType doubleTapBlock; // @synthesize doubleTapBlock=_doubleTapBlock;
@property(retain, nonatomic) UITapGestureRecognizer *backButtonRecognizer; // @synthesize backButtonRecognizer=_backButtonRecognizer;
@property(retain, nonatomic) CarRouteSelectionController *routeSelectionController; // @synthesize routeSelectionController=_routeSelectionController;
@property(retain, nonatomic) MapViewResponder *mapViewResponder; // @synthesize mapViewResponder=_mapViewResponder;
@property(nonatomic) _Bool haveVehicleDirection; // @synthesize haveVehicleDirection=_haveVehicleDirection;
@property(retain, nonatomic) CarStatusBannerOverlay *statusBannerOverlay; // @synthesize statusBannerOverlay=_statusBannerOverlay;
@property(retain, nonatomic) CarMapControlsOverlay *mapControlsOverlay; // @synthesize mapControlsOverlay=_mapControlsOverlay;
@property(retain, nonatomic) CarAccessoriesOverlay *accessoriesOverlay; // @synthesize accessoriesOverlay=_accessoriesOverlay;
@property(retain, nonatomic) CarCardsOverlay *cardsOverlay; // @synthesize cardsOverlay=_cardsOverlay;
@property(retain, nonatomic) UILayoutGuide *accessoriesCompactLayoutGuide; // @synthesize accessoriesCompactLayoutGuide=_accessoriesCompactLayoutGuide;
@property(retain, nonatomic) UILayoutGuide *statusBannerLayoutGuide; // @synthesize statusBannerLayoutGuide=_statusBannerLayoutGuide;
@property(retain, nonatomic) UILayoutGuide *cardsLayoutGuide; // @synthesize cardsLayoutGuide=_cardsLayoutGuide;
@property(retain, nonatomic) UILayoutGuide *notificationLayoutGuide; // @synthesize notificationLayoutGuide=_notificationLayoutGuide;
@property(retain, nonatomic) CarMapNudgerizer *nudgerizer; // @synthesize nudgerizer=_nudgerizer;
@property(retain, nonatomic) ChromeMapSettings *defaultMapSettings; // @synthesize defaultMapSettings=_defaultMapSettings;
@property(retain, nonatomic) CarRouteGeniusAnnotationsManager *routeGeniusAnnotationsManager; // @synthesize routeGeniusAnnotationsManager=_routeGeniusAnnotationsManager;
@property(readonly, nonatomic) long long sceneType; // @synthesize sceneType=_sceneType;
- (_Bool)isEligibleForMapViewFrameRateLimiting;	// IMP=0x00100000001b318a
- (CDStruct_8ce276cf)lowPowerModeRateLimitEnabledConfigKey;	// IMP=0x00100000001b3177
- (CDStruct_8ce276cf)batteryLevelRateLimitEnabledConfigKey;	// IMP=0x00100000001b3164
- (CDStruct_8ce276cf)thermalRateLimitsConfigKey;	// IMP=0x00100000001b3151
- (void)searchPinsManager:(id)arg1 displayPlaceCardForResult:(id)arg2;	// IMP=0x00100000001b314b
- (void)_handleBackButton;	// IMP=0x00100000001b2dfe
- (void)_handleBackButtonPressed:(id)arg1;	// IMP=0x00100000001b2dec
- (id)_previousContext;	// IMP=0x00100000001b2d10
- (void)updateHardwareBackButtonBehavior;	// IMP=0x00100000001b2b8e
- (void)setHardwareBackButtonBehavior:(long long)arg1 forContext:(id)arg2;	// IMP=0x00100000001b29e5
- (void)decrementForToken:(id)arg1;	// IMP=0x00100000001b266a
- (void)incrementForToken:(id)arg1;	// IMP=0x00100000001b2202
- (id)acquireForcedAutohideBehaviourTokenWithBehaviour:(long long)arg1;	// IMP=0x00100000001b2126
- (long long);	// IMP=0x00100000001b1fc5
@property(readonly, nonatomic) _Bool isForcingAutohideBehavior;
- (void)_removeAutohideGestureRecognizer;	// IMP=0x00100000001b1f03
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;	// IMP=0x00100000001b1e52
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x00100000001b1e4a
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x00100000001b1ccd
- (void)_addAutohideGestureRecognizer;	// IMP=0x00100000001b1927
- (void)_stopAutohideIdleTimer;	// IMP=0x00100000001b18e5
- (void)_restartAutohideIdleTimer;	// IMP=0x00100000001b174b
- (void)restartAutohideIdleTimerIfStarted;	// IMP=0x00100000001b170e
- (void)_startAutohideIdleTimerIfStopped;	// IMP=0x00100000001b16ec
- (_Bool)_areAccessoriesHiddenForContext:(id)arg1;	// IMP=0x00100000001b164b
- (_Bool)_areAccessoriesHiddenForCurrentContext;	// IMP=0x00100000001b15fa
- (_Bool)isAutohidingContentHiddenForContext:(id)arg1;	// IMP=0x00100000001b15a1
@property(nonatomic, getter=isAutohidingContentHiddenForCurrentContext) _Bool autohidingContentHiddenForCurrentContext;
- (void)interruptAutohideForIncidentalInteraction;	// IMP=0x00100000001b0f32
- (void)_humanPresenceDidChange;	// IMP=0x00100000001b0e0a
- (void)_autohideGestureRecognizerDetectedTap:(id)arg1;	// IMP=0x00100000001b0c0e
- (void)_autohideBecameIdle;	// IMP=0x00100000001b0b1c
- (void)_updateAutohideBehavior;	// IMP=0x00100000001b0837
- (void)_setAutohideBehavior:(long long)arg1 forContext:(id)arg2;	// IMP=0x00100000001b0603
- (long long)_autohidingBehaviorForContext:(id)arg1;	// IMP=0x00100000001b0566
- (void)_recordAutohidingContentIsHidden:(_Bool)arg1 forContext:(id)arg2;	// IMP=0x00100000001b02f3
- (_Bool)_autohidingContentIsHiddenForContext:(id)arg1;	// IMP=0x00100000001b02ad
- (void)_requestAutohideBehaviorForContext:(id)arg1;	// IMP=0x00100000001b0229
- (void)setNeedsAutohideBehaviorUpdateForContext:(id)arg1;	// IMP=0x00100000001b01b3
- (void)carCardView:(id)arg1 didChangeFocus:(_Bool)arg2;	// IMP=0x00100000001aff44
- (void)carCardView:(id)arg1 chevronButtonSelected:(id)arg2;	// IMP=0x00100000001afcbc
- (void)carCardViewCloseButtonTapped:(id)arg1;	// IMP=0x00100000001af847
- (void)_reloadCardsAnimated:(_Bool)arg1;	// IMP=0x00100000001aee77
- (void)_reloadCardOverlayConstraintsIfNeeded;	// IMP=0x00100000001ae5ef
- (void)_updateCardsForContext:(id)arg1 withAnimation:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001ade6e
- (void)updateCardsForContext:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001ade55
- (void)updateCardsForContext:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00100000001ade3c
- (id)_desiredCards;	// IMP=0x00100000001add7d
- (_Bool)canShowCards;	// IMP=0x00100000001add75
- (void)captureUserActionSelectedSearchCategory:(id)arg1 categoriesDisplayed:(id)arg2;	// IMP=0x00100000001adca9
- (void)captureUserActionPannedInDirection:(long long)arg1;	// IMP=0x00100000001adc80
- (void)captureUserActionChangedTrackingMode:(long long)arg1;	// IMP=0x00100000001adc5c
- (void)captureUserAction:(int)arg1 selectedRouteIndex:(int)arg2;	// IMP=0x00100000001adbc0
- (void)captureUserAction:(int)arg1 mapItem:(id)arg2 atResultIndex:(int)arg3;	// IMP=0x00100000001adaf5
- (void)captureUserAction:(int)arg1 mapItem:(id)arg2;	// IMP=0x00100000001adadd
- (void)captureUserAction:(int)arg1 eventValue:(id)arg2;	// IMP=0x00100000001ada7c
- (void)captureUserAction:(int)arg1;	// IMP=0x00100000001ada68
- (void)captureUserAction:(int)arg1 onTarget:(int)arg2 eventValue:(id)arg3;	// IMP=0x00100000001ad9ec
- (void)captureUserAction:(int)arg1 onTarget:(int)arg2;	// IMP=0x00100000001ad9d7
- (void)_captureUserActionBackToContext:(id)arg1;	// IMP=0x00100000001ad8cf
- (int)_currentUsageTarget;	// IMP=0x00100000001ad839
- (id)_userActionDetailsWithMapItem:(id)arg1 resultIndex:(int)arg2;	// IMP=0x00100000001ad81d
- (unsigned long long)desiredRadarScreenshotTypes;	// IMP=0x00100000001ad7a1
- (void)carStatusBannerDidTapBanner;	// IMP=0x00100000001ad695
- (void)_enableZoomGesture:(_Bool)arg1;	// IMP=0x00100000001ad402
- (void)updateZoomControls;	// IMP=0x00100000001ad31c
- (void)_updateRouteSelectionController;	// IMP=0x00100000001ad21a
- (void)_updateNudgerizer;	// IMP=0x00100000001ad14e
- (void)_updateCameraToggleButton;	// IMP=0x00100000001ace6d
- (void)_update3DButton;	// IMP=0x00100000001acced
- (void)_reportIncidentPressed;	// IMP=0x00100000001acc95
- (void)_toggleCameraPressed;	// IMP=0x00100000001acb97
- (void)_toggle3DButtonPressed;	// IMP=0x00100000001ac97f
- (void)zoomOut;	// IMP=0x00100000001ac76f
- (void)zoomOutButtonPressed;	// IMP=0x00100000001ac6f3
- (void)zoomIn;	// IMP=0x00100000001ac4e3
- (void)zoomInButtonPressed;	// IMP=0x00100000001ac467
- (void)panButtonPressed;	// IMP=0x00100000001ac414
- (void)_navRecenterButtonPressed;	// IMP=0x00100000001ac3bd
- (void)carMapControls:(id)arg1 didTriggerAction:(unsigned long long)arg2;	// IMP=0x00100000001ac36c
- (void)_reloadMapControlsInsetsForContext:(id)arg1;	// IMP=0x00100000001ac1e3
- (void)_reloadMapControlsForContext:(id)arg1 withAnimation:(id)arg2;	// IMP=0x00100000001abb99
- (void)_updateAudioControls;	// IMP=0x00100000001ab566
- (_Bool)_hideStatusBanner;	// IMP=0x00100000001ab47c
- (void)_reloadStatusBannerWithAnimation:(id)arg1;	// IMP=0x00100000001ab1e6
- (void)reloadStatusBannerAnimated:(_Bool)arg1;	// IMP=0x00100000001ab186
- (void)_reloadAccessoriesInsetsForContext:(id)arg1;	// IMP=0x00100000001ab065
- (void)_reloadAccessoriesForContext:(id)arg1 withAnimation:(id)arg2;	// IMP=0x00100000001aad8e
- (void)reloadAccessoriesForContext:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00100000001aad04
- (void)configureAccessoriesOverlay:(id)arg1 forContext:(id)arg2;	// IMP=0x00100000001aac0e
- (void)_reloadFocusContainerGuidesForContext:(id)arg1;	// IMP=0x00100000001aa938
@property(readonly, copy, nonatomic, getter=_linearFocusMovementSequences) NSArray *linearFocusMovementSequences;
@property(readonly, copy, nonatomic) NSArray *preferredFocusEnvironments;
- (_Bool)shouldUpdateFocusInContext:(id)arg1;	// IMP=0x00100000001a9907
- (_Bool)_isFocusMovementValidInContext:(id)arg1;	// IMP=0x00100000001a8e84
- (void)setOwnsFocus:(_Bool)arg1;	// IMP=0x00100000001a8c24
- (void)_preserveFocusedItemFromContext:(id)arg1 toContext:(id)arg2;	// IMP=0x00100000001a89b4
@property(readonly, nonatomic) CarFocusOrderEnvironment *environmentRepresentingAlternateRoutes;
@property(readonly, nonatomic) CarFocusOrderEnvironment *environmentRepresentingOverlays;
@property(readonly, nonatomic) CarFocusOrderEnvironment *environmentRepresentingMapControls;
@property(readonly, nonatomic) CarFocusOrderItem *itemRepresentingStatusBanner;
@property(readonly, nonatomic) CarFocusOrderItem *itemRepresentingAlternateRoutes;
@property(readonly, nonatomic) CarFocusOrderItem *itemRepresentingOverlays;
@property(readonly, nonatomic) CarFocusOrderItem *itemRepresentingMapControls;
@property(readonly, nonatomic) id visuallySelectedItem;
@property(readonly, nonatomic) _Bool suppressIdleFocus;
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x00100000001a85c7
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x00100000001a83ab
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;	// IMP=0x00100000001a821f
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x00100000001a8093
- (_Bool)_nudgeHandlesPress:(id)arg1;	// IMP=0x00100000001a8076
@property(readonly, nonatomic) _Bool _shouldAllowKnobFocusMovement;
- (void)setNeedsFocusUpdateIfUnfocused;	// IMP=0x00100000001a7e28
- (void)disableDoubleTapRecognizer;	// IMP=0x00100000001a7d70
- (void)enableDoubleTapRecognizerWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000001a7bb6
- (void)_handleDoubleTap:(id)arg1;	// IMP=0x00100000001a7af2
- (void)_carOneHandedZoomSettingUpdated:(id)arg1;	// IMP=0x00100000001a7ad8
- (_Bool)_canSelectAlternateRoutes;	// IMP=0x00100000001a7977
- (void)chromeNavigationDisplayDidRenderRoute:(id)arg1;	// IMP=0x00100000001a7931
- (void)chromeNavigationDisplay:(id)arg1 didChangePanning:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x00100000001a78e0
- (void)chromeNavigationDisplay:(id)arg1 configurationDidChange:(id)arg2;	// IMP=0x00100000001a789f
- (void)_navigationObscuredTimeoutFired:(id)arg1;	// IMP=0x00100000001a77d9
- (void)_stopNavigationObscuredTimeout;	// IMP=0x00100000001a7737
- (void)_restartNavigationObscuredTimeout;	// IMP=0x00100000001a7715
- (void)_startNavigationObscuredTimeout;	// IMP=0x00100000001a75cb
- (_Bool)wantsNavigationDisplayByDefault;	// IMP=0x00100000001a755a
- (_Bool)isDisplayingNavigation;	// IMP=0x00100000001a74b3
- (void)_updateOfflineModernMapToken;	// IMP=0x00100000001a7403
- (void)offlineStateChanged:(id)arg1;	// IMP=0x00100000001a73d0
- (id)acquireModernMapTokenForReason:(unsigned long long)arg1;	// IMP=0x00100000001a72f4
- (void)_updateModernMapCartographicConfiguration;	// IMP=0x00100000001a70fb
@property(readonly, nonatomic) long long modernMapProjectionType;
@property(readonly, nonatomic) long long modernMapTerrainMode;
@property(readonly, nonatomic) _Bool shouldUseModernMap;
- (void)clearMapGesturesAndAnimations;	// IMP=0x00100000001a7038
- (void)_locationAuthorizationDidChange:(id)arg1;	// IMP=0x00100000001a6e47
- (void)mapView:(id)arg1 didChangeUserTrackingMode:(long long)arg2 animated:(_Bool)arg3 fromTrackingButton:(_Bool)arg4;	// IMP=0x00100000001a6e35
- (void)mapViewNavigationCameraHasStoppedPanning:(id)arg1;	// IMP=0x00100000001a6d70
- (void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(_Bool)arg2;	// IMP=0x00100000001a6c88
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;	// IMP=0x00100000001a6b9d
- (void)mapView:(id)arg1 canEnter3DModeDidChange:(_Bool)arg2;	// IMP=0x00100000001a6b5c
- (void)mapView:(id)arg1 didBecomePitched:(_Bool)arg2;	// IMP=0x00100000001a6aca
- (void)mapView:(id)arg1 didStopRespondingToGesture:(long long)arg2 zoomDirection:(long long)arg3 zoomGestureType:(long long)arg4 didDecelerate:(_Bool)arg5 tiltDirection:(long long)arg6;	// IMP=0x00100000001a69fe
- (void)mapView:(id)arg1 canZoomOutDidChange:(_Bool)arg2;	// IMP=0x00100000001a6966
- (void)mapView:(id)arg1 canZoomInDidChange:(_Bool)arg2;	// IMP=0x00100000001a68ce
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;	// IMP=0x00100000001a6550
- (void)mapView:(id)arg1 didDeselectLabelMarker:(id)arg2;	// IMP=0x00100000001a6463
- (void)mapView:(id)arg1 didSelectLabelMarker:(id)arg2;	// IMP=0x00100000001a625e
- (_Bool)mapView:(id)arg1 shouldSelectLabelMarker:(id)arg2;	// IMP=0x00100000001a60dd
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;	// IMP=0x00100000001a5ec8
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2;	// IMP=0x00100000001a5d37
- (_Bool)shouldRecenterAndZoom;	// IMP=0x00100000001a5c9e
- (void)mapSettings:(id)arg1 didApplyAnimated:(_Bool)arg2;	// IMP=0x00100000001a5c8c
- (void)mapSettings:(id)arg1 willApplyAnimated:(_Bool)arg2;	// IMP=0x00100000001a5c7a
- (double)mapInsetsUpdateAnimationDuration;	// IMP=0x00100000001a5c6c
- (_Bool)mapSettings:(id)arg1 shouldApplyAnimated:(_Bool *)arg2;	// IMP=0x00100000001a5b2d
- (void)updateComponent:(id)arg1 forTiming:(unsigned long long)arg2 withAnimation:(id)arg3;	// IMP=0x00100000001a5839
- (void)willUpdateComponents:(id)arg1 withAnimation:(id)arg2;	// IMP=0x00100000001a56fa
- (id)allComponents;	// IMP=0x00100000001a55fe
- (_Bool)shouldAnimateMapTransition:(_Bool)arg1;	// IMP=0x00100000001a5555
- (void)prepareMapViewForFirstUse;	// IMP=0x00100000001a505f
- (void)_resetMapViewDefaults:(id)arg1;	// IMP=0x00100000001a4f20
- (void)_performMapUpdateToUserInterfaceStyle:(long long)arg1 animation:(id)arg2;	// IMP=0x00100000001a450d
- (void)_updateMapUserInterfaceStyle:(long long)arg1 animated:(_Bool)arg2;	// IMP=0x00100000001a4032
- (void)_updateMapToCurrentUserInterfaceStyleAnimated:(_Bool)arg1;	// IMP=0x00100000001a3fd6
- (void)lightLevelController:(id)arg1 didUpdateLightLevel:(long long)arg2;	// IMP=0x00100000001a3fbf
- (void)_carPlayWindowMapStyleDidChange:(id)arg1;	// IMP=0x00100000001a36b0
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x00100000001a3319
- (void)_presentAnyPendingAlert:(_Bool)arg1;	// IMP=0x00100000001a3042
- (void)_dismissAlertViewController:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00100000001a29bf
- (void)_presentAlertViewController:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00100000001a23f1
- (CDUnknownBlockType)_presentSearchRefinementWithUserInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001a1f44
- (CDUnknownBlockType)presentInterruptionOfKind:(long long)arg1 userInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001a06c6
- (_Bool)dismissCurrentInterruptionOfKind:(long long)arg1;	// IMP=0x00100000001a0675
- (void)dismissInterruption;	// IMP=0x00100000001a0656
- (void)_carExternalDeviceStateUpdated:(id)arg1;	// IMP=0x00100000001a0571
- (id)chromeViewItemForContext:(id)arg1 createIfNeeded:(_Bool)arg2;	// IMP=0x00100000001a047d
@property(readonly, nonatomic) id <CarChromeContext> topContext;
- (void)contextStackDidUpdateFrom:(id)arg1 to:(id)arg2 withAnimation:(id)arg3;	// IMP=0x001000000019f805
- (void)contextStackWillUpdateFrom:(id)arg1 to:(id)arg2 withAnimation:(id)arg3;	// IMP=0x001000000019f5ec
- (_Bool)_shouldMapControlsModifyMapInsetsForContext:(id)arg1;	// IMP=0x001000000019f3af
- (_Bool)_shouldAccessoriesModifyMapInsetsForContext:(id)arg1;	// IMP=0x001000000019f34b
- (void)viewDidLayoutSubviews;	// IMP=0x001000000019f26e
- (void)viewDidDisappear:(_Bool)arg1;	// IMP=0x001000000019f1e9
- (void)viewWillDisappear:(_Bool)arg1;	// IMP=0x001000000019f1a8
- (void)viewDidAppear:(_Bool)arg1;	// IMP=0x001000000019f0da
- (void)viewWillAppear:(_Bool)arg1;	// IMP=0x001000000019f044
- (void)viewDidLoad;	// IMP=0x001000000019e805
- (id)mapReplacementColor;	// IMP=0x001000000019e724
- (void)loadView;	// IMP=0x001000000019e65d
@property(readonly, nonatomic) ChromeMapSettings *transientMapSettings;
- (id)createMapReplacementView;	// IMP=0x001000000019e007
- (id)createMapView;	// IMP=0x001000000019df2f
- (_Bool)removesMapViewWhenInactive;	// IMP=0x001000000019df18
- (void)didBecomeInactive:(_Bool)arg1;	// IMP=0x001000000019dca8
- (void)deactivationReasonsDidChange;	// IMP=0x001000000019dbd2
- (void)didUnsuppress;	// IMP=0x001000000019d89e
- (void)didSuppress;	// IMP=0x001000000019d64c
- (id)currentTraits;	// IMP=0x001000000019d4e8
- (id)initWithSceneType:(long long)arg1;	// IMP=0x001000000019d261
- (void)dealloc;	// IMP=0x001000000019d116

// Remaining properties
@property(nonatomic) _Bool areChildrenFocused;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=_isEligibleForFocusInteraction) _Bool eligibleForFocusInteraction;
@property(readonly, nonatomic, getter=_isEligibleForFocusOcclusion) _Bool eligibleForFocusOcclusion;
@property(readonly, copy, nonatomic) NSString *focusGroupIdentifier;
@property(readonly, nonatomic) id <UIFocusItemContainer> focusItemContainer;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) __weak id <UIFocusEnvironment> parentFocusEnvironment;
@property(readonly, nonatomic) UIView *passThroughView;
@property(readonly, nonatomic, getter=_preferredFocusMovementStyle) long long preferredFocusMovementStyle;
@property(readonly, nonatomic) __weak UIView *preferredFocusedView;
@property(readonly) Class superclass;

@end

