//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIViewController.h>

@class CarArrivedGuidanceSign, CarDynamicBlurView, CarLoadingGuidanceSign, CarNavigationGuidanceSign, CarReroutingGuidanceSign, NSArray, NSString, NSTimer, NSUUID, NavJunctionViewInfo, NavSignLaneGuidanceInfo, NavSignManeuverGuidanceInfo, UIView;
@protocol CarGuidanceCard, CarGuidanceCardInteractionDelegate, CarGuidanceCardSizeProviding;

@interface CarGuidanceCardViewController : UIViewController
{
    NSTimer *_junctionViewRestoreTimer;	// 8 = 0x8
    NSTimer *_reloadTimer;	// 16 = 0x10
    _Bool _reloadAnimated;	// 24 = 0x18
    _Bool _reloading;	// 25 = 0x19
    _Bool _pendingReload;	// 26 = 0x1a
    CarDynamicBlurView *_dynamicBlurView;	// 32 = 0x20
    NavSignManeuverGuidanceInfo *_previousPrimaryGuidance;	// 40 = 0x28
    NavSignManeuverGuidanceInfo *_previousSecondaryGuidance;	// 48 = 0x30
    NavSignLaneGuidanceInfo *_previousLaneInfo;	// 56 = 0x38
    double _loggedDistanceToManeuver;	// 64 = 0x40
    unsigned long long _loggedManeuverStep;	// 72 = 0x48
    _Bool _transitioning;	// 80 = 0x50
    _Bool _hasGuidance;	// 81 = 0x51
    _Bool _isRerouting;	// 82 = 0x52
    long long _navigationGuidanceSignStyle;	// 88 = 0x58
    unsigned long long _cardState;	// 96 = 0x60
    UIView<CarGuidanceCard> *_currentSign;	// 104 = 0x68
    CarNavigationGuidanceSign *_fullGuidanceSign;	// 112 = 0x70
    CarNavigationGuidanceSign *_miniGuidanceSign;	// 120 = 0x78
    CarArrivedGuidanceSign *_arrivalOverlaySign;	// 128 = 0x80
    CarReroutingGuidanceSign *_reroutingOverlaySign;	// 136 = 0x88
    CarLoadingGuidanceSign *_loadingOverlaySign;	// 144 = 0x90
    NavSignManeuverGuidanceInfo *_primaryGuidance;	// 152 = 0x98
    NavSignManeuverGuidanceInfo *_secondaryGuidance;	// 160 = 0xa0
    NavSignLaneGuidanceInfo *_laneGuidanceInfo;	// 168 = 0xa8
    NavJunctionViewInfo *_junctionViewInfo;	// 176 = 0xb0
    unsigned long long _arrivalState;	// 184 = 0xb8
    NSUUID *_proceedToRouteSignID;	// 192 = 0xc0
    unsigned long long _destination;	// 200 = 0xc8
    id <CarGuidanceCardSizeProviding> _guidanceCardSizeProvider;	// 208 = 0xd0
    id <CarGuidanceCardInteractionDelegate> _interactionDelegate;	// 216 = 0xd8
    struct CGSize _availableCardSize;	// 224 = 0xe0
}

- (void).cxx_destruct;	// IMP=0x002000000021ce33
@property(nonatomic) __weak id <CarGuidanceCardInteractionDelegate> interactionDelegate; // @synthesize interactionDelegate=_interactionDelegate;
@property(nonatomic) __weak id <CarGuidanceCardSizeProviding> guidanceCardSizeProvider; // @synthesize guidanceCardSizeProvider=_guidanceCardSizeProvider;
@property(nonatomic) unsigned long long destination; // @synthesize destination=_destination;
@property(retain, nonatomic) NSUUID *proceedToRouteSignID; // @synthesize proceedToRouteSignID=_proceedToRouteSignID;
@property(nonatomic) unsigned long long arrivalState; // @synthesize arrivalState=_arrivalState;
@property(retain, nonatomic) NavJunctionViewInfo *junctionViewInfo; // @synthesize junctionViewInfo=_junctionViewInfo;
@property(retain, nonatomic) NavSignLaneGuidanceInfo *laneGuidanceInfo; // @synthesize laneGuidanceInfo=_laneGuidanceInfo;
@property(retain, nonatomic) NavSignManeuverGuidanceInfo *secondaryGuidance; // @synthesize secondaryGuidance=_secondaryGuidance;
@property(retain, nonatomic) NavSignManeuverGuidanceInfo *primaryGuidance; // @synthesize primaryGuidance=_primaryGuidance;
@property(nonatomic) _Bool isRerouting; // @synthesize isRerouting=_isRerouting;
@property(nonatomic) _Bool hasGuidance; // @synthesize hasGuidance=_hasGuidance;
@property(retain, nonatomic) CarLoadingGuidanceSign *loadingOverlaySign; // @synthesize loadingOverlaySign=_loadingOverlaySign;
@property(retain, nonatomic) CarReroutingGuidanceSign *reroutingOverlaySign; // @synthesize reroutingOverlaySign=_reroutingOverlaySign;
@property(retain, nonatomic) CarArrivedGuidanceSign *arrivalOverlaySign; // @synthesize arrivalOverlaySign=_arrivalOverlaySign;
@property(retain, nonatomic) CarNavigationGuidanceSign *miniGuidanceSign; // @synthesize miniGuidanceSign=_miniGuidanceSign;
@property(retain, nonatomic) CarNavigationGuidanceSign *fullGuidanceSign; // @synthesize fullGuidanceSign=_fullGuidanceSign;
@property(retain, nonatomic) UIView<CarGuidanceCard> *currentSign; // @synthesize currentSign=_currentSign;
@property(nonatomic) unsigned long long cardState; // @synthesize cardState=_cardState;
@property(nonatomic) long long navigationGuidanceSignStyle; // @synthesize navigationGuidanceSignStyle=_navigationGuidanceSignStyle;
@property(nonatomic) struct CGSize availableCardSize; // @synthesize availableCardSize=_availableCardSize;
@property(nonatomic, getter=isTransitioning) _Bool transitioning; // @synthesize transitioning=_transitioning;
- (void)_updateSignLayout;	// IMP=0x001000000021cb9d
- (void)dynamicBlurViewDidChangeBlurMode:(int)arg1;	// IMP=0x001000000021cb15
@property(readonly, nonatomic) NSArray *focusOrderSubItems;
- (id)backgroundViewForCarCardLayout:(CDStruct_de0926f2)arg1 scale:(double)arg2 userInterfaceStyle:(long long)arg3;	// IMP=0x001000000021caf3
@property(readonly, nonatomic) unsigned long long maneuverViewLayoutType;
@property(readonly, nonatomic) struct CGSize availableSize;
- (void)showManeuverAlertForAnnouncementStage:(unsigned long long)arg1;	// IMP=0x001000000021c3cc
- (void)showProceedingToRouteDistance:(double)arg1 displayString:(id)arg2 forStep:(id)arg3;	// IMP=0x001000000021c05e
- (void)setTimeToManeuver:(double)arg1 distanceToManeuver:(double)arg2 distanceText:(id)arg3 forStep:(id)arg4 atStepIndex:(unsigned long long)arg5;	// IMP=0x001000000021bed5
- (void)setETA:(id)arg1;	// IMP=0x001000000021becf
- (void)_showRecalculatingWithDataConnectionFailedMessage:(_Bool)arg1;	// IMP=0x001000000021be68
- (void)showRecalculationFailed;	// IMP=0x001000000021bc79
- (void)didReroute;	// IMP=0x001000000021ba9e
- (void)hideRecalculating;	// IMP=0x001000000021b8c3
- (void)showRecalculating;	// IMP=0x001000000021b4c4
- (void)setDestinationDisplayName:(id)arg1;	// IMP=0x001000000021b0b8
- (void)updateArrivalState:(unsigned long long)arg1;	// IMP=0x001000000021ae6d
- (void)showNoGuidance;	// IMP=0x001000000021ae2c
- (void)hideJunctionView;	// IMP=0x001000000021adc9
- (void)presentJunctionViewInfo:(id)arg1;	// IMP=0x001000000021ad96
- (void)showJunctionView:(id)arg1;	// IMP=0x001000000021ad13
- (void)hideLaneGuidance;	// IMP=0x001000000021acb0
- (void)showLaneGuidance:(id)arg1;	// IMP=0x001000000021ac15
- (void)updateLaneGuidance:(id)arg1;	// IMP=0x001000000021ac03
- (id)currentLaneGuidanceId;	// IMP=0x001000000021abb3
- (void)hideSecondaryManeuver;	// IMP=0x001000000021a8f9
- (void)showSecondaryManeuverSign:(id)arg1;	// IMP=0x001000000021a634
- (void)showManeuverSign:(id)arg1 maneuverStepIndex:(unsigned long long)arg2;	// IMP=0x00100000002198ca
- (void)_guidanceWasUpdated;	// IMP=0x00100000002195f2
- (void)showTemporarilyHiddenJunctionViewAnimated:(_Bool)arg1;	// IMP=0x001000000021937a
- (void)temporarilyHideJunctionViewForSeconds:(double)arg1 animated:(_Bool)arg2;	// IMP=0x00100000002191e0
- (void)handleUserSelectionAtPoint:(struct CGPoint)arg1;	// IMP=0x0010000000218c24
- (void)_reload;	// IMP=0x001000000021896f
- (void)_scheduleReloadAnimated:(_Bool)arg1;	// IMP=0x0010000000218622
- (void)_swapDisplayedSignIfNeeded;	// IMP=0x0010000000218311
- (void)setCardState:(unsigned long long)arg1 animated:(_Bool)arg2;	// IMP=0x0010000000217ede
- (void)_updateCardState;	// IMP=0x001000000021769c
- (void)setNavigationGuidanceSignStyle:(long long)arg1 userInitiated:(_Bool)arg2;	// IMP=0x001000000021760e
- (void)viewDidLayoutSubviews;	// IMP=0x0010000000216f27
- (void)viewDidLoad;	// IMP=0x0010000000216e48
- (id)initWithDestination:(unsigned long long)arg1 guidanceCardSizeProvider:(id)arg2 interactionDelegate:(id)arg3;	// IMP=0x0010000000216d0a
- (void)dealloc;	// IMP=0x0010000000216ca1

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isGuidanceEnabled) _Bool guidanceEnabled;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSArray *preferredFocusEnvironments;
@property(readonly) Class superclass;

@end

