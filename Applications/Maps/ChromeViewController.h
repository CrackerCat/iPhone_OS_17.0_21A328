//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIViewController.h>

@class ChromeContextCoordinationScheduler, ChromeMapSelectionDelegateProxy, ChromeMapViewDelegateProxy, ChromeNavigationDisplay, ChromeNavigationDisplayDelegateProxy, ChromeOverlayController, CustomPOIsController, CustomSearchManager, DebugFramesView, GEOMapServiceTraits, GEOObserverHashTable, GroupAnimation, MISSING_TYPE, MKMapView, MapCameraController, MapSelectionManager, MapsEdgeConstraints, MapsThermalPressureController, MapsTokenStorage, NSArray, NSDate, NSDictionary, NSMapTable, NSMutableDictionary, NSMutableSet, NSString, NSTimer, PersonalizedItemManager, RouteAnnotationsController, SearchPinsManager, UILayoutGuide, UIView, UserLocationView, WatermarkView;
@protocol BatteryMonitorToken, ChromeContext;

@interface ChromeViewController : UIViewController
{
    _Bool _debugLayoutGuides;	// 8 = 0x8
    UserLocationView *_userLocationView;	// 16 = 0x10
    ChromeMapViewDelegateProxy *_mapViewDelegateProxy;	// 24 = 0x18
    ChromeMapSelectionDelegateProxy *_mapSelectionDelegateProxy;	// 32 = 0x20
    ChromeNavigationDisplayDelegateProxy *_navigationDisplayDelegateProxy;	// 40 = 0x28
    MapsThermalPressureController *_thermalPressureController;	// 48 = 0x30
    id <ChromeContext> _previousTopContext;	// 56 = 0x38
    NSArray *_pendingContexts;	// 64 = 0x40
    NSMapTable *_contextsByUniqueIdentifier;	// 72 = 0x48
    ChromeContextCoordinationScheduler *_contextCoordinatedScheduler;	// 80 = 0x50
    NSMapTable *_deferredActionsByContext;	// 88 = 0x58
    GEOObserverHashTable *_stackObservers;	// 96 = 0x60
    GroupAnimation *_suppressionAnimation;	// 104 = 0x68
    NSTimer *_scheduledComponentUpdateTimer;	// 112 = 0x70
    NSMutableDictionary *_componentsNeedingUpdate;	// 120 = 0x78
    NSMutableSet *_componentsBeingUpdated;	// 128 = 0x80
    _Bool _componentUpdateIsAnimated;	// 136 = 0x88
    UIViewController *_fullscreenViewController;	// 144 = 0x90
    struct UIEdgeInsets _labelEdgeInsets;	// 152 = 0x98
    struct UIEdgeInsets _labelEdgeWidths;	// 184 = 0xb8
    MapsEdgeConstraints *_currentContextMapInsetsConstraints;	// 216 = 0xd8
    MapsEdgeConstraints *_safeAreaMapEdgeInsetsConstraints;	// 224 = 0xe0
    NSMapTable *_mapInsetsConstraintsByContext;	// 232 = 0xe8
    UIView *_mapReplacementView;	// 240 = 0xf0
    struct CGSize _lastLayoutSize;	// 248 = 0xf8
    DebugFramesView *_debugLayoutGuidesView;	// 264 = 0x108
    WatermarkView *_watermarkView;	// 272 = 0x110
    NSDate *_lastViewportChangeDate;	// 280 = 0x118
    NSDate *_mapViewEnteredForegroundDate;	// 288 = 0x120
    id _sceneForegroundingNotificationToken;	// 296 = 0x128
    MapsTokenStorage *_deactivationTokens;	// 304 = 0x130
    id _debugForceDeactivationToken;	// 312 = 0x138
    id _forceDeactivationToken;	// 320 = 0x140
    id _contextNotShowingMapDeactivatingToken;	// 328 = 0x148
    _Bool _suppressed;	// 336 = 0x150
    _Bool _inactive;	// 337 = 0x151
    _Bool _transitioning;	// 338 = 0x152
    CustomPOIsController *_customPOIsController;	// 344 = 0x158
    MapCameraController *_mapCameraController;	// 352 = 0x160
    MapSelectionManager *_mapSelectionManager;	// 360 = 0x168
    ChromeOverlayController *_overlayController;	// 368 = 0x170
    PersonalizedItemManager *_personalizedItemManager;	// 376 = 0x178
    SearchPinsManager *_searchPinsManager;	// 384 = 0x180
    RouteAnnotationsController *_routeAnnotationsController;	// 392 = 0x188
    NSArray *_contexts;	// 400 = 0x190
    MKMapView *_mapView;	// 408 = 0x198
    UILayoutGuide *_mapInsetsLayoutGuide;	// 416 = 0x1a0
    UIView *_viewport;	// 424 = 0x1a8
    UILayoutGuide *_viewportLayoutGuide;	// 432 = 0x1b0
    ChromeNavigationDisplay *_navigationDisplay;	// 440 = 0x1b8
    NSString *_searchContextDefaultsKeysPrefix;	// 448 = 0x1c0
    NSMutableDictionary *_currentMapViewRateLimits;	// 456 = 0x1c8
    id <BatteryMonitorToken> _batteryMonitorToken;	// 464 = 0x1d0
    NSString *_thermalSceneIdentifier;	// 472 = 0x1d8
    CDStruct_02837cd9 _visibleMapRect;	// 480 = 0x1e0
}

+ (Class)userLocationViewClass;	// IMP=0x0020000000b833d8
+ (_Bool)mapInsetsShouldRespectSafeAreaInsetsByDefault;	// IMP=0x0010000000b7f2a8
+ (_Bool)requiresUniqueContextIdentifiers;	// IMP=0x0010000000b74336
+ (id)localizedLocationAuthorizationTitle;	// IMP=0x00100000009d08b5
+ (id)localizedLocationAuthorizationMessage;	// IMP=0x00100000009d0857
- (void).cxx_destruct;	// IMP=0x0010000000b8faa2
@property(nonatomic) CDStruct_02837cd9 visibleMapRect; // @synthesize visibleMapRect=_visibleMapRect;
@property(retain, nonatomic) NSString *thermalSceneIdentifier; // @synthesize thermalSceneIdentifier=_thermalSceneIdentifier;
@property(retain, nonatomic) id <BatteryMonitorToken> batteryMonitorToken; // @synthesize batteryMonitorToken=_batteryMonitorToken;
@property(retain, nonatomic) NSMutableDictionary *currentMapViewRateLimits; // @synthesize currentMapViewRateLimits=_currentMapViewRateLimits;
@property(retain, nonatomic) NSString *searchContextDefaultsKeysPrefix; // @synthesize searchContextDefaultsKeysPrefix=_searchContextDefaultsKeysPrefix;
@property(nonatomic, getter=isTransitioning) _Bool transitioning; // @synthesize transitioning=_transitioning;
@property(retain, nonatomic) ChromeNavigationDisplay *navigationDisplay; // @synthesize navigationDisplay=_navigationDisplay;
@property(readonly, nonatomic, getter=isInactive) _Bool inactive; // @synthesize inactive=_inactive;
@property(nonatomic, getter=isSuppressed) _Bool suppressed; // @synthesize suppressed=_suppressed;
@property(readonly, nonatomic) UILayoutGuide *viewportLayoutGuide; // @synthesize viewportLayoutGuide=_viewportLayoutGuide;
@property(readonly, nonatomic) UIView *viewport; // @synthesize viewport=_viewport;
@property(readonly, nonatomic) UILayoutGuide *mapInsetsLayoutGuide; // @synthesize mapInsetsLayoutGuide=_mapInsetsLayoutGuide;
@property(nonatomic) struct UIEdgeInsets labelEdgeWidths; // @synthesize labelEdgeWidths=_labelEdgeWidths;
@property(nonatomic) struct UIEdgeInsets labelEdgeInsets; // @synthesize labelEdgeInsets=_labelEdgeInsets;
@property(readonly, nonatomic) MKMapView *mapView; // @synthesize mapView=_mapView;
@property(readonly, nonatomic) NSArray *pendingContexts; // @synthesize pendingContexts=_pendingContexts;
@property(copy, nonatomic) NSArray *contexts; // @synthesize contexts=_contexts;
@property(readonly, nonatomic) ChromeOverlayController *overlayController; // @synthesize overlayController=_overlayController;
- (void)generateAttachmentsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000b8d9fa
- (unsigned long long)desiredRadarScreenshotTypes;	// IMP=0x0010000000b8d9ef
- (void)powerStateDidChangeNotification:(id)arg1;	// IMP=0x0010000000b8d748
- (MISSING_TYPE *)_currentFrameRateLimit;	// IMP=0x0010000000b8cf99
- (void)_limitFrameRate:(long long)arg1 forReason:(long long)arg2;	// IMP=0x0010000000b8ccd6
- (void)_removeFrameRateLimitForReason:(long long)arg1;	// IMP=0x0010000000b8ca46
- (void)_clearFrameRateLimits;	// IMP=0x0010000000b8c81b
- (_Bool)isThrottlingMapViewFrameRate;	// IMP=0x0010000000b8c7d3
- (void)updateMapViewFrameRate;	// IMP=0x0010000000b8b2c4
- (_Bool)isEligibleForMapViewFrameRateLimiting;	// IMP=0x0010000000b8b2bc
- (_Bool)isLowPowerModeFrameRateLimitingEnabled;	// IMP=0x0010000000b8b28b
- (CDStruct_8ce276cf)lowPowerModeRateLimitEnabledConfigKey;	// IMP=0x0010000000b8b278
- (_Bool)isBatteryLevelFrameRateLimitingEnabled;	// IMP=0x0010000000b8b247
- (CDStruct_8ce276cf)batteryLevelRateLimitEnabledConfigKey;	// IMP=0x0010000000b8b234
@property(readonly, nonatomic) NSDictionary *thermalRateLimits;
- (CDStruct_8ce276cf)thermalRateLimitsConfigKey;	// IMP=0x0010000000b8b1e0
- (void)didUpdateThermalPressureLevel:(int)arg1;	// IMP=0x0010000000b8af7e
- (void)batteryMonitorTokenWitnessedChangeInBatteryState:(id)arg1;	// IMP=0x0010000000b8af78
- (void)batteryMonitorTokenWitnessedChangeInBatteryLevel:(id)arg1;	// IMP=0x0010000000b8ad16
- (void)valueChangedForGEOConfigKey:(CDStruct_065526f1)arg1;	// IMP=0x0010000000b8a7fe
- (id)searchPinsManagerForMapSelectionManager:(id)arg1;	// IMP=0x0010000000b8a7ec
- (void)mapSelectionManagerClearSelection:(id)arg1;	// IMP=0x0010000000b8a7e6
- (void)mapSelectionManager:(id)arg1 selectAnnotationView:(id)arg2;	// IMP=0x0010000000b8a7e0
- (void)mapSelectionManager:(id)arg1 selectVKLabelMarker:(id)arg2;	// IMP=0x0010000000b8a7da
- (struct CGPoint)mapView:(id)arg1 focusPointForPoint:(struct CGPoint)arg2 gesture:(long long)arg3;	// IMP=0x0010000000b8a7d4
- (_Bool)mapViewShouldHandleTapToDeselect:(id)arg1;	// IMP=0x0010000000b8a7cc
- (void)mapView:(id)arg1 didSelectAnnotationView:(id)arg2;	// IMP=0x0010000000b8a763
- (void)mapView:(id)arg1 didSelectLabelMarker:(id)arg2;	// IMP=0x0010000000b8a6fa
- (_Bool)mapView:(id)arg1 shouldSelectLabelMarker:(id)arg2;	// IMP=0x0010000000b8a68c
- (_Bool)mapView:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x0010000000b8a684
- (_Bool)_mapViewCanChangeUserTrackingModeWhenRegionDidChange:(id)arg1;	// IMP=0x0010000000b8a67c
- (double)mapView:(id)arg1 shouldDelayTapResponse:(id)arg2 onAnnotationView:(id)arg3 forDuration:(double)arg4;	// IMP=0x0010000000b8a676
- (id)mapView:(id)arg1 rendererForOverlay:(id)arg2;	// IMP=0x0010000000b8a66e
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;	// IMP=0x0010000000b8a586
- (_Bool)_shouldSaveLastViewportChangeDateInDefaults;	// IMP=0x0010000000b8a53e
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;	// IMP=0x0010000000b89839
- (id)lastMapViewportChangedDate;	// IMP=0x0010000000b89635
- (id)mapViewEnteredForegroundDate;	// IMP=0x0010000000b89434
- (void)_fillNewTraitsWithMapViewRelatedData:(id)arg1;	// IMP=0x0010000000b891f5
@property(readonly, nonatomic) GEOMapServiceTraits *currentTraits;
- (void)chromeNavigationDisplayDidRenderRoute:(id)arg1;	// IMP=0x0010000000b89138
- (void)chromeNavigationDisplay:(id)arg1 didChangePanning:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x0010000000b89132
- (void)chromeNavigationDisplay:(id)arg1 userDidTapMap:(id)arg2 atPoint:(struct CGPoint)arg3;	// IMP=0x0010000000b8912c
- (void)chromeNavigationDisplay:(id)arg1 configurationDidChange:(id)arg2;	// IMP=0x0010000000b89126
- (void)_setupNavigationDisplayForContext:(id)arg1 withAnimation:(id)arg2;	// IMP=0x0010000000b88195
- (void)_teardownNavigationDisplayWithAnimation:(id)arg1;	// IMP=0x0010000000b87c11
- (_Bool)_shouldEnableNavigationDisplayForContextStack:(id)arg1 requestingContext:(id *)arg2;	// IMP=0x0010000000b87500
@property(readonly, nonatomic) GEOMapServiceTraits *navigationAwareTraits;
@property(readonly, nonatomic, getter=isRunningNavigationDisplay) _Bool runningNavigationDisplay;
@property(readonly, nonatomic, getter=isDisplayingNavigation) _Bool displayingNavigation;
- (_Bool)wantsNavigationDisplayByDefault;	// IMP=0x0010000000b87401
@property(readonly, nonatomic) SearchPinsManager *searchPinsManager; // @synthesize searchPinsManager=_searchPinsManager;
@property(readonly, nonatomic) RouteAnnotationsController *routeAnnotationsController; // @synthesize routeAnnotationsController=_routeAnnotationsController;
@property(readonly, nonatomic) PersonalizedItemManager *personalizedItemManager; // @synthesize personalizedItemManager=_personalizedItemManager;
@property(readonly, nonatomic) MapCameraController *mapCameraController; // @synthesize mapCameraController=_mapCameraController;
@property(readonly, nonatomic) MapSelectionManager *mapSelectionManager; // @synthesize mapSelectionManager=_mapSelectionManager;
@property(readonly, nonatomic) CustomPOIsController *customPOIsController; // @synthesize customPOIsController=_customPOIsController;
@property(readonly, nonatomic) CustomSearchManager *customSearchManager;
- (void)didUnsuppress;	// IMP=0x0010000000b8643a
- (void)didSuppress;	// IMP=0x0010000000b86434
- (void)_unsuppress;	// IMP=0x0010000000b85894
- (void)_suppress;	// IMP=0x0010000000b84ca5
- (void)_setSuppressed:(_Bool)arg1;	// IMP=0x0010000000b8495d
- (id)defaultFullscreenViewControllerDismissalTransition;	// IMP=0x0010000000b84921
- (id)defaultFullscreenViewControllerPresentationTransition;	// IMP=0x0010000000b84908
- (id)fullscreenViewControllerTransitionFromController:(id)arg1 toController:(id)arg2 isDismissTransition:(_Bool)arg3;	// IMP=0x0010000000b848d5
- (void)_transitionToFullscreenViewController:(id)arg1 forContext:(id)arg2 previousIsLeaving:(_Bool)arg3 withAnimation:(id)arg4;	// IMP=0x0010000000b836b3
- (void)_updateFullscreenViewControllerForContext:(id)arg1 previousIsLeaving:(_Bool)arg2 withAnimation:(id)arg3;	// IMP=0x0010000000b83601
- (_Bool)supportsDefaultFullscreenViewControllerPresentation;	// IMP=0x0010000000b835f9
- (void)overlayControllerDidUpdateMapInsets:(id)arg1 fromOverlay:(id)arg2;	// IMP=0x0010000000b835e7
- (void)setNeedsUpdateFullscreenViewController;	// IMP=0x0010000000b8355f
- (struct CGRect)unobscuredMapContentBoundsInContainingView;	// IMP=0x0010000000b83503
- (id)personalizedItemSourcesForCurrentState;	// IMP=0x0010000000b8345c
@property(readonly, nonatomic) UserLocationView *userLocationView; // @synthesize userLocationView=_userLocationView;
- (void)removeMapReplacementView:(id)arg1;	// IMP=0x0010000000b831de
- (void)_removeMapReplacementViewIfNeeded;	// IMP=0x0010000000b82fc8
- (void)installMapReplacementView:(id)arg1;	// IMP=0x0010000000b82d92
- (void)_installMapReplacementView:(id)arg1;	// IMP=0x0010000000b82b48
@property(readonly, nonatomic) UIView *currentMapReplacementView;
- (void)prepareToRemoveMapView:(id)arg1;	// IMP=0x0010000000b82ada
- (void)evictMapView;	// IMP=0x0010000000b8289b
- (void)restoreMapInViewHierarchy;	// IMP=0x0010000000b82610
- (struct UIEdgeInsets)mapAttributionInsets;	// IMP=0x0010000000b825f2
- (id)mapReplacementColor;	// IMP=0x0010000000b82588
- (id)createMapReplacementView;	// IMP=0x0010000000b82446
- (_Bool)removesMapViewWhenInactive;	// IMP=0x0010000000b8243e
- (void)removeMapViewFromViewHierarchy;	// IMP=0x0010000000b82401
- (void)deactivationReasonsDidChange;	// IMP=0x0010000000b823fb
- (id)deactivationReasons;	// IMP=0x0010000000b823de
- (void)didBecomeInactive:(_Bool)arg1;	// IMP=0x0010000000b823d8
- (void)_setInactive:(_Bool)arg1;	// IMP=0x0010000000b81311
- (void)decrementForToken:(id)arg1;	// IMP=0x0010000000b80ae4
- (void)incrementForToken:(id)arg1;	// IMP=0x0010000000b80142
- (id)acquireChromeDeactivationTokenForReason:(id)arg1;	// IMP=0x0010000000b80125
- (void)clearMapGesturesAndAnimations;	// IMP=0x0010000000b800e8
- (id)mapSelectionManagerDelegateForSelector:(SEL)arg1;	// IMP=0x0010000000b7fec0
- (double)mapInsetsUpdateAnimationDuration;	// IMP=0x0010000000b7fc68
- (void)setNeedsUpdateMapInsets;	// IMP=0x0010000000b7fc4a
- (void)_refreshMapInsetsConstraintsForContext:(id)arg1 animated:(_Bool)arg2 updateIfNeeded:(_Bool)arg3;	// IMP=0x0010000000b7faca
- (void)setMapEdgeInsets:(struct UIEdgeInsets)arg1 animated:(_Bool)arg2 forContext:(id)arg3;	// IMP=0x0010000000b7f47f
- (_Bool)contextWantsMapInsetsToRespectSafeAreaInsets:(id)arg1;	// IMP=0x0010000000b7f40f
- (struct UIEdgeInsets)mapEdgeInsetsForContext:(id)arg1;	// IMP=0x0010000000b7f2b0
- (void)forwardInvocation:(id)arg1;	// IMP=0x0010000000b7f1f1
- (void)unregisterAdditionalMapViewDelegate:(id)arg1;	// IMP=0x0010000000b7eeb2
- (void)registerAdditionalMapViewDelegate:(id)arg1;	// IMP=0x0010000000b7e85e
- (id)mapViewDelegateForSelector:(SEL)arg1;	// IMP=0x0010000000b7e810
- (id)mapViewDelegate;	// IMP=0x0010000000b7e73a
- (long long)modernMapProjectionType;	// IMP=0x0010000000b7e732
- (long long)modernMapTerrainMode;	// IMP=0x0010000000b7e72a
- (_Bool)shouldUseModernMap;	// IMP=0x0010000000b7e722
- (void)setVKApplicationUILayout:(long long)arg1;	// IMP=0x0010000000b7e63b
- (void)_setLocalizedStringsForMapView:(id)arg1;	// IMP=0x0010000000b7e0ea
- (void)prepareMapViewForFirstUse;	// IMP=0x0010000000b7db97
- (void)installMapView:(id)arg1;	// IMP=0x0010000000b7d5c8
- (id)createMapView;	// IMP=0x0010000000b7d518
- (void)loadMapViewIfNeeded;	// IMP=0x0010000000b7d1ad
- (_Bool)shouldAutomaticallyLoadMapView;	// IMP=0x0010000000b7d1a5
- (void)willUpdateComponents:(id)arg1 withAnimation:(id)arg2;	// IMP=0x0010000000b7d19f
- (void)_updateComponentsIfNeeded:(_Bool)arg1 forceImmediateUpdate:(_Bool)arg2 forTiming:(unsigned long long)arg3 withAnimation:(id)arg4;	// IMP=0x0010000000b7b6ed
- (void)_updateComponentsIfNeeded:(_Bool)arg1 forTiming:(unsigned long long)arg2 withAnimation:(id)arg3;	// IMP=0x0010000000b7b6d3
- (void)_updateComponentsIfNeeded:(_Bool)arg1 withAnimation:(id)arg2;	// IMP=0x0010000000b7b6b9
- (void)updateComponentsIfNeededWithAnimation:(id)arg1;	// IMP=0x0010000000b7b69f
- (void)updateComponentsIfNeeded;	// IMP=0x0010000000b7b634
- (unsigned long long)preferredUpdateTimingForComponent:(id)arg1;	// IMP=0x0010000000b7b617
- (id)allComponents;	// IMP=0x0010000000b7b58f
- (void)updateComponent:(id)arg1 forTiming:(unsigned long long)arg2 withAnimation:(id)arg3;	// IMP=0x0010000000b785c8
- (void)_scheduleComponentUpdateTimerIfNeeded;	// IMP=0x0010000000b783a9
- (void)setNeedsUpdateComponent:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000b78099
- (void)setNeedsUpdateComponent:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0010000000b78084
- (void)cancelDeferredAction:(id)arg1 forContext:(id)arg2;	// IMP=0x0010000000b7800b
- (_Bool)hasDeferredAction:(id)arg1 forContext:(id)arg2;	// IMP=0x0010000000b77f6a
- (void)whenContextNextBecomesCurrent:(id)arg1 performAction:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000b77e16
- (void)commitCoordinatedContextChange;	// IMP=0x0010000000b77dd9
- (void)setFallbackContextCoordinationBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000b77d70
- (void)scheduleCoordinatedContextChange:(CDUnknownBlockType)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000b77ce5
- (id)_contextCoordinatedScheduler;	// IMP=0x0010000000b77c91
- (void)removeContextStackObserver:(id)arg1;	// IMP=0x0010000000b77c6d
- (void)addContextStackObserver:(id)arg1;	// IMP=0x0010000000b77be0
- (void)_getContextsLeaving:(id *)arg1 entering:(id *)arg2 fromPrevious:(id)arg3 incoming:(id)arg4;	// IMP=0x0010000000b77890
- (void)contextStackDidUpdateFrom:(id)arg1 to:(id)arg2 withAnimation:(id)arg3;	// IMP=0x0010000000b76c79
- (void)contextStackWillUpdateFrom:(id)arg1 to:(id)arg2 withAnimation:(id)arg3;	// IMP=0x0010000000b763e7
- (void)_setContexts:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000b75ff0
- (void)setContexts:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000b75915
- (void)setContexts:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0010000000b75900
- (void)popContextAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000b75858
- (void)popContext:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000b75322
- (void)popToRootContextAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000b7528e
- (void)popToContext:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000b74de3
- (void)pushContext:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000b745f1
- (_Bool)hasDuplicatesOfContext:(id)arg1;	// IMP=0x0010000000b744fd
- (_Bool)isCurrentContext:(id)arg1;	// IMP=0x0010000000b744a7
- (_Bool)isTopContext:(id)arg1;	// IMP=0x0010000000b74442
@property(readonly, nonatomic) id <ChromeContext> nextTopContext;
@property(readonly, nonatomic) id <ChromeContext> previousTopContext;
@property(readonly, nonatomic) id <ChromeContext> topContext;
- (id)contextForUniqueIdentifier:(id)arg1;	// IMP=0x0010000000b7439f
- (id)uniqueIdentifierForContext:(id)arg1;	// IMP=0x0010000000b7433e
- (id)contextProtocol;	// IMP=0x0010000000b74325
- (void)updateFramesInDebugFramesView:(id)arg1;	// IMP=0x0010000000b7421c
- (void)registerFramesInDebugFramesView:(id)arg1;	// IMP=0x0010000000b74108
- (void)_updateDebugLayoutGuidesView;	// IMP=0x0010000000b73e1f
- (void)userDefaultsDidChange:(id)arg1;	// IMP=0x0010000000b73d42
- (void)_removeWatermarkView;	// IMP=0x0010000000b73d0a
- (void)_addWatermarkView;	// IMP=0x0010000000b73aac
@property(readonly, nonatomic) UIView *passThroughView;
- (void)viewDidLayoutSubviews;	// IMP=0x0010000000b73954
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(_Bool)arg2;	// IMP=0x0010000000b7390a
- (void)viewDidLoad;	// IMP=0x0010000000b72e23
- (void)dealloc;	// IMP=0x0010000000b72bbd
- (id)init;	// IMP=0x0010000000b724e0
- (_Bool)dismissCurrentInterruptionOfKind:(long long)arg1;	// IMP=0x00000000009d084f
- (void)dismissInterruption;	// IMP=0x00100000009d0849
- (CDUnknownBlockType)presentUnhandledInterruptionOfKind:(long long)arg1 userInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000009d0841
- (CDUnknownBlockType)presentInterruptionOfKind:(long long)arg1 userInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000009cff90

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

