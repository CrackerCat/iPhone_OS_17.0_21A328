//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIFont.h>

@class MISSING_TYPE;

@interface UIFont (CustomFont)
+ (CDUnknownBlockType)_maps_fontProviderWeight:(double)arg1 minimumPointSize:(double)arg2 minimumSizeCategory:(id)arg3 maximumPointSize:(double)arg4 maximumSizeCategory:(id)arg5;	// IMP=0x002000000034b134
+ (id)_maps_fontWithTextStyle:(id)arg1 weight:(double)arg2 compatibleWithTraitCollection:(id)arg3;	// IMP=0x001000000034afbb
+ (double)_maps_bodyScaledValueForValue:(double)arg1 compatibleWithTraitCollection:(id)arg2;	// IMP=0x001000000034ae98
+ (double)_maps_bodyScaledValueForValue:(double)arg1;	// IMP=0x001000000034ae84
+ (id)_maps_cappedFont:(id)arg1 withMaxPoint:(double)arg2;	// IMP=0x001000000034ad06
+ (id)_maps_textStyleForSize:(double)arg1 useAdaptiveIfNeeded:(_Bool)arg2 effectivePointSize:(out double *)arg3;	// IMP=0x001000000034a998
+ (double)_maps_discreteSizeForSize:(double)arg1;	// IMP=0x001000000034a92b
+ (id)_maps_navHeadingFontWithPreferredSize:(double)arg1 diameter:(double)arg2 desiredPadding:(double)arg3;	// IMP=0x001000000034a1c1
+ (id)_maps_boldSystemFontWithFixedSize:(double)arg1 adaptiveFont:(_Bool)arg2;	// IMP=0x001000000034a116
+ (id)_maps_boldSystemFontWithFixedSize:(double)arg1;	// IMP=0x001000000034a102
+ (id)_maps_systemFontWithFixedSize:(double)arg1 adaptiveFont:(_Bool)arg2;	// IMP=0x001000000034a05a
+ (id)_maps_systemFontWithFixedSize:(double)arg1;	// IMP=0x001000000034a046
+ (id)_maps_systemFontWithSize:(double)arg1 weight:(double)arg2 grade:(unsigned long long)arg3;	// IMP=0x0010000000349f82
+ (id)_maps_boldSystemFontWithSize:(double)arg1;	// IMP=0x0010000000349ec5
+ (id)_maps_systemFontWithSize:(double)arg1;	// IMP=0x0010000000349e0b
+ (id)system11;	// IMP=0x0010000000349de8
+ (id)system11Bold;	// IMP=0x0010000000349dba
+ (id)system12CompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000349d42
+ (id)system12;	// IMP=0x0010000000349d2e
+ (id)system12MediumCompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000349c9c
+ (id)system12Medium;	// IMP=0x0010000000349c88
+ (id)system12SemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000349bf6
+ (id)system12Semibold;	// IMP=0x0010000000349be2
+ (id)system12BoldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000349b50
+ (id)system12Bold;	// IMP=0x0010000000349b3c
+ (id)system13CompatibleWithTraitCollection:(id)arg1 withSymbolicTraits:(unsigned int)arg2;	// IMP=0x0010000000349ab9
+ (id)system13CompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000349aa5
+ (id)system13;	// IMP=0x0010000000349a91
+ (id)system13Tall;	// IMP=0x0010000000349a78
+ (id)system13MediumCompatibleWithTraitCollection:(id)arg1;	// IMP=0x00100000003499ea
+ (id)system13AdaptiveCompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000349942
+ (MISSING_TYPE *)system13Adaptive;	// IMP=0x001000000034992e
+ (id)system13SemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000034989c
+ (id)system15Light;	// IMP=0x001000000034986e
+ (id)system15CompatibleWithTraitCollection:(id)arg1 withSymbolicTraits:(unsigned int)arg2;	// IMP=0x00100000003497eb
+ (id)system15CompatibleWithTraitCollection:(id)arg1;	// IMP=0x00100000003497d7
+ (id)system15;	// IMP=0x00100000003497c3
+ (id)system15Tall;	// IMP=0x00100000003497aa
+ (id)system15MediumCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000034971c
+ (id)system15Medium;	// IMP=0x0010000000349708
+ (id)system15SemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000349676
+ (id)system15Semibold;	// IMP=0x0010000000349662
+ (id)system15Bold;	// IMP=0x0010000000349634
+ (id)system16;	// IMP=0x0010000000349611
+ (id)system17CompatibleWithTraitCollection:(id)arg1 withSymbolicTraits:(unsigned int)arg2;	// IMP=0x001000000034958e
+ (id)system17CompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000034957a
+ (id)system17;	// IMP=0x0010000000349566
+ (id)system17Tall;	// IMP=0x001000000034954d
+ (id)system17Light;	// IMP=0x001000000034951f
+ (id)system17Medium;	// IMP=0x00100000003494f1
+ (id)system17SemiboldTall;	// IMP=0x00100000003494bb
+ (id)system17SemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000349429
+ (id)system17SemiBold;	// IMP=0x0010000000349415
+ (id)system17Bold;	// IMP=0x00100000003493e7
+ (id)system18;	// IMP=0x00100000003493c4
+ (id)system20Adaptive;	// IMP=0x001000000034937f
+ (id)system20AdaptiveMedium;	// IMP=0x001000000034932f
+ (id)system20AdaptiveSemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000349275
+ (id)system20AdaptiveSemibold;	// IMP=0x0010000000349261
+ (id)system22AdaptiveSemibold;	// IMP=0x0010000000349211
+ (id)system20Semibold;	// IMP=0x00100000003491e3
+ (id)system20Medium;	// IMP=0x00100000003491b5
+ (id)system20Light;	// IMP=0x0010000000349187
+ (id)system20CompatibleWithTraitCollection:(id)arg1 withSymbolicTraits:(unsigned int)arg2;	// IMP=0x0010000000349104
+ (id)system20CompatibleWithTraitCollection:(id)arg1;	// IMP=0x00100000003490f0
+ (id)system20;	// IMP=0x00100000003490dc
+ (id)system20Bold;	// IMP=0x00100000003490ae
+ (id)system22;	// IMP=0x001000000034908b
+ (id)system22SemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000348ff9
+ (id)system22Semibold;	// IMP=0x0010000000348fe5
+ (id)system22AdaptiveCondensedBold;	// IMP=0x0010000000348f8d
+ (id)system22Bold;	// IMP=0x0010000000348f5f
+ (id)system28;	// IMP=0x0010000000348f3c
+ (id)system28AdaptiveCondensedBold;	// IMP=0x0010000000348ee4
+ (id)system28AdaptiveBoldShort;	// IMP=0x0010000000348e8c
+ (id)system28Medium;	// IMP=0x0010000000348e5e
+ (id)system28BoldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x0010000000348dcc
+ (id)system28Bold;	// IMP=0x0010000000348db8
+ (_Bool)accessibilityTextEnabled;	// IMP=0x0010000000348c76
+ (void)setPlacecardShouldUseSmallFont:(_Bool)arg1;	// IMP=0x0010000000348c5d
+ (id)_mapsCar_fontForTextStyle:(id)arg1 weight:(double)arg2 grade:(int)arg3 traits:(unsigned int)arg4;	// IMP=0x001000000049d9e7
+ (id)_mapsCar_fontForTextStyle:(id)arg1 weight:(double)arg2 traits:(unsigned int)arg3;	// IMP=0x001000000049d9cd
+ (id)_mapsCar_fontForTextStyle:(id)arg1 traits:(unsigned int)arg2;	// IMP=0x001000000049d9a8
+ (id)_mapsCar_fontForTextStyle:(id)arg1 weight:(double)arg2 grade:(int)arg3;	// IMP=0x001000000049d993
+ (id)_mapsCar_fontForTextStyle:(id)arg1 weight:(double)arg2;	// IMP=0x001000000049d97c
@property(readonly, nonatomic) UIFont *_maps_fontWithMonospacedNumbers;
@end

