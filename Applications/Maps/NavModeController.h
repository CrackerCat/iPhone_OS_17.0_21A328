//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class GuidanceObserver, IOSBasedChromeViewController, MKMapItem, MKMapView, MNTrafficIncidentAlert, NSString, NavActionCoordinator, NavContainerViewController, NavigationCustomFeaturesSource, NavigationDisplay, NavigationPowerLogger, NavigationSession, PlatformController, RAPNavigationTracker, Route, StatusBarBackgroundViewStyle, UIView;
@protocol MapSelectionManagerDelegate, NavActionCoordination, StatusBarSupplementaryView;

@interface NavModeController : NSObject
{
    MKMapView *_mapView;	// 8 = 0x8
    RAPNavigationTracker *_rapNavigationTracker;	// 16 = 0x10
    id _chromeDeactivationToken;	// 24 = 0x18
    _Bool _showFullScreenDirectionsList;	// 32 = 0x20
    _Bool _utteringGuidanceAudio;	// 33 = 0x21
    unsigned long long _navigationType;	// 40 = 0x28
    PlatformController *_platformController;	// 48 = 0x30
    IOSBasedChromeViewController *_chromeViewController;	// 56 = 0x38
    Route *_route;	// 64 = 0x40
    NavActionCoordinator *_navActionCoordinator;	// 72 = 0x48
    NavContainerViewController *_containerViewController;	// 80 = 0x50
    GuidanceObserver *_guidanceObserver;	// 88 = 0x58
    NavigationDisplay *_navigationDisplay;	// 96 = 0x60
    NavigationCustomFeaturesSource *_featuresSource;	// 104 = 0x68
    NavigationPowerLogger *_powerLogger;	// 112 = 0x70
    MNTrafficIncidentAlert *_incidentAlert;	// 120 = 0x78
}

- (void).cxx_destruct;	// IMP=0x002000000060100e
@property(nonatomic, getter=isUtteringGuidanceAudio) _Bool utteringGuidanceAudio; // @synthesize utteringGuidanceAudio=_utteringGuidanceAudio;
@property(retain, nonatomic) MNTrafficIncidentAlert *incidentAlert; // @synthesize incidentAlert=_incidentAlert;
@property(readonly, nonatomic) NavigationPowerLogger *powerLogger; // @synthesize powerLogger=_powerLogger;
@property(readonly, nonatomic) NavigationCustomFeaturesSource *featuresSource; // @synthesize featuresSource=_featuresSource;
@property(nonatomic, getter=isShowingFullScreenDirectionsList) _Bool showFullScreenDirectionsList; // @synthesize showFullScreenDirectionsList=_showFullScreenDirectionsList;
@property(retain, nonatomic) NavigationDisplay *navigationDisplay; // @synthesize navigationDisplay=_navigationDisplay;
@property(readonly, nonatomic) GuidanceObserver *guidanceObserver; // @synthesize guidanceObserver=_guidanceObserver;
@property(readonly, nonatomic) NavContainerViewController *containerViewController; // @synthesize containerViewController=_containerViewController;
@property(readonly, nonatomic) NavActionCoordinator *navActionCoordinator; // @synthesize navActionCoordinator=_navActionCoordinator;
@property(readonly, nonatomic) Route *route; // @synthesize route=_route;
@property(nonatomic) __weak IOSBasedChromeViewController *chromeViewController; // @synthesize chromeViewController=_chromeViewController;
@property(readonly, nonatomic) PlatformController *platformController; // @synthesize platformController=_platformController;
@property(nonatomic) unsigned long long navigationType; // @synthesize navigationType=_navigationType;
- (_Bool)permitsLookAroundShowing;	// IMP=0x0010000000600f58
- (_Bool)wantsLookAroundShowing;	// IMP=0x0010000000600f50
- (_Bool)permitsWeatherShowing;	// IMP=0x0010000000600f48
- (_Bool)wantsWeatherShowing;	// IMP=0x0010000000600f40
@property(readonly, nonatomic) UIView<StatusBarSupplementaryView> *statusBarSupplementaryView;
@property(readonly, nonatomic) StatusBarBackgroundViewStyle *statusBarBackgroundViewStyle;
- (long long)preferredStatusBarStyle;	// IMP=0x0010000000600e5c
- (_Bool)prefersStatusBarHidden;	// IMP=0x0010000000600e18
- (_Bool)wantsStatusBarControl;	// IMP=0x0010000000600dc5
@property(readonly, nonatomic) _Bool notifyCurrentStateWhenStartMonitoring;
- (void)screenLayoutDidChange;	// IMP=0x0010000000600cbf
- (void)navActionCoordinator:(id)arg1 didChangeMapViewZoom:(unsigned long long)arg2;	// IMP=0x0010000000600b5e
- (void)personalizedItemSourceDidChangeItems:(id)arg1;	// IMP=0x0010000000600a15
- (void)_sceneBackgroundedWithOurViewVisible:(id)arg1;	// IMP=0x0010000000600792
- (void)endNavModeAnimated:(_Bool)arg1;	// IMP=0x0010000000600515
- (void)_dismissTrafficIncidentMapDisplay;	// IMP=0x0010000000600413
- (void)navigationService:(id)arg1 didProcessSpeechEvent:(id)arg2;	// IMP=0x00100000006003ff
- (void)navigationService:(id)arg1 willProcessSpeechEvent:(id)arg2;	// IMP=0x00100000006003e8
- (void)navigationService:(id)arg1 didUpdateStepIndex:(unsigned long long)arg2 segmentIndex:(unsigned long long)arg3;	// IMP=0x0010000000600300
- (void)navigationService:(id)arg1 didUpdateAlternateRoutes:(id)arg2 traffics:(id)arg3;	// IMP=0x00100000006002ee
- (void)navigationService:(id)arg1 didUpdateTrafficForRouteID:(id)arg2;	// IMP=0x001000000060006d
- (void)navigationService:(id)arg1 didInvalidateTrafficIncidentAlert:(id)arg2;	// IMP=0x00100000005fffd2
- (void)navigationService:(id)arg1 didUpdateTrafficIncidentAlert:(id)arg2;	// IMP=0x00100000005ffe27
- (void)navigationService:(id)arg1 didReceiveTrafficIncidentAlert:(id)arg2 responseCallback:(CDUnknownBlockType)arg3;	// IMP=0x00100000005ffc41
- (void)navigationService:(id)arg1 didResumeNavigatingFromWaypoint:(id)arg2 endOfLegIndex:(unsigned long long)arg3 reason:(unsigned long long)arg4;	// IMP=0x00100000005ffb08
- (void)navigationService:(id)arg1 didChangeNavigationState:(int)arg2;	// IMP=0x00100000005ffaf6
- (void)navigationService:(id)arg1 didUpdateArrivalInfo:(id)arg2;	// IMP=0x00100000005ffae4
- (void)navigationService:(id)arg1 didChangeFromState:(unsigned long long)arg2 toState:(unsigned long long)arg3;	// IMP=0x00100000005ff9ba
- (void)navigationService:(id)arg1 didSwitchToNewTransportType:(int)arg2 newRoute:(id)arg3 traffic:(id)arg4;	// IMP=0x00100000005ff9a2
- (void)navigationService:(id)arg1 didReroute:(id)arg2 rerouteReason:(unsigned long long)arg3;	// IMP=0x00100000005ff937
- (void)navigationService:(id)arg1 didUpdateMatchedLocation:(id)arg2;	// IMP=0x00100000005ff922
- (unsigned long long)_mapTypeFromMapView:(id)arg1;	// IMP=0x00100000005ff771
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;	// IMP=0x00100000005ff705
- (void)mapView:(id)arg1 didSelectAnnotationView:(id)arg2;	// IMP=0x00100000005ff6ff
- (void)mapView:(id)arg1 didUpdateYaw:(double)arg2;	// IMP=0x00100000005ff684
- (void)didTapMapView:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x00100000005ff44b
- (void)mapViewNavigationCameraDidReturnToDefaultZoom:(id)arg1;	// IMP=0x00100000005ff3a5
- (void)mapViewNavigationCameraDidLeaveDefaultZoom:(id)arg1;	// IMP=0x00100000005ff2ff
- (void)mapViewNavigationCameraHasStoppedPanning:(id)arg1;	// IMP=0x00100000005ff259
- (void)mapViewNavigationCameraHasStartedPanning:(id)arg1;	// IMP=0x00100000005ff1b3
- (void)mapView:(id)arg1 didDeselectLabelMarker:(id)arg2;	// IMP=0x00100000005ff094
- (void)mapView:(id)arg1 didSelectLabelMarker:(id)arg2;	// IMP=0x00100000005fef2f
- (_Bool)mapView:(id)arg1 shouldSelectLabelMarker:(id)arg2;	// IMP=0x00100000005fee5f
- (void)navigationDisplay:(id)arg1 didChangeUserTrackingMode:(long long)arg2;	// IMP=0x00100000005fee0a
- (void)_updateArrivalState;	// IMP=0x00100000005fe323
- (void)_archiveMapsActivity;	// IMP=0x00100000005fe2b9
- (void)_updateWithMatchedLocation:(id)arg1;	// IMP=0x00100000005fe215
- (void)_stopNavigationCameraMotion;	// IMP=0x00100000005fe1ff
- (void)_pauseNavigationCameraMotion;	// IMP=0x00100000005fe1e9
- (void)_startNavigationCameraMotionAnimated:(_Bool)arg1;	// IMP=0x00100000005fe185
- (void)insertDimmingOverlayForStaleMapEffectWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000005fe11c
- (_Bool)wantsDefaultDimmingOverlayForStaleMapEffect;	// IMP=0x00100000005fe114
- (_Bool)requiresStaleMapEffect;	// IMP=0x00100000005fe10c
- (void)getCurrentSceneTitleWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000005fdece
- (void)performTeardown;	// IMP=0x00100000005fdb2b
- (void)resignTopContextInChromeViewController:(id)arg1 withAnimation:(id)arg2;	// IMP=0x00100000005fd900
- (void)becomeTopContextInChromeViewController:(id)arg1 withAnimation:(id)arg2;	// IMP=0x00100000005fcf79
- (void)leaveStackInChromeViewController:(id)arg1 withAnimation:(id)arg2;	// IMP=0x00100000005fcf73
- (void)enterStackInChromeViewController:(id)arg1 withAnimation:(id)arg2;	// IMP=0x00100000005fccb5
- (void)prepareToEnterStackInChromeViewController:(id)arg1;	// IMP=0x00100000005fca37
- (id)personalizedItemSources;	// IMP=0x00100000005fc8fd
- (id)fullscreenViewController;	// IMP=0x00100000005fc8eb
- (long long)desiredFloatingControls;	// IMP=0x00100000005fc8e3
@property(readonly, nonatomic) _Bool showsMapView;
@property(readonly, nonatomic) id <MapSelectionManagerDelegate> mapSelectionManagerDelegate;
- (id)mapViewDelegate;	// IMP=0x00100000005fc853
- (id)fullscreenViewControllerDismissalTransition;	// IMP=0x00100000005fc83a
- (id)fullscreenViewControllerPresentationTransition;	// IMP=0x00100000005fc821
- (_Bool)usesDefaultTransitions;	// IMP=0x00100000005fc819
- (_Bool)_anyNavUIForeground;	// IMP=0x00100000005fc788
- (void)_updateDetour;	// IMP=0x00100000005fc25f
- (unsigned long long)_routeMarkerOptionsForMapViewZoom:(unsigned long long)arg1 incidentAlert:(id)arg2;	// IMP=0x00100000005fc24d
- (void)_updateWaypointMarkersWithCurrentWaypoint:(id)arg1 proximity:(unsigned char)arg2;	// IMP=0x00100000005fc10d
- (void)_updateDirectionsAnnotationManagerDisplayedRoutes;	// IMP=0x00100000005fbbe5
- (_Bool)_shouldShowAlternateRoutesForZoom:(unsigned long long)arg1;	// IMP=0x00100000005fbbac
- (void)_receivedNewRoute:(id)arg1 traffic:(id)arg2;	// IMP=0x00100000005fbb17
- (void)_setRoute:(id)arg1;	// IMP=0x00100000005fb65f
- (void)_setupMapView;	// IMP=0x00100000005fb5bd
- (void)setMapView:(id)arg1;	// IMP=0x00100000005fab40
@property(readonly, nonatomic) NavigationSession *navigationSession;
@property(readonly, nonatomic) id <NavActionCoordination> actionCoordinator;
- (void)dealloc;	// IMP=0x00100000005fa848
- (id)initWithPlatformController:(id)arg1;	// IMP=0x00100000005fa3b2
- (_Bool)supportsLockscreen;	// IMP=0x00100000005fa3aa
- (void)didEndDisplayingInLockScreen;	// IMP=0x00100000005fa16c
- (void)willBeginDisplayingInSecureLockScreen;	// IMP=0x00100000005f9dfb

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) MKMapItem *mapItemForLookAroundButton;
@property(readonly, nonatomic) _Bool shouldResetStateAfterResigning;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool wantsMapInsetsToRespectSafeAreaInsets;

@end

